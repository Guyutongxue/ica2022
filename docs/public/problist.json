[{"title":"第三阶段编程练习（2）","id":"95a6dab97323439dae963c3964ab291f","problems":[{"title":"输出二进制补码","id":"42bd3c642fc64d0ba5e9c18e0fef5e29","description":"<p>输入若干int型整数，输出每个整数的二进制补码。</p>","aboutInput":"<p>输入有若干行，除最后一行外，每行包含一个int型整数。最后一行仅包含一个不定的字母，标志着输入结束。我们保证输入的整数不超出int型变量的表示范围</p>","aboutOutput":"<p>对于每个输入的整数，输出一行，即该整数的补码表示。</p>"},{"title":"最小公倍数","id":"f081a25ea51a472589207dfb815567c5","description":"<p>输入两个数，输出其最小公倍数。</p>","aboutInput":"<p>输入两个数（100以内），用逗号隔开。</p>","aboutOutput":"<p>输出它们的最小公倍数。</p>"},{"title":"确定进制","id":"e815adeeb8e44d169ab423252bf85de8","description":"<p>6*9 = 42 对于十进制来说是错误的，但是对于13进制来说是正确的。因为, 6(13) * 9(13) = 42(13)， 而 42(13) = 4 * 13 + 2 = 54(10)\r<br>你的任务是写一段程序读入三个整数p, q和 r，然后确定一个进制 B (2<=B<=16) 使得 p * q = r. 如果 B有很多选择, 输出最小的一个。例如：  p = 11, q = 11, r = 121. 则有 11(3) * 11(3) = 121(3) 因为 11(3) = 1 * 3 + 1 = 4(10) 和 121(3) = 1 * 3^2 + 2 * 3 + 1 = 16(10)。 对于进制 10,有 11(10) * 11(10) = 121(10)。这种情况下，应该输出 3。如果没有合适的进制，则输出 0。\r<br></p>","aboutInput":"<p>输入有 T组测试样例。 T在第一行给出。每一组测试样例占一行，包含三个整数p, q, r。 p, q, r 的所有位都是数字，并且1<=p,q, r<=1,000,000</p>","aboutOutput":"<p>对于每个测试样例输出一行。该行包含一个整数，即使得p * q = r成立的最小的B。如果没有合适的B，则输出 0。</p>"},{"title":"478-3279","id":"5497b7a5b7ff46f7af54526e8a9e4e79","description":"<p>在美国，商家都喜欢用好记的电话号码。人们常用的方法就是把电话号码拼成一个便于记忆的词汇或者短语，比如你可以通过Gino比萨店的电话号码301-GINO来定比萨。另一个方法就是把电话号码分为成组的数字，比如你可以通过必胜客的电话“三个十”：3-10-10-10来定比萨。\r<br>一个七位电话号码的标准形式是xxx-xxxx，如 123-4567。\r<br>通常，电话上的数字与字母的映射关系如下\r<br>A, B, C 映射到 2\r<br>D, E, F 映射到 3\r<br>G, H, I 映射到 4\r<br>J, K, L映射到5\r<br>M, N, O映射到6\r<br>P, R, S映射到7\r<br>T, U, V映射到8\r<br>W, X, Y映射到9\r<br>Q和Z并没有相关的映射。\r<br>你的任务就是把一个七位电话号码转为标准的xxx-xxxx格式，其中x表示数字\r<br></p>","aboutInput":"<p>第一行为输入的电话号码个数n(n<100), 下面n行每行表示一个七位号码，这些号数为了便于记忆可能不是标准格式，但一定是合法的。</p>","aboutOutput":"<p>对于行输入，输出一个标准格式的电话号码</p>"},{"title":"习题(10-7) 玛雅历 (1075)","id":"a09ea2c96b6249a9b3597101dfd0842a","description":"<p>上周末，M.A教授对古老的玛雅有了一个重大发现。从一个古老的节绳（玛雅人用于记事的工具）中，教授发现玛雅人使用了一个一年有365天的叫做Haab的日历。这个Haab日历拥有19个月。在开始的18个月，一个月有20天。这18个月的名字分别是pop, no, zip, zotz, tzec, xul, yoxkin, mol, chen, yax, zac, ceh, mac, kankin, muan, pax, koyab, cumhu. 这些月份中的日期用0到19表示。Haab历的最后一个月叫做uayet，它只有5天，用0到4表示。玛雅人认为这个日期最少的月份是不吉利的，在这个月法庭不开庭，人们不从事交易，甚至没有人打扫屋中的走廊。 \r<br>因为宗教的原因，还玛雅人使用了另一个日历，在这个日历中年被称为Tzolkin(holly年)，一年被分成13个不同的时期，每个时期20天长，每一天用一个数字和一个单词相组合的形式来表示。使用了20个单词：imix, ik, akbal, kan, chicchan, cimi, manik, lamat, muluk, ok, chuen, eb, ben, ix, mem, cib, caban, eznab, canac, ahau。和13个数字1到13。 \r<br>\r<br>注意：年中的每一天都有着明确的描述，比如，在一年的开始，日期如下描述： \r<br>1 imix, 2 ik, 3 akbal, 4 kan, 5 chicchan, 6 cimi, 7 manik, 8 lamat, 9 muluk, 10 ok, 11 chuen, 12 eb, 13 ben, 1 ix, 2 mem, 3 cib, 4 caban, 5 eznab, 6 canac, 7 ahau, and again in the next period 8 imix, 9 ik, 10 akbal . . . \r<br>\r<br>Haab历和Tzolkin历中的年都被数字0，1，：：：表示，数字0表示世界的开始。所以第一天被表示成： \r<br>\r<br>Haab: 0. pop 0 \r<br>\r<br>Tzolkin: 1 imix 0 \r<br>\r<br>请帮助M.A.教授，为他写一个程序可以把Haab历转化成Tzolkin历。</p>","aboutInput":"<p>Haab历中的数据由如下的方式表示： \r<br>日期. 月份 年数 \r<br>\r<br>第一行表示要转化的Haab历的数据量. 下面的每一行表示一个日期，年数小于5000。</p>","aboutOutput":"<p>Tzolkin历中的数据由如下的方式表示： \r<br>天数字 天名称 年数 \r<br>\r<br>第一行表示要转化的Haab历的数据量. 下面的每一行表示一个日期。</p>"}]},{"title":"第三阶段编程练习（1）","id":"a1e5bb7a87ea4ffe8716e66cd7989bb4","problems":[{"title":"井底之蛙","id":"78bc4edd141c4481b13d928df80ea48f","description":"<p>自从上次遇到海龟之后，小青蛙就对大海充满了向往，以至于蚊不香、蝇不爱，连那软绵绵的泥浆躺起来也硌得慌，思量再三小青蛙决定要出去看一看。由于井太深，小青蛙不能直接跳出去，只能白天往上跳一点，加上可恶的井壁那么湿滑，晚上还要下落一些，小青蛙这就犯了难，到底啥时候才能出去了，你能帮帮它么？</p>","aboutInput":"<p>输入为一行，是以空格分隔的三个整数，分别代表井深、白天跳的高度、晚上下滑的高度。</p>","aboutOutput":"<p>输出一个整数，为青蛙跳出去需要的天数</p>"},{"title":"细菌的战争","id":"f11066904af549cb901319ac4d598c49","description":"<p>有两种细菌，一种是有害菌，繁殖能力很强，每小时会繁殖一倍；另一种是有益菌，繁殖能力较弱，每小时能繁殖百分之五（向下取整，也就是说，假设有益菌在某个小时的数量为整数m，下一个小时的数量则为(int)floor(1.05 * m);）。但在单位体积内，当有害菌数量超过一百万时，多出的细菌会因为密度太大而迅速死亡，直到细菌数量下降到一百万。已知每个有益菌每小时能消灭一个有害菌。给定单位体积内有害菌和有益菌的初始数量，请问多少小时后，有害菌将被有益菌消灭干净？</p>","aboutInput":"<p>输入的第一行为一个整数n，表示后边有n组数据。\r<br>每组数据占一行，有两个整数，依次为有害菌和有益菌单位体积中的初始数量。整数之间用一个空格分隔。</p>","aboutOutput":"<p>输出有n行，每行一个整数，为每组数据对应的有害菌将被有益菌消灭干净所用的小时数。</p>"},{"title":"营养与健康","id":"37be695827bb41a3a229e7ce9a993190","description":"<p>随着人们生活水平的日益提高，健康越来越受到大家的关注。营养搭配，合理膳食，开始成为人们日常饮食追求的目标。营养学家希望能在计算机上开发一套饮食指导系统，来帮助人们检查每日饮食搭配是否合理，并提出指导意见。\r<br>假设我们只考虑一种营养成分：钙。已知人体每天需摄入600-1000毫克钙。钙的主要来源有：豆腐，110毫克/100克；牛奶，120毫克/100克；海带，2250毫克/100克；虾米，880毫克/100克。当用户输入四种食物每天的摄入量后，系统就会判断钙的摄入量是否合理。\r<br></p>","aboutInput":"<p>一行，4个整数，分别表示用户每日摄入的豆腐、牛奶、海带、虾米的量，单位克</p>","aboutOutput":"<p>一行，饮食指导系统的反馈结果\r<br>如果摄入过量，输出\"OVER\"；如果摄入不足，输出\"UNDER\"；如果适量，输出\"FINE\"\r<br></p>"},{"title":"求交集","id":"8e817f1fc70849f78a2cbc68d2b57d3b","description":"<p>给定两个整数集合，输出交集，输出时，按元素从小到大的顺序输出，以逗号间隔。\r<br>\r<br>注意：给定的集合中可能有重复元素，但输出的交集中不能有重复元素。如果没有交集，则输出 NULL\r<br>\r<br>例：\r<br>集合A：1,3,5,6,10,6,8,11\r<br>集合B: 2,4,8,6,10,6,12,13\r<br>\r<br>那么，输出为：\r<br>6,8,10</p>","aboutInput":"<p>2行，每行表示一个集合的元素序列，元素之间以逗号间隔，假定每个集合不超出200个元素。</p>","aboutOutput":"<p>两个集合的交集，按元素从小到大输出，以逗号间隔。如果没有交集，则输出 NULL</p>"},{"title":"流感传染","id":"ed547c2b38d6404baec80b766e5cdf02","description":"<p>有一批易感人群住在网格状的宿舍区内，宿舍区为n*n的矩阵，每个格点为一个房间，房间里可能住人，也可能空着。在第一天，有些房间里的人得了流感，以后每天，得流感的人会使其邻居传染上流感，（已经得病的不变），空房间不会传染。请输出第m天得流感的人数。</p>","aboutInput":"<p>第一行一个数字n，n不超过100，表示有n*n的宿舍房间。\r<br>接下来的n行，每行n个字符，’.’表示第一天该房间住着健康的人，’#’表示该房间空着，’@’表示第一天该房间住着得流感的人。\r<br>接下来的一行是一个整数m，m不超过100.</p>","aboutOutput":"<p>输出第m天，得流感的人数</p>"}]},{"title":"第二阶段编程练习（6）","id":"890434181d774b2cad3e5bc9cfd661c0","problems":[{"title":"密切数判断","id":"7724936939ca458181beb1cf19964c82","description":"<p>任意给定两个正整数，如果这两个数的质因数均相同，那么这两个数称为密切数。例如 6 和 12，其质因数均是 2 和 3；因此，6 和 12 是一对密切数。请判断任意给定的两个正整数是否为一对密切数。若是，输出YES，若不是，输出NO 。\r<br></p>","aboutInput":"<p>输入两个正整数，用逗号间隔</p>","aboutOutput":"<p>若是密切数，输出YES；\r<br>若不是，输出NO；\r<br></p>"},{"title":"挂号医师","id":"8ed8d3c5081f4eec86b6d38c478406d8","description":"<p>某医院有N位医生（编号依次为1，2，…，N）负责接诊。挂号医师把新来的病人安排到排队人数最少的医生处就诊，如果两位医生的排队人数相同，则优先安排到编号小的医生处就诊。现给出N位医生的初始排队人数，请输出下一位到来的病人所就诊医生的编号。</p>","aboutInput":"<p>共N+1行输入。 \r<br>第1行包含一个整数：N，医生数量，0 < N <＝ 100。 \r<br>第2, 3, ..., N+1行，每行包含一个非负整数，依次对应于编号为1,2, ..., N的医生的当前排队人数。 </p>","aboutOutput":"<p>输出1行，是下一位病人所就诊的医生编号。</p>"},{"title":"活动选择","id":"cdca701e9a92459a89238351134841c4","description":"<p>北京大学有多个社团申请在圣诞节当天在图书馆南配楼举办 n 个活动，已知每个活动的开始时间和结束时间，请问如何安排，才能让可举办的活动最多？ \r<br>（注：如果两个活动的开始结束时间分别为（3,4）(4,5)，这两个活动是相容的）</p>","aboutInput":"<p>第一行数据为整数n (n < 100,000)，表示申请举办活动的个数； \r<br>其余n行每行两个整数，分别是活动的开始时间和结束时间（数值 < 1,000,000）。\r<br></p>","aboutOutput":"<p>输出一个整数，为所能举办的活动的最大个数</p>"},{"title":"人工智能","id":"b325635ad338475389e29b4651e4bbbc","description":"<p>人工智能一直是计算机学所追求的一个很高的境界，全世界的计算机学家们至今仍在不断努力力求达到这个境界。\r<br>这道题也跟“人工智能”有关。\r<br>学过初中物理的同学都应该知道物理学中的这个公式P（功率）= U（电压）* I（电流）。如果给定其中的任意两个值，第三个值都是很容易求的，这个就是本题的任务。</p>","aboutInput":"<p>既然是人工智能，不要妄想题目会直接告诉你其中的某两个值。\r<br>输入的第一行是一个整数，表示有多少组测试数据。以下每一行是一组测试数据，分别为一句英文句子。你需要从中识别已知和未知，并且求出未知量。需要说明的是，句子中I，U，P三个物理量中已知的两个一定会以I=xA, U=xV，P=xW这样的样式给出（注意单位以及大小写）。在这样的表达式中，可能会在单位（A，V，W）的前面出现表示数量级的字母m、k、M，分别表示毫，千，兆。</p>","aboutOutput":"<p>对于每一组数据，按以下格式输出三行：\r<br>首先输出\"Problem #k\"，k表示当前是第k组测试数据。\r<br>然后在下一行输出结果，结果要求单位必须为A，V或者W，并且保留两位小数。\r<br>最后再输出一个空行。\r<br>具体可以参见样例输出。</p>"},{"title":"单词排序","id":"32badeb972b646f9913b3dd96c305fc9","description":"<p>输入一行单词序列，相邻单词之间由1个或多个空格间隔，请按照字母顺序输出这些单词（即按照字符串中字母的ASCII码排序，区分大小写，当首字母相同时，比较第2个字母，依次类推），要求重复的单词只输出一次。</p>","aboutInput":"<p>一行单词序列，最少1个单词，最多100个单词，每个单词长度不超过50，单词之间用至少1个空格间隔。</p>","aboutOutput":"<p>按字母顺序输出这些单词，重复的单词只输出一次。</p>"}]},{"title":"第二阶段编程练习（5）","id":"d6c1a9fac148489eb7f0bbbfaa7583bf","problems":[{"title":"计算鞍点","id":"5fef17c882414a38bcd780094aa4db5b","description":"<p>输入一个二维 (5*5)数组，每行只有一个最大值，每列只有一个最小值。\r<br>如果存在鞍点，则输出鞍点所在的位置（行和列），不存在鞍点时，要输出“not found”。\r<br>鞍点指的是数组中的一个元素，它是所在行的最大值，并且是所在列的最小值。\r<br>例如：在下面的例子中（第4行第1列的元素就是鞍点，值为8 ）。\r<br>11 3 5 6 9\r<br>12 4 7 8 10\r<br>10 5 6 9 11\r<br>8 6 4 7 2\r<br>15 10 11 20 25\r<br></p>","aboutInput":"<p>输入包含一个5行5列的矩阵</p>","aboutOutput":"<p>如果存在鞍点，输出鞍点所在的行、列及其值，如果不存在，输出\"not found\"</p>"},{"title":"习题(15-5) 五户共井问题","id":"bb0a6f6b779d44a1b040e83e9a6191dc","description":"<p>有A, B, C, D, E五家人共用一口井，已知井深不超过k米。A, B, C, D, E的绳长各不相同，而且厘米表示的绳长一定是整数。\r<br>从井口放下绳索正好达到水面时：\r<br>(a)需要A家的绳n1条接上B家的绳1条\r<br>(b)需要B家的绳n2条接上C家的绳1条\r<br>(c)需要C家的绳n3条接上D家的绳1条\r<br>(d)需要D家的绳n4条接上E家的绳1条\r<br>(e)需要E家的绳n5条接上A家的绳1条\r<br>问井深和各家绳长。\r<br></p>","aboutInput":"<p>输入只有1行。包括空格分开的6个整数。\r<br>第一个整数k（1 <= k <= 20)，代表井的最大深度（单位：米）。\r<br>接下来是5个正整数n1, n2, n3, n4, n5。这五个整数的含义见上面的题目描述。</p>","aboutOutput":"<p>输出只有1行。\r<br>如果找到了可行解，就输出6个整数，用空格分开，分别代表井的深度和A, B, C, D, E的绳长（单位都是厘米）。\r<br>如果有多组可行解，输出井的深度最小的那组解。\r<br>如果不存在可行解，就输出一行：\r<br>not found</p>"},{"title":"比饭量","id":"20e9b6bf9ac34be9a8c911136e9c8bbb","description":"<p>3个人比饭量，每人说了两句话：\r<br>A说：B比我吃的多，C和我吃的一样多\r<br>B说：A比我吃的多，A也比C吃的多\r<br>C说：我比B吃得多，B比A吃的多。\r<br>事实上，饭量和正确断言的个数是反序的关系。\r<br>请编程按饭量的大小输出3个人的顺序（可按升序输出）。\r<br>备注：三人的饭量和正确断言数都各不相同</p>","aboutInput":"<p>无输入</p>","aboutOutput":"<p>按照饭量大小输出3人顺序，比如：\r<br>ABC</p>"},{"title":"判断闰年","id":"8e2acb11264d40f18fb3acaec733f720","description":"<p>判断某年是否是闰年。</p>","aboutInput":"<p>输入只有一行，包含一个整数a(0 < a < 3000)</p>","aboutOutput":"<p>一行，如果公元a年是闰年输出Y，否则输出N</p>"},{"title":"将两个排序后的数组合并","id":"0bf2c53607454475bb48a2155f0ec84f","description":"<p>假设你给出两个已经经过排序的数组A[10]与B[10]，\r<br>那么利用归并排序的思想，将两个数组合并并且再排序为一个新的数组C[20]\r<br>并且把C输出的屏幕上。</p>","aboutInput":"<p>两行 每行十个元素</p>","aboutOutput":"<p>一行 总共20个元素</p>"}]},{"title":"2021年期中考试题（选做，不计入成绩）","id":"ae2a33c44c864a368320c55bebafe53b","problems":[{"title":"数字消失","id":"3924a620c2d54b74b442fd74e817ef38","description":"<p>有一个包含n个整数的序列，序列中每个数都在[1, n]内，[1,n]中的数有些在这个序列中出现了1次或多次，而有些数没出现过。请输出[1, n]的整数中所有没出现过的整数。其中2 <= n <= 100.</p>","aboutInput":"<p>输入包括两行：\r<br>第1行一个整数n\r<br>第2行共n个整数，表示序列中的n个数，相互之间用空格隔开\r<br></p>","aboutOutput":"<p>输出若干行，按从小到大的顺序，每行输出一个没出现的整数。</p>"},{"title":"病人分类","id":"881767092c2b46a89b4daafae5e3ed2e","description":"<p>就医时对不同症状的病人分类是非常重要的，这样可以为病人找最专业的医生来就诊。目前一共有n个病人，编号是1~n，最开始每个病人的症状未被分类。每个病人属于一个单独的集合。\r<br>现在要进行m个操作，操作共有两种：\r<br>\r<br>“M a b”，由于症状相同，将编号为a和b的两个病人所在集合合并，如果两个病人已经在同一个集合中，则忽略这个操作；\r<br>\r<br>“Q a b”，询问编号为a和b的两个病人是否在同一个集合中；</p>","aboutInput":"<p>第一行输入整数n和m，1≤n,m≤100\r<br>\r<br>接下来m行，每行包含一个操作指令，指令为“M a b”或“Q a b”中的一种。\r<br></p>","aboutOutput":"<p>对于每个询问指令”Q a b”，都要输出一个结果，如果a和b在同一集合内，则输出“Yes”，否则输出“No”。每个结果占一行。</p>"},{"title":"习题(11-7) 最匹配的矩阵","id":"913dd44108224516a928c2e99033ecdb","description":"<p>给定一个矩阵A[m,n](100 &ge; m &ge; 1,100 &ge; n &ge; 1) 和另一个矩阵B[r,s],有0 &lt; r &le; m, 0 &lt; s &le; n，A、B所有元素值都是小于100的正整数。求A中和B最匹配的矩阵C[r,s]，所谓最匹配是指B和C的对应元素差值的绝对值之和最小，如果有多个最佳匹配只需输出第一个（行号最小，行号相同时，列号最小）。</p>","aboutInput":"<p>第一行是m和n，以空格隔开\r<br>以下m行每行有n个整数，表示A矩阵中的各行\r<br>第m+2行为r和s，以空格隔开\r<br>以下r行每行有s个整数，表示B矩阵中的各行</p>","aboutOutput":"<p>求出A中和B最匹配的矩阵C并输出之\r<br>注意：每一个数字后面都有空格，包括一行中的最后一个数字\r<br></p>"},{"title":"节约网费","id":"fe6d76df8b8d4fa185b3428cb6b35f66","description":"<p>有一款游戏，它按照玩家的游戏时长分 n+1 段收费递增： \r<br>1. 玩家游戏的前 a[1] 个小时，收费为每小时 b[1] 元。\r<br>2. 从第 a[1]+1 个小时开始到第 a[2] 个小时，收费为每小时 b[2] 元 。 \r<br>...\r<br>3. 从第 a[n-1]+1 个小时开始到第 a[n] 个小时，收费为每小时 b[n] 元。\r<br>4. 从第 a[n]+1 个小时开始，收费为每小时 b[n+1] 元。 \r<br>其中，1 <= a[1] < a[2] < ... < a[n] <= 1000000, 1 <= b[1] < b[2] < ... < b[n+1] <= 1000。\r<br>\r<br>小明打算玩 h 小时个游戏，但是他觉得游戏时长太多的时候，收费太贵，因此他打算开 k 个账号从而减少费用。\r<br>\r<br>具体来说，小明打算选择 k 个非负整数 c[1] ... c[k] 满足 c[1] + c[2] + ... + c[k] = h，并在第 i 个账号上玩 c[i] 个小时。\r<br>\r<br>小明希望你能帮他决定一下 c[1] ... c[k]，使得他花的钱最少。 </p>","aboutInput":"<p>第一行输入两个整数 n,k,h (1<=n,k<=1000,1<=h<=1000000)。\r<br>\r<br>第二行输入 n 个整数，表示 a[i]。第三行输入 n+1 个整数，表示 b[i]。</p>","aboutOutput":"<p>输出一行一个整数，表示最少的花费。 </p>"},{"title":"爱读书的Tim（已选-中）","id":"f79e8859194a40fa884c8cfc031aede3","description":"<p>Tim穿越到荒岛时，灯神还给了他一本天书，这本书的某些页十分晦涩难懂，需要阅读完另一页的内容才能完全理解。而有些页则比较通俗易懂，阅读完当前页即可理解。\r<br>\r<br>Tim是一个喜欢钻研的小朋友，他每天都会从这本书中页数最小的从未读过的一页开始读，读到完全理解这一页的内容为止。例如对于当Tim某一天要读这本书的第a页时，这一页要求读完第b页才能理解，于是Tim又要去读第b页，而第b页要求读完第c页才能理解，于是Tim又要去读第c页，而第c页不需要读别的页就可以理解，或是需要读的页在之前已经读过了，最终Tim这一天读了a, b, c这三页内容。\r<br>\r<br>Tim想知道自己需要花多少天才能读完这本书？</p>","aboutInput":"<p>第一行一个整数n,表示这本书有n页\r<br>第二行有n个正整数a1,a2,……,an，其中ai表示要读完第i页的内容要先读完第ai页的内容。（ai>=i）</p>","aboutOutput":"<p>一个正整数，表示读完这本书需要的时间</p>"},{"title":"邮局选址","id":"961f75a111524f3ca5276f92b743a371","description":"<p>在一个偏远的地区修建一个邮局，希望选择一个邮局地址，使得邮局到所有的这个地区所有村落的距离之和最小。 在这个问题中，我们假设所有村子位于一条直线上，每一个村子对应一个小于 100000 的整数x，代表村子在这个直线上的位置，邮局可以选择在直线上的任意一点，可以在一个村落中，也可以不位于村落中。</p>","aboutInput":"<p>输入由多组测试数据构成。\r<br>第一行为一个整数T，代表了测试数据的组数。\r<br>每组测试数据中 第一行是一个正整数n，输入数据中保证n大于等于2\r<br>第二行为n个数字，代表村落的坐标值。输入数据中保证村落的输入顺序按坐标从小到大排列。</p>","aboutOutput":"<p>对于每组测试数据，每个测试数据输出一行，为一个整数，输出邮局到所有村落的距离之和。</p>"},{"title":"魔王军队","id":"58a56eaa6f814319b0bd5a7cc153d2ce","description":"<p>魔王需要带领他的军队从A城堡进攻B城堡。为了追踪他的兵力，他分发了很多观察之石。每颗观察之石的最大有效观察半径R个单位，并且必须被一个士兵携带（观察之石不能处于没有士兵的空中）。帮助魔王计算出为了追踪所有部队所需要的观察之石的最小数量。</p>","aboutInput":"<p>输入包含多个实例。每个测试实例第一行为两个整数：R，n。R（0<=R<=1000）是观察之石的有效半径，n（1<=n<=1000）为魔王军队的士兵数量。接下来的1行包含n个整数，分别是每个士兵的位置x_1,x_2,…,x_n（0<=x_i<=50000）。如果某个实例输入的R和n 均为-1，则结束。</p>","aboutOutput":"<p>针对每个测试实例，输出一行整数表示所需的最小数量。</p>"},{"title":"日期串","id":"f96219478855493bb90bb5b05cbfa758","description":"<p>今天是 2021 年 1 月 3 日，定义日期字符串 s 为把从今天开始到 9999 年 12 月 31 日的日期依次写下得到的字符串：\r<br>\r<br>s = 202101032021010420210105...99991231\r<br>\r<br>现在，给出 n 个数字 a[1] ... a[n]，你需要对于每一个数字求出它第一次在 s 中出现的位置（s 的下标从 1 开始）。\r<br></p>","aboutInput":"<p>第一行输入一个整数 n，表示数字的个数 (1 <= n <= 100)。\r<br>\r<br>接下来每行输入一个整数，表示 a[i] (0 <= a[i] <= 100)。</p>","aboutOutput":"<p>输出 n 行，每行一个整数，表示答案。如果 a[i] 在 s 中没有出现，则输出 -1. </p>"},{"title":"操作数列","id":"c2fbaafc367d48f781fed7b87c33746a","description":"<p>给定一个初始数字集合，对其做如下两种操作： \r<br>\r<br>1. 添加一个新的数字 \r<br>2. 将集合中当前最小的数字取出（输出并删除），如果最小的数字有多个，只取出其中一个。 \r<br></p>","aboutInput":"<p>输入文件第一行为整数n，接下来n个整数，表示初始的数字集合。 \r<br>随后是一个整数m，表示操作的个数。接下来m行，每行表示一个操作，有两种输入格式： \r<br>\r<br>ADD x：表示往数字集合中添加一个x \r<br>EXTRACT-MIN：表示取出当前数字集合中最小的数 \r<br>\r<br>注意数字集合中的数随时都有重复。 \r<br>\r<br>n>=0 \r<br>m>=0 \r<br>n+m<=200000</p>","aboutOutput":"<p>对于每一个EXTRACT-MIN，输出最小的数值。如果当前EXTRACT-MIN操作时集合为空，则输出\"NULL\"</p>"}]},{"title":"2020年期中考试题（选做，不计入成绩）","id":"83eb777d45ae49419b1ceefb2f91d15c","problems":[{"title":"甲流病人初筛","id":"eeb3ea42f61f4ddd98858758c34221d5","description":"<p>目前正是甲流盛行时期，为了更好地进行分流治疗，医院在挂号时要求对病人的体温和咳嗽情况进行检查，对于体温超过37.5度（含等于37.5度）并且咳嗽的病人初步判定为甲流病人（初筛）。现需要统计某天前来挂号就诊的病人中有多少人被初筛为甲流病人。</p>","aboutInput":"<p>第一行是某天前来挂号就诊的病人数n\r<br>其后有n行，每行是病人的信息，包括三个信息：姓名（字符串，不含空格，最多8个字符）、体温（float）、是否咳嗽（整数，1表示咳嗽，0表示不咳嗽）\r<br></p>","aboutOutput":"<p>行数不确定，但最后一行是一个整数m，表示被初筛为甲流的病人数，之前有m行，每行按输入顺序输出病人的姓名</p>"},{"title":"小于当前数的数","id":"3292e0e1ecec4a289287d567018b7b11","description":"<p>给你一个数组 nums，对于其中每个元素 nums[i]，请你统计数组中比它小的所有数字的数目。\r<br>\r<br>换而言之，对于每个 nums[i] 你必须计算出有效的 j 的数量，其中 j 满足 j != i 且 nums[j] < nums[i]。</p>","aboutInput":"<p>第一行是一个整数 n，表示数组大小。\r<br>接下来 n 行，每行表示数组中的一个数。\r<br>\r<br>0 <= n <= 1000, 每个数都在int可以表示的范围内.</p>","aboutOutput":"<p>n 行，每行代表数组中比它小的数的个数。\r<br>\r<br>如果没有要输出的数据，输出\"None\"。</p>"},{"title":"换酒问题","id":"0d2d948fdedd4815a82ffc36b77a1138","description":"<p>小区便利店正在促销，用 a 个空酒瓶可以兑换一瓶新酒。你购入了 b 瓶酒。\r<br>\r<br>如果喝掉了酒瓶中的酒，那么酒瓶就会变成空的。\r<br>\r<br>请你计算最多能喝到多少瓶酒。</p>","aboutInput":"<p>用空格分开的两个整数，分别为a和b。\r<br>\r<br>1 < a <= 1000000000,\r<br>0 <= b <= 1000000000.</p>","aboutOutput":"<p>能喝到多少瓶酒。</p>"},{"title":"小茗同学很方","id":"305643abae004a649bfd56955f99c70b","description":"<p>n(n不超过1000)个有蛀牙的小朋友被老师组织集体去拔牙，但是排队的时候由于所有小朋友都害怕拔牙，所以没人主动排在前面。这时老师想了一个有趣的方法，所有小朋友排成一列，按照顺序进行编号（编号从1开始），并从1依次进行报数，数到m的小朋友去拔牙，然后后面的小朋友再从1开始报数，下一个数到m的小朋友去拔牙…依此循环往复。小茗同学既不想先去拔牙，也不想被留到最后再拔，于是他决定第k(k<=n)个去拔。请你帮小茗同学想想他应该排在第几个位置才能“如愿以偿”。</p>","aboutInput":"<p>n,m,k</p>","aboutOutput":"<p>一个整数，小茗在队列中的位置(从1开始)</p>"},{"title":"重排空格","id":"af7d880117294e568696ee3ba04e0543","description":"<p>给你一个字符串 text，该字符串由若干被空格包围的单词组成。每个单词由一个或者多个小写英文字母组成，并且两个单词之间至少存在一个空格。\r<br>请你重新排列空格，使每对相邻单词之间的空格数目都  相等  ，并尽可能  最大化  该数目。如果不能重新平均分配所有空格，请  将多余的空格放置在字符串末尾  ，这也意味着输出的字符串应当与原字符串的长度相等。</p>","aboutInput":"<p>一行由小写英文字母和空格组成的字符串。\r<br>\r<br>字符串长度不超过1000，至少包含一个单词。</p>","aboutOutput":"<p>一行和原字符串长度相等的字符串。</p>"},{"title":"1052 花生问题","id":"e90207884099480bb850f80866c54e2a","description":"<p>鲁宾逊先生有一只宠物猴，名叫多多。这天，他们两个正沿着乡间小路散步，突然发现路边的告示牌上贴着一张小小的纸条：“欢迎免费品尝我种的花生！??熊字”。 \r<br>\r<br>鲁宾逊先生和多多都很开心，因为花生正是他们的最爱。在告示牌背后，路边真的有一块花生田，花生植株整齐地排列成矩形网格（如图1）。有经验的多多一眼就能看出，每棵花生植株下的花生有多少。例如在图2中的花生田里，只有位于(2, 5), (3, 7), (4, 2), (5, 4)的植株下长有花生，个数分别为13, 7, 15, 9。我们假定多多在每个单位时间内，可以做下列四件事情中的一件：(1)从路边跳到最靠近路边（即第一行）的某棵花生植株；(2)从一棵植株跳到前后左右与之相邻的另一棵植株；(3)采摘一棵植株下的花生；(4)从最靠近路边（即第一行）的某棵花生植株跳回路边。 \r<br>\r<br><img src=\"1928_1.jpg\">\r<br>\r<br>为了训练多多的算术，鲁宾逊先生说：“你先找出花生最多的植株，去采摘它的花生；然后再找出剩下的植株里花生最多的，去采摘它的花生；依此类推，不过你一定要在我限定的时间内回到路边。” 例如在图2中，沿着图示的路线，多多在21个单位时间内，最多可以采到37个花生。 \r<br>\r<br>现在给定一块花生田的大小和花生的分布，请问在限定时间内，多多最多可以采到多少个花生？注意可能只有部分植株下面长有花生，假设这些植株下的花生个数各不相同。</p>","aboutInput":"<p>输入第一行代表组数T。\r<br>之后每组第一行包括三个整数，M, N和K，用空格隔开；表示花生田的大小为M * N（1 <= M, N <= 20），多多采花生的限定时间为K（0 <= K <= 1000）个单位时间。接下来的M行，每行包括N个非负整数，也用空格隔开；第i + 1行的第j个整数Pij（0 <= Pij <= 500）表示花生田里植株(i, j)下花生的数目，0表示该植株下没有花生。</p>","aboutOutput":"<p>输出包括T组，每一行代表一组，只包含一个整数，即在限定时间内，多多最多可以采到花生的个数。</p>"},{"title":"过河问题","id":"f4a4e2f96e494992921fcbbb180561f5","description":"<p>n个人想要过一条河,河上只有一条小船,这条船只能容纳两个人,因此这n个人想要全部过河的话就必须来回很多次.每个人划船的速度有所不同,两个人一起的时候船的速度是划得较慢的人的速度.请你找出一种策略使得他们在尽可能短的时间内过河.</p>","aboutInput":"<p>第一行包括一个正整数t,表示有t组数据.\r<br>每组数据两行,第一行是人数n(n&lt;=1000),第二行是n个人各自过河所需的时间(不大于100).</p>","aboutOutput":"<p>输出最短时间</p>"},{"title":"1140 最短前缀","id":"c5e8bb080d2041ff8a7d34c5dbe02c2c","description":"<p>一个字符串的前缀是从该字符串的第一个字符起始的一个子串。例如 \"carbon\"的字串是: \"c\", \"ca\", \"car\", \"carb\", \"carbo\", 和 \"carbon\"。注意到这里我们不认为空串是子串, 但是每个非空串是它自身的子串. 我们现在希望能用前缀来缩略地表示单词。例如, \"carbohydrate\" 通常用\"carb\"来缩略表示. 现在给你一组单词, 要求你找到唯一标识每个单词的最短前缀 \r<br>在下面的例子中，\"carbohydrate\" 能被缩略成\"carboh\", 但是不能被缩略成\"carbo\" (或其余更短的前缀) 因为已经有一个单词用\"carbo\"开始 \r<br>一个精确匹配会覆盖一个前缀匹配，例如，前缀\"car\"精确匹配单词\"car\". 因此 \"car\" 是 \"car\"的缩略语是没有二义性的 , “car”不会被当成\"carriage\"或者任何在列表中以\"car\"开始的单词.</p>","aboutInput":"<p>输入包括至少2行，至多1000行. 每行包括一个以小写字母组成的单词，单词长度至少是1，至多是20.</p>","aboutOutput":"<p>输出的行数与输入的行数相同。每行输出由相应行输入的单词开始，后面跟着一个空格接下来是相应单词的没有二义性的最短前缀标识符。</p>"}]},{"title":"第二阶段编程练习（4）","id":"2a55e09b9b144517b0cfd7b86938d7c5","problems":[{"title":"跳水比赛","id":"2094106509124eb7ade59242fcc6d9ca","description":"<p>5位跳水高手将参加10米跳台决赛，有好事者让5人据实力预测比赛结果：\r<br>\r<br> A选手说：B第二；我第三。\r<br> B选手说：我第二；E第四。\r<br> C选手说：我第一；D第二。\r<br> D选手说：C最后；我第三。\r<br> E选手说：我第四；A第一。\r<br>\r<br>决赛成绩公布之后，每位选手的预测都只对了一半，即一对一错。\r<br>请编程解出比赛的实际名次。</p>","aboutInput":"<p>无。</p>","aboutOutput":"<p>输出5行。第1行输出A的名次，名次从高到低分别用1、2、3、4、5表示；第2、3、4、5行分别输出B、C、D、E的名次。</p>"},{"title":"根据日期求星期","id":"4c4f4babd4104d7f8e8b28a6575a411a","description":"<p>在不同的国家和地区，时间表示方法各不相同。例如同是2006年5月1日，可以表示为2006-May-01、May-01-2006、01-May-2006等等。现假定年使用形如 yyyy 的四个数字表示、月使用形如 Mmm 的英文月份简写表示，日使用形如 dd 的两个数字表示，他们之间使用符号 - 或 / 分隔。但他们的在日期中出现的前后顺序不定，请写一个程序，对任意满足本题约束的日期字符串，求该日期是星期几。</p>","aboutInput":"<p>输入有多行，第一行是一个整数n，表示有多少个待处理的日期字符串。\r<br>接着是n行日期字符串，每行一个。\r<br>日期范围从1900年1月1日至2099年12月31日。</p>","aboutOutput":"<p>输出有n行，输出对应日期的星期的英文缩写。缩写前后不应有空白字符或其他字符。</p>"},{"title":"单词翻转","id":"fcbfdb4ff53b4d2e8786a18349b20914","description":"<p>输入一个句子（一行），将句子中的每一个单词翻转后输出</p>","aboutInput":"<p>只有一行，为一个字符串，不超过500个字符。单词之间以空格隔开。</p>","aboutOutput":"<p>翻转每一个单词后的字符串</p>"},{"title":"进制计算","id":"dc12f3280a0743b09d54847edae05c0b","description":"<p>将两个其他进制的数求和，并以某进制的方式输出\r<br>（最大为16进制，超出9的数字分别用 a、b、c、d、e、f表示）</p>","aboutInput":"<p>输入共三行，第一行两个数，一个为进制数，一个为该进制的数值\r<br>第二行和第一行含义相同\r<br>第三行一个数，为以什么进制输出</p>","aboutOutput":"<p>输出为两个数的和，并以要求的进制打印</p>"},{"title":"统计单词","id":"da7f4a3eadf4448d98cca4006c43b640","description":"<p>计算机信息管理免不了要涉及到文本处理的问题，而在众多处理方式中对一句（段）话中单词数的统计是非常基本也是十分重要的一个环节。</p>","aboutInput":"<p>一句话，由英文字母，数字及常用标点符号组成。</p>","aboutOutput":"<p>统计句子中各单词出现的次数，并按单词在句子中第一次出现的顺序输出。\r<br>输出包括若干行，每一行是一个单词，空格再跟着该单词在句子中出现的次数。</p>"},{"title":"子串定位","id":"b672274bc30a4243af36f8968e8371b4","description":"<p>两个单词 s 和 w ，判断 s 出现在 w 中第一次出现的位置。</p>","aboutInput":"<p>输入只有一行，第一个词 s 和第二个单词 w ，单词之间以一个空格分隔。每个字符串的长度都小于50。并且输入保证s一定是w的一个子串。</p>","aboutOutput":"<p>输出也只有一行，s 在 w 中出现的位置。</p>"},{"title":"文字排版","id":"bbd13e2c8a704d1aa1305051e337735d","description":"<p>给一段英文短文，单词之间以空格分隔（每个单词应包括其前后紧邻的标点符号）。请将短文重新排版，要求如下：\r<br>每行不超过80个字符；每个单词居于同一行上；在同一行的单词之间以一个空格分隔；行首和行尾都没有空格。\r<br></p>","aboutInput":"<p>第一行是一个整数n，表示英文短文中单词的数目. 其后是n个以空格分隔的英文单词（单词包括其前后紧邻的标点符号，且每个单词长度都不大于40个字母）。</p>","aboutOutput":"<p>排版后的多行文本，每行文本字符数最多80个字符，单词之间以一个空格分隔，每行文本首尾都没有空格。</p>"}]},{"title":"第二阶段编程练习（3）","id":"8bc49562ee364dbe970b0d8c79c466a1","problems":[{"title":"侃侃而谈的四位朋友","id":"0a5770339ee64757af4be666c34394b7","description":"<p>某宾馆来了四位外宾朋友，他们可能使用中、英、法、日4种语言。现已知：\r<br>A．甲、乙、丙各会两种语言，丁只会一种语言；\r<br>B．有一种语言4人中有3人都会；\r<br>C．甲会日语，丁不会日语，乙不会英语；\r<br>D．甲与丙、丙与丁不能直接交谈，乙与丙可以直接交谈；\r<br>E．没有人既会日语，又会法语。\r<br>请问：甲乙丙丁各会什么语言？</p>","aboutInput":"<p>无</p>","aboutOutput":"<p>按照甲乙丙丁的顺序，输出他们各自会的语言。每个人输出一行，如会多种语言则用空格分割。其中，中、英、法、日语分别用1、2、3、4表示。</p>"},{"title":"寻找平面上的极大点","id":"d589d199fab6472dbb618ac21307742a","description":"<p>在一个平面上，如果有两个点(x,y),(a,b),如果说(x,y)支配了(a,b)，这是指x>=a,y>=b;\r<br>用图形来看就是(a,b)坐落在以(x,y)为右上角的一个无限的区域内。\r<br>给定n个点的集合，一定存在若干个点，它们不会被集合中的任何一点所支配，这些点叫做极大值点。\r<br>编程找出所有的极大点，按照x坐标由小到大，输出极大点的坐标。\r<br>本题规定：n不超过100，并且不考虑点的坐标为负数的情况。\r<br></p>","aboutInput":"<p>输入包括两行，第一行是正整数n，表示是点数，第二行包含n个点的坐标，坐标值都是整数，坐标范围从0到100，输入数据中不存在坐标相同的点。</p>","aboutOutput":"<p>按x轴坐标最小到大的顺序输出所有极大点。\r<br>输出格式为:(x1,y1),(x2,y2),...(xk,yk)\r<br>注意：输出的每个点之间有\",\"分隔,最后一个点之后没有\",\",少输出和多输出都会被判错</p>"},{"title":"例题(5.9) 肿瘤面积 (1111)","id":"2cdb086626e143549b4b3fe8af035a2e","description":"<p>在一个正方形的灰度图片上，肿瘤是一块矩形的区域，肿瘤的边缘所在的像素点在图片中用0 表示。其它肿瘤内和肿瘤外的点都用255 表示。现在要求你编写一个程序，计算肿瘤内部的像素点的个数（不包括肿瘤边缘上的点）。已知肿瘤的边缘平行于图像的边缘。</p>","aboutInput":"<p>只有一个测试样例。第一行有一个整数n，表示正方形图像的边长。其后n 行每行有n 个整数，取值为0 或255。整数之间用一个空格隔开。已知n 不大于1000。</p>","aboutOutput":"<p>输出一行，该行包含一个整数，为要求的肿瘤内的像素点的个数。</p>"},{"title":"单词倒排","id":"b06fc1d576e048c88885b8ddecc49f09","description":"<p>编写程序，读入一段英文(英文中不包含标点)，将所有单词的顺序倒排并输出，其中单词以空格分隔。</p>","aboutInput":"<p>输入为一个字符串（字符串长度最大为100）</p>","aboutOutput":"<p>输出为按要求排续后的字符串</p>"},{"title":"判断字符串是否为回文","id":"fc2753028c0140cebcaa52bce25d17fd","description":"<p>编程，输入一个字符串，输出该字符串是否回文。</p>","aboutInput":"<p>输入为一行字符串（字符串中没有空白字符，字符串长度不超过100）。</p>","aboutOutput":"<p>如果字符串是回文，输出yes；否则，输出no。</p>"},{"title":"例题(13.8) 出书最多","id":"a6a15926ba4e4af08fc6d7cb73339aaf","description":"<p>假定图书馆新进了m（10 &le; m &le; 999）本图书，它们都是由n（2 &le; n &le; 26）个作者独立或相互合作编著的。假设m本图书编号为整数（1到999），作者的姓名为字母（'A'到'Z'），请根据图书作者列表找出参与编著图书最多的作者和他的图书列表。</p>","aboutInput":"<p>第一行为所进图书数量m，其余m行，每行是一本图书的信息，其中第一个整数为图书编号，接着一个空格之后是一个由大写英文字母组成的没有重复字符的字符串，每个字母代表一个作者。</p>","aboutOutput":"<p>输出有多行：\r<br>第一行为出书最多的作者字母；\r<br>第二行为作者出书的数量；\r<br>其余各行为作者参与编著的图书编号（按输入顺序输出）。</p>"},{"title":"提取数字串按数值排序","id":"fc28ba2ceee240c1a64e13d97c5364c4","description":"<p>输入一串不超过300个字符的符号序列，请将其中的所有数字串提出，并将每个数字串作为整数看待（假设可以用int 表示），按从小到大顺序输出结果，输出的整数之间以逗号间隔。如果没有数字，则输出0；例如：*1234.345#6781ad9jk81-11101?aght88ir09kp，其中的整数包括：1234，345，6781，9，81，11101，88，9，从小到大排序后，应该输出：\r<br>9，9，81，88，345，1234，6781，11101\r<br></p>","aboutInput":"<p>在一行内输入一串符号</p>","aboutOutput":"<p>从小到大排序的整数序列，如果没有数字，则输出0；</p>"}]},{"title":"第二阶段编程练习（2）","id":"a092216a60664e379fcbf2ad998e0b55","problems":[{"title":"计算数据的方差","id":"b4aa971722e14998962f8600a79d7446","description":"<p>读入一组大小为n(n<=10010)个样本数据（双精度浮点数），求他们的均值E和方差D。</p>","aboutInput":"<p>第一个整数为n，剩余n个双精度浮点数为样本数据。</p>","aboutOutput":"<p>输出为一行，均值E和方差D，两数之间用一个空格分隔，精确到小数点后5位。</p>"},{"title":"统计字母和数字个数","id":"a741f641f30342efac0bf176b87ccffe","description":"<p>药学院附属小学于2018年将编程正式加入校园课程，要求所有课程均要结合编程进行教学，于是，老师药驰盖给同学们布置了一道家庭作业，要求利用编程，统计出一串乱码中的大写字母个数，小写字母个数以及数字个数，但药老师自己不会编程，所以麻烦你帮忙写一份作为标准答案。</p>","aboutInput":"<p>一行长度为n的英文字母（0 < n <=256）</p>","aboutOutput":"<p>一行，大写字母个数，小写字母个数以及数字个数，均为整数，两数之间用一个空格隔开</p>"},{"title":"肿瘤检测","id":"60dce01b853445f7a4bb2f6e019c2df8","description":"<p>一张CT扫描的灰度图像可以用一个N*N（0< N< 100）的矩阵描述，矩阵上的每个点对应一个灰度值（整数），其取值范围是0-255。我们假设给定的图像中有且只有一个肿瘤。在图上监测肿瘤的方法如下：如果某个点对应的灰度值小于等于50，则这个点在肿瘤上，否则不在肿瘤上。我们把在肿瘤上的点的数目加起来，就得到了肿瘤在图上的面积。任何在肿瘤上的点，如果它是图像的边界或者它的上下左右四个相邻点中至少有一个是非肿瘤上的点，则该点称为肿瘤的边界点。肿瘤的边界点的个数称为肿瘤的周长。现在给定一个图像，要求计算其中的肿瘤的面积和周长。</p>","aboutInput":"<p>输入第一行包含一个正整数N (0< N< 100) 表示图像的大小；接下来N行，每行包含图像的一行。图像的一行用N个整数表示（所有整数大于等于0，小于等于255），两个整数之间用一个空格隔开。</p>","aboutOutput":"<p>输出只有一行，该行包含两个正整数，分别为给定图像中肿瘤的面积和周长，用一个空格分开。</p>"},{"title":"习题(10-2) 计算两个日期之间的天数","id":"597e292dd2db4166a70887e39eaff3c8","description":"<p>给定两个年月日，计算之间的天数.\r<br>比如2010-1-1和2010-1-3 之间差2天。\r<br>\r<br>year=1,2,...,3000.\r<br>\r<br>补充：\r<br>闰年是：(year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)，\r<br>闰年的2月份有29天。</p>","aboutInput":"<p>第一行\r<br>startYear startMonth startDay\r<br>第二行\r<br>endYear endMonth endDay</p>","aboutOutput":"<p>输出只有一行是两个日期之间的天数</p>"},{"title":"二维数组回形遍历","id":"b962d6ada3d14301870bb9cb5bdb716b","description":"<p>给定一个row行col列的整数数组array，要求从array[0][0]元素开始，按回形从外向内顺时针顺序遍历整个数组。如图所示：\r<br><img src=\"cir.gif\">\r<br></p>","aboutInput":"<p>输入的第一行上有两个整数，依次为row和col。\r<br>余下有row行，每行包含col个整数，构成一个二维整数数组。\r<br>（注：输入的row和col保证0&lt;row&lt;100, 0&lt;col&lt;100）</p>","aboutOutput":"<p>按遍历顺序输出每个整数。每个整数占一行。</p>"},{"title":"二进制加法","id":"51fe68c1fe0f4876bbed39efb16ebca3","description":"<p>给定两个二进制数 <i>a</i> 和 <i>b</i> ，计算 <i>a</i> + <i>b</i> 之和，输出和的二进制表示。</p>","aboutInput":"<p>输入有 2<i>n</i> + 1 行，第一行是 <i>n</i>，其余2<i>n</i>行，每两行一组，第一行是二进制数 <i>a</i>，第二行是二进制数 <i>b</i>；<i>a</i> 和 <i>b</i> 都大于 0 且不含前导 0 ，<i>a</i>、<i>b</i> 的位数不超过 100 位。</p>","aboutOutput":"<p>输出 <i>n</i> 行 <i>a</i> + <i>b</i> 的结果，用二进制表示。</p>"}]},{"title":"第二阶段编程练习（1）","id":"3fdabb7790b94d52840843906ec0b20a","problems":[{"title":"快速找零","id":"2614fb04c4774e0eb5e332e2e74b5a94","description":"<p>J.P.Flathead的杂货店在收银台上雇佣廉价的劳动力。他雇的人（常常是高中的孩子）常常找错钱给顾客。Flathead是个小气鬼，估计他找错的钱比他挣的还要多，也就是说，雇员往往找更多的钱给客户。\r<br>Flathead想要你编写一个程序来计算他应该找多少quarters（$0.25）、dimes($0.10)、nickel($0.05)和pennies($0.01)给顾客。如果要找的钱是5.00美元或者更少，Flathead尽量找给他们硬币。他也想找给顾客最少数量的硬币。比如，要找给顾客的钱是1.24美元，那么，顾客应当拿到4quarters、2dimes、0nickels和4pennies。\r<br></p>","aboutInput":"<p>输入数据的第一行是一个正整数N，表示下面数据集的个数。每个数据集是由一个整数组成，占一行，这个整数代表cents（美分），C（1 <= C <= 500）</p>","aboutOutput":"<p>对于每个数据集，打印出数据集的序号，一个空格和下面这串字符串：\r<br>Q QUARTER(S), D DIME(S),n NICKEL(S),P PENNY(S)\r<br>这里，Q是quarters数目，D是dimes数目，n是nickels数目，而P是pennies数目。\r<br></p>"},{"title":"求特殊自然数","id":"868f51d70e11424f92e45e27efc4e4be","description":"<p>一个十进制自然数,它的七进制与九进制表示都是三位数，且七进制与九进制的三位数码表示顺序正好相反。编程求此自然数,并输出显示.\r<br>\r<br>输入为1时，输出此自然数的十进制表达式；输入为2时，输出此自然数的七进制表达式；输入为3时，输出此自然数的九进制表达式。</p>","aboutInput":"<p>输入为1，2，3中的一个数。</p>","aboutOutput":"<p>输出一行。\r<br>输出为十进制或七进制或九进制数</p>"},{"title":"1049 跳绳游戏","id":"9eb9c2b1aa584902888131caaa72883d","description":"<p>小朋友玩跳绳比赛,要计算在一分钟内跳了多少下.假设每秒钟跳一下,如果中途失败了,则要花三秒钟后才能开始重跳.一般小朋友跳绳一分钟要跳坏好几次.现在给出小朋友每次跳坏时已经跳的总数,求小朋友在一分钟内跳了多少下.(请注意分析示例数据.)</p>","aboutInput":"<p>第一行为n个小朋友 \r<br>其余各行,每行第一个整数是跳坏的次数m,其余m个整数是跳坏时累计跳了多少下. 这m个整数是从小到大排列的</p>","aboutOutput":"<p>输出相应小朋友头一分钟内跳了多少下.</p>"},{"title":"最长平台 ","id":"3cdc691eb6af47db9435a3639e6b4afa","description":"<p>已知一个数组，这个数组的一个平台（Plateau）就是连续的一串值相同的元素，并且这一串元素不能再延伸。例如，在1，2，2，3，3，3，4，5，5，6中1，2-2，3-3-3，4，5-5，6都是平台。试编写一个程序，接收一个数组，把这个数组最长的平台的长度找出来。在上面的例子中3-3-3就是最长的平台，长度为3。 \r<br>\r<br>\r<br>\r<br></p>","aboutInput":"<p>输入数据有多组，每组两行。\r<br>第一行有一个整数n，为数组元素的个数，n<25。\r<br>接下来一行为n个整数。\r<br>最后会出现一个n=0，表示测试数据结尾。</p>","aboutOutput":"<p>输出每组中最长平台的长度，每个长度一行。</p>"},{"title":"招聘会人数","id":"a344c8ecd9ba44e786481aa9cba6c64e","description":"<p>某招聘机构举办招聘活动，事先不知道参会的确切人数。为了今后类似的招聘活动选择适当大小的场馆，招聘机构拟对每位参会人的进出场馆时间进行记录。设第i个人进入会场的时间和离开会场的时间分别是xi, yi，那么，这个人在招聘会场的时间段t满足 xi <= t < yi。为简便起见，进出时间点用整数表示，且满足 0 <= xi < yi<1000。请统计，在这一天的招聘活动中，参会的总人数有多少；高峰时，最多有多少人同时在场。</p>","aboutInput":"<p>数据包括2行，这2行的数据个数相同：\r<br>第1行表示第i个人的到达时间xi，数之间用逗号间隔； \r<br>后1行表示第i个人的对应的离开时间yi，数之间也用逗号间隔。 \r<br>例如：\r<br>2,5,4,6,7,3,1,6,2\r<br>5,6,7,7,8,4,3,9,4\r<br>\r<br>表示有9个人，进出场的时间分别是：\r<br>[2,5),[5,6),[4,7),[6,7),[7,8),[3,4),[1,3),[6,9),[2,4)</p>","aboutOutput":"<p>参加会议的总人数以及最多有多少人同时在场，两者之间以空格间隔。\r<br>上面例子中，参加会议的总人数为9人，最多的时候有3人同时在场。如，时间段：[2,5),[1,3),[2,4)</p>"},{"title":"开关电灯","id":"c8c4f0a85e294238b7f02f256219c9e8","description":"<p>N盏灯排成一排，从1到N依次编号。有N个人也同样编号。\r<br>第一个人将灯全部熄灭；\r<br>第2个人将对应2和2的倍数的灯打开；\r<br>第3个人将对应着3和3的倍数的灯做反向操作（如果原来是开，则关掉它，否则就打开它）；\r<br>以后的人和3做同样的操作，即第i个人将对应着i和i的倍数的灯做反向操作。</p>","aboutInput":"<p>灯的总数N, 1<=N<=1000 </p>","aboutOutput":"<p>在第N个人操作后，顺序输出还亮着灯的编号。\r<br>在每个编号后面输出一个空格即可</p>"},{"title":"习题(11-2) 校门外的树","id":"7e7dbd2092574eedb87589dce239c20d","description":"<p>某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。我们可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；数轴上的每个整数点，即0，1，2，……，L，都种有一棵树。 \r<br>    由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。 \r<br></p>","aboutInput":"<p>输入的第一行有两个整数L（1 <= L <= 10000）和 M（1 <= M <= 100），L代表马路的长度，M代表区域的数目，L和M之间用一个空格隔开。接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。</p>","aboutOutput":"<p>输出包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。</p>"}]},{"title":"第一阶段编程练习（4）","id":"75b3815427e8488196ebc02257c7520e","problems":[{"title":"牛顿迭代方法","id":"bea9b30e4f1b4c8aafd969f7132fb3e3","description":"<p>用牛顿迭代方法求一个数number的平方根，输出根以及迭代次数\r<br>注意：迭代终止条件为，上一次迭代求出的近似根，与本次迭代求出的更精确的近似根的差，小于等于1E-6。\r<br>初始 x = 1.0</p>","aboutInput":"<p>多行数字，每行可能是一个整数或一个小数</p>","aboutOutput":"<p>输出两个数字：迭代次数 和 近似根\r<br>\r<br>迭代次数为一个整数\r<br>根为一个浮点数，保留小数点后两位\r<br>\r<br>\r<br>可以用以下方法做到保留小数点后两位：\r<br>\r<br>引入iostream\r<br>引入iomanip\r<br>……\r<br>// i为迭代次数，root为近似根\r<br>cout << i << ' '\r<br><< setprecision(2)\r<br><< setiosflags(ios::fixed)\r<br><< root << endl; </p>"},{"title":"三个三位数的关系","id":"67c55dff0ea04e3389405727368f9344","description":"<p>将 1 到 9 这九个数字分成三个 3 位数，要求第一个 3 位数，正好是第二个 3 位数的一半，是第三个 3 位数的三分之一，问所有的分法。</p>","aboutInput":"<p>没有输入。</p>","aboutOutput":"<p>由小到大输出满足条件的三个数字，每个数字之间用一个空格分开。\r<br>不同的分法之间，用换行隔开。\r<br>\r<br>假如第一种分法是xxx xxx xxx\r<br>第二种分法是*** *** ***\r<br>第三种分法是### ### ###\r<br>……\r<br>\r<br>那么输出是\r<br>\r<br>xxx xxx xxx\r<br>*** *** ***\r<br>### ### ###\r<br>……</p>"},{"title":"判断四边形","id":"e6bc11704e6e4e6a86741c6874185706","description":"<p>给出平面上a,b,c,d四个点的坐标,依次连接a-b,b-c,c-d,d-a,请你写程序判断得到的图形是否是凸四边形.</p>","aboutInput":"<p>输入包含多组数据,每组数据一行,包含8个整数(绝对值都不大于1000),依次为a,b,c,d四个点的坐标.</p>","aboutOutput":"<p>对每组输入输出一行,若得到的图形是凸四边形,输出\"yes\",否则输出\"no\"</p>"},{"title":"找到不一样的数(中等)","id":"1eed279091314febb7bcf74cbd1a8de0","description":"<p>有n个数，在这n个数中，只有一个数字出现了奇数次，其余都出现了偶数次，你能找到出现奇数次的数字么？</p>","aboutInput":"<p>输入有两行，第一行一个数n(1<=n<=100000)，表示数的数量，第二行n个整数，表示这n个数字(1<=数字大小<=100)，数据保证只有一个数字出现奇数次。</p>","aboutOutput":"<p>输出一行，一个数，即出现奇数次的数字。</p>"},{"title":"煎鸡排","id":"d91dee639f274db3b479fbe1526f9e5d","description":"<p>辛苦工作一天后，饿坏了的程序员去学五吃鸡排饭。程序员点了n份鸡排。每个鸡排有两个面，每一面都需要在平底锅上煎1分钟。\r<br>不幸的是，厨师只有一个平底锅，在这个平底锅上，一次只能同时烹饪k个鸡排的一个面。请计算厨师需要花多少时间煎这些鸡排。</p>","aboutInput":"<p>输入两个整数n和k，空格隔开。(1 ≤ n, k ≤ 1000)</p>","aboutOutput":"<p>输出厨师煎n个鸡排，最少需要的分钟数。</p>"},{"title":"求亲和数","id":"0b8da730c9ad43f093ea1f3b7f40e424","description":"<p>遥远的古代，人们发现某些自然数之间有特殊的关系：设有两个数a和b，若a的所有除本身以外的因数之和等于b，b的所有除本身以外的因数之和等于a，则称a、b是一对亲和数。\r<br>\r<br>例如220和284：\r<br>220的真因数包括：1,2,4,5,10,11,20,22,44,55,110.\r<br>1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110 = 284\r<br>284的真因数包括：1,2,4,71,142.\r<br>1 + 2 + 4 + 71 + 142 = 220\r<br>所以220和284是一对亲和数。</p>","aboutInput":"<p>一个正整数n，1<=n<=100000。</p>","aboutOutput":"<p>所有亲和数对\"a b\"，满足a和b均小于等于n。\r<br>每个亲和数对占一行，两个数之间用一个空格隔开，较小数在前，较大数在后。\r<br>对于多个亲和数对，以较小数递增的顺序输出它们。</p>"},{"title":"一种等价类划分问题","id":"82731edfbf81434e8750d7ad20b66359","description":"<p>在两个正整数m和n给定的整数范围内（m 小于 n，且不包括m和n）取出各位数字之和均为k的倍数的所有数(k为正整数)，然后将这些数划分成若干个子集合，每个子集合中的元素满足其各位数字之和相等，请输出各个子集合, 其中  n 不大于10000。\r<br>\r<br>每个集合元素按从小到大输出，逗号间隔，如果有多个集合，则输出多行；集合中最小元素较小的在前面行输出。\r<br>\r<br>例如，m=11, n=35, k=3\r<br>则，\r<br>12,21,30 这三个数的每位数字之和均为3，且为3的倍数\r<br>15,24,33 这三个数的每位数字之和为6，且为3的倍数\r<br>18,27 这二个数的每位数字之和为9，也为3的倍数\r<br>由于三组数的最小数分别是12,15,18，于是，输出结果应为：\r<br>12,21,30\r<br>15,24,33\r<br>18,27\r<br></p>","aboutInput":"<p>一行，三个值：m,n,k，以逗号间隔</p>","aboutOutput":"<p>输出各位数之和为k的倍数的若干行，每一行中，其元素的各位数字和相等，且前面行元素的各位数字之和小于后面行元素的各位数字之和，每行的元素按增序排列，以逗号间隔。</p>"}]},{"title":"第一阶段编程练习（3）","id":"c078edd992da4b45bbe0bddb26b218eb","problems":[{"title":"骑车与走路","id":"6cd57b9a3b6943798794d24c44e93f70","description":"<p>在北大校园里,没有自行车,上课办事会很不方便.但实际上,并非去办任何事情都是骑车快,因为骑车总要找车、开锁、停车、锁车等,这要耽误一些时间.假设找到自行车,开锁并骑上自行车的时间为27秒;停车锁车的时间为23秒;步行每秒行走1.2米,骑车每秒行走3.0米.请判断走不同的距离去办事,是骑车快还是走路快.</p>","aboutInput":"<p>第一行为待处理的数据的数量n\r<br>其后每一行整数为一次办事要行走的距离,单位为米.</p>","aboutOutput":"<p>对应每个整数,如果骑车快,输出一行\"Bike\";如果走路快,输出一行\"Walk\";如果一样快,输出一行\"All\".</p>"},{"title":"习题(2-) 画矩形","id":"7f89efad1537471fae528e9c88601ee6","description":"<p>根据参数，画出矩形。</p>","aboutInput":"<p>输入由多行组成，每行四个参数：前两个参数为整数，依次代表矩形的高和宽（高不少于3行，宽不少于5行）；第三个参数是一个字符，表示用来画图的矩形符号；第四个参数为1或0，0代表空心，1代表实心。\r<br>当用户输入0时表示输入结束。</p>","aboutOutput":"<p>输出画出的图形</p>"},{"title":"分离整数的各个数位","id":"7491430f44fb45638184da4da3336ec3","description":"<p>从键盘输入一个任意的三位整数，要求正确地分离出它的百位、十位和个位数，并分别在屏幕上输出，输出采用每行输出一个数的方式，不带其它符号。</p>","aboutInput":"<p>一个任意的三位整数</p>","aboutOutput":"<p>每行输出一个数位</p>"},{"title":"习题(5-7) 统计满足条件的4位数个数","id":"dc15ebed0e144d7abc4d14e7e66c245f","description":"<p>编写程序，读入若干个四位数（小于30），求出其中满足以下条件的数的个数：\r<br>\r<br>个位数上的数字减去千位数上的数字，再减去百位数上的数字， 再减去十位数上的数字的结果大于零。</p>","aboutInput":"<p>输入为两行，第一行为四位数的个数，第二行为要读入的四位数</p>","aboutOutput":"<p>输出为一行，即满足条件的四位数的个数</p>"},{"title":"完美立方","id":"d47236837ca14d8abdb9df5a5bc27b8d","description":"<p>a的立方 = b的立方 + c的立方 + d的立方为完美立方等式。例如12的立方 = 6的立方 + 8的立方 + 10的立方 。编写一个程序，对任给的正整数N (N≤100)，寻找所有的四元组(a, b, c, d)，使得a的立方 = b的立方 + c的立方 + d的立方，其中a,b,c,d 大于 1, 小于等于N。</p>","aboutInput":"<p>正整数N (N≤100)</p>","aboutOutput":"<p>每行输出一个完美立方，按照a的值，从小到大依次输出。当两个完美立方等式中a的值相同，则依次按照b、c、d进行非降升序排列输出，即b值小的先输出、然后c值小的先输出、然后d值小的先输出。</p>"},{"title":"哥德巴赫猜想","id":"366665bdf6904d69b71d30ecececc5da","description":"<p>Geeker对计算机和数学非常感兴趣，刚学完计概的他有一天突发奇想能不能编段小程序验证下哥德巴赫猜想，即对于任意给定的偶数m（m>=6且不超出int范围），验证其能够表示成2个奇素数之和。注意，1被认为既不是素数，也不是合数。</p>","aboutInput":"<p>一个偶数m，m的取值范围6 <= m <= 10000</p>","aboutOutput":"<p>2个和是m的奇素数，它们之间用空格分隔。如果有多组满足，则每组之间需要换行（2个奇素数输出时候小的在前面，大的在后面）。每组之间没有重复，存在多个组满足的情况下按第一个奇数从小到大排列，见例子输出</p>"}]},{"title":"第一阶段编程练习（2）","id":"4e052500763b4b2c802354af784d4b2a","problems":[{"title":"习题(3-3) 计算(a+b)*c的值","id":"944859dcadfc4078a07b53c9c8af8a01","description":"<p>计算表达式(a+b)*c的值，其中a, b, c均为整数，且a,b,c的值介于-10000和10000之间（不含-10000和10000）</p>","aboutInput":"<p>输入仅一行，包括三个整数a, b和c</p>","aboutOutput":"<p>输出也是一行，即表达式的值</p>"},{"title":"两数之和","id":"0e0e89f41d964c2c9e758e089a5c2c98","description":"<p>从键盘输入两个整数，计算这两个整数的和，并输出。</p>","aboutInput":"<p>两个用空格分隔的整数。</p>","aboutOutput":"<p>两个数之和。</p>"},{"title":"计算书费","id":"ca49691ea7eb41748b2d3f6f138aaff1","description":"<p>下面是一个图书的单价表： \r<br>计算概论        28.9 元/本 \r<br>数据结构与算法  32.7 元/本 \r<br>数字逻辑        45.6 元/本 \r<br>C++程序设计教程 78 元/本 \r<br>人工智能        35 元/本 \r<br>计算机体系结构  86.2 元/本 \r<br>编译原理        27.8 元/本 \r<br>操作系统        43 元/本 \r<br>计算机网络      56 元/本 \r<br>JAVA程序设计    65 元/本 \r<br>给定每种图书购买的数量，编程计算应付的总费用。</p>","aboutInput":"<p>输入第一行包含一个正整数k (0 < k < 100)，表示有k组测试数据；接下来k行，每行包含一组测试数据。每组测试数据包含10个整数(大于等于0，小于等于100)，分别表示购买的《计算概论》、《数据结构与算法》、《数字逻辑》、《C++程序设计教程》、《人工智能》、《计算机体系结构》、《编译原理》、《操作系统》、《计算机网络》、《JAVA程序设计》的数量（以本为单位）。每两个整数用一个空格分开。</p>","aboutOutput":"<p>对于每组测试数据，输出一行。该行包含一个浮点数f，表示应付的总费用。精确到小数点后两位。\r<br>可用printf(\"%.2f\\n\", sum)来输出sum的值，并精确到小数点后两位。</p>"},{"title":"题目三 最大最小数之差","id":"4091f1e0939b4747862f5f4a2131dd1b","description":"<p>给定三个整数，求这三个数中最大值与最小值之差。</p>","aboutInput":"<p>只有一行，包括待处理的三个整数。</p>","aboutOutput":"<p>一共一行，输出最大数减去最小数的差。</p>"},{"title":"石头剪子布","id":"76b4152cbb3942dab7e81ce7504902dd","description":"<p>石头剪子布是一种很简单的游戏：\r<br>石头胜剪子\r<br>剪子胜布\r<br>布胜石头\r<br>A和B猜拳，已知他们出拳的序列，编程求出谁胜谁负。</p>","aboutInput":"<p>第一行是一个正整数n(n<200)，表明A和B一共猜了n次拳。\r<br>接下来是n行，每行有两个数字，分别表示A和B在这次猜拳中出了什么。0表示石头，1表示剪刀，2表示布。</p>","aboutOutput":"<p>输出一行，\"A\"表示A胜，\"B\"表示B胜，\"Tie\"表示平局。</p>"},{"title":"不与最大数相同的数字之和","id":"f22bd142bf674a7e8ea7f9d7f9b18ee9","description":"<p>输出一个整数数列中不与最大数相同的数字之和</p>","aboutInput":"<p>输入分为两行：\r<br>第一行为N(N为接下来数字的个数，N<=100)；\r<br>第二行为N个整数，以空格隔开；\r<br></p>","aboutOutput":"<p>输出为N个数中除去最大数其余数字之和。（注意，最大数可能出现多次）</p>"},{"title":"数组逆序","id":"a22c145c4dc742209b5a170cea7bfaf9","description":"<p>将一个数组中的值按逆序重新存放。例如，原来的顺序为8,6,5,4,1。要求改为1,4,5,6,8。</p>","aboutInput":"<p>输入为两行：第一行数组中元素的个数n（1 &lt; n &lt; 100)，第二行是n个整数，每两个整数之间用空格分隔。</p>","aboutOutput":"<p>输出为一行：输出逆序后数组的整数，每两个整数之间用空格分隔。</p>"}]},{"title":"第一阶段编程练习（1）","id":"23c7518f7d3449f98180f8318e9c04ae","problems":[{"title":"房价 vs 年薪","id":"790e56c5f82c425d96914e02791b65d9","description":"<p>小袁同学今年刚毕业，成为了一名光荣的程序员。他找了一份工作，年薪是X万元，并且公司保证每年给他固定加薪8%。 小袁同学很开心，他看上了一套房子，售价是M万元，于是下决心攒钱买下。假设房子的价格每年稳定上涨10%，再假设小袁不吃不喝，把所有的钱都存下来买房。\r<br>那么请你帮他算算，他多少年后可以买的起这套房子？ \r<br>如果100年内(含100年) 都不可能的话，则输出“Forget it.”</p>","aboutInput":"<p>一共有2行。\r<br>第一行是一个整数X，表示小袁同学的初始年薪；\r<br>第二行是一个整数M，表示房子的售价。</p>","aboutOutput":"<p>如果有解，输出一个整数N，表示第N年小袁可以攒够钱买房子；\r<br>如果解大于100或者无解，则输出“Forget it.”\r<br></p>"},{"title":"北京地铁","id":"dc83e659ed954a9fa76c402bece9e869","description":"<p>北京地铁涨价了，现在的地铁票价计算方法如下：\r<br>6公里内 3元 （包括6公里）\r<br>6-12 公里 4元 （不包括6公里，包括12公里）\r<br>12-32 公里 每10公里加1元（不包括12公里，包括32公里，不满10公里按10公里算）\r<br>32公里以上 每20公里加1元（不包括32公里，不满20公里按20公里算）\r<br>比如，50公里时，需要 4+2+1=7元\r<br>\r<br>同时，北京地铁也给出了优惠方案：\r<br>每个自然月内，使用交通卡满100元，则票价可打8折；满150元，则票价可打5折；满400元，则票价不打折。\r<br>\r<br>现在，小明有一张公交卡，小明想知道自己现在坐地铁的票价是多少？请你写程序完成这个功能。\r<br></p>","aboutInput":"<p>输入有两个整数，一个是小明现在这个月的累计消费，一个是小明本次乘坐的里程数\r<br></p>","aboutOutput":"<p>输出为本次乘坐的票价，保留两位小数</p>"},{"title":"习题(4-2) 点和正方形的关系","id":"f6a42ebd90c043968384d13c7cf42707","description":"<p>有一个正方形，四个角的坐标（x,y)分别是（1，-1），（1，1），（-1，1），（-1，-1），x是横轴，y是纵轴。写一个程序，判断一个给定的点是否在这个正方形内。</p>","aboutInput":"<p>输入坐标x，y</p>","aboutOutput":"<p>点在正方形内，输出yes；点在正方形外，输出no</p>"},{"title":"习题(4-4) 能被3，5，7整除的数","id":"247ba8340a9a4daa8faf1d6e9226a04a","description":"<p>输入一个整数，判断它能否被3，5，7整除，并输出以下信息： \r<br>（1）能同时被3，5，7整除（直接输出3 5 7，每个数中间一个空格）； \r<br>（2）能被其中两个数整除（输出两个数，小的在前，大的在后。例如：3 5或者 3 7或者5 7,中间用空格分隔） \r<br>（3）能被其中一个数整除（输出这个除数） \r<br>（4）不能被任何数整除；（输出小写字符n)\r<br></p>","aboutInput":"<p>一个整数</p>","aboutOutput":"<p>实现题目的要求</p>"},{"title":"最受欢迎的医生","id":"f0e7a10d5f6c449facd94230f543972a","description":"<p>北医三院近期开展了最受欢迎的医生评选活动，评选规则是：请患者及其家属给自己最喜欢的医生投票（每位参加评选的医生有一个相应的编号），票数最多的医生评选为年度最受欢迎医生，奖励年终休假一个月。</p>","aboutInput":"<p>输入为两行，第一行为投票的总数n（0 < n <= 100），第二行为投票情况（医生编号均为整数,最大不超过15）</p>","aboutOutput":"<p>输出最受欢迎的医生的编号</p>"},{"title":"菲波那契数列","id":"57bfff186ece4e62b85f790199b2c360","description":"<p>菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。 \r<br>给出一个正整数a，要求菲波那契数列中第a个数是多少。\r<br></p>","aboutInput":"<p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a(1 <= a <= 20)</p>","aboutOutput":"<p>n行，每行输出对应一个输入。输出应是一个正整数，为菲波那契数列中第a个数的大小</p>"}]},{"title":"试手练习（选做，不计入成绩）","id":"570939369cef4ad18de4261b375ba508","problems":[{"title":"1000 A+B Problem","id":"a28e77853698410b9175afc1d409ae0f","description":"<p>Calculate a+b</p>","aboutInput":"<p>Two integer a,b (0<=a,b<=10)</p>","aboutOutput":"<p>Output a+b</p>"},{"title":"计算平均年龄","id":"c19f16062bb64bfba14c61498ddb8707","description":"<p>班上有学生若干名，给出每名学生的年龄（整数），求班上所有学生的平均年龄，保留到小数点后两位。</p>","aboutInput":"<p>第一行有一个整数n（1<= n <= 100），表示学生的人数。其后n行每行有1个整数，取值为15到25。</p>","aboutOutput":"<p>输出一行，该行包含一个浮点数，为要求的平均年龄，保留到小数点后两位。</p>"},{"title":"温度表达转化","id":"e12f686fbe254676b72030f225d1316e","description":"<p>已知华氏气温F，请利用公式 C = 5 * (F-32) / 9 （其中C表示摄氏温度，F表示华氏温度） 计算它对应的摄氏温度C。</p>","aboutInput":"<p>一个整数n，表示下面一共有n个输入\r<br>下面接n行，每行一个实数F，表示华氏温度</p>","aboutOutput":"<p>输出共n行，每行一个实数C，其值为F对应的摄氏温度</p>"},{"title":"例题(3.10) 大象喝水","id":"2bb3a1024ada4f3ca82f88456d150e38","description":"<p>一只大象口渴了，要喝20升水才能解渴，但现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才会解渴。(设PAI=3.14159) </p>","aboutInput":"<p>输入有一行，两个整数：分别表示小圆桶的深h，和底面半径r，单位厘米。 \r<br></p>","aboutOutput":"<p>输出也只有一行，大象至少要喝水的桶数。</p>"},{"title":"习题(8-10) 分数求和","id":"a68317b5106b4120899ca477a889fb29","description":"<p>输入n个分数并对他们求和，用约分之后的最简形式表示。\r<br>比如：\r<br>q/p = x1/y1  + x2/y2 +....+ xn/yn，\r<br>q/p要求是归约之后的形式。\r<br>如：5/6已经是最简形式，3/6需要规约为1/2, 3/1需要规约成3，10/3就是最简形式。\r<br>\r<br>PS:分子和分母都没有为0的情况，也没有出现负数的情况</p>","aboutInput":"<p>第一行的输入n,代表一共有几个分数需要求和\r<br>接下来的n行是分数</p>","aboutOutput":"<p>输出只有一行，即归约后的结果</p>"},{"title":"习题(4-5) 最大数输出","id":"af1dab7ed59e413593e02de88f25aa76","description":"<p>输入三个整数,输出最大的数。</p>","aboutInput":"<p>输入为一行，共三个整数。</p>","aboutOutput":"<p>输出为最大的整数。</p>"},{"title":"最简真分数序列","id":"1757e8e3604740948352552326132f01","description":"<p>所谓最简真分数是指分子小于分母，且不能约分的分数。给定 n（1 < n < 200）个非负整数（每个整数不超过3位），哪两个整数分别作为分子和分母能够构成最简真分数。输出所有的最简真分数组合；若没有，则输出NO。\r<br></p>","aboutInput":"<p>第1行为正整数个数n\r<br>其后为n个非负整数，空格间隔。</p>","aboutOutput":"<p>输出所有最简真分数，分子小的排在前面；若分子相同，分母小的排在前面。各分数之间用逗号间隔。\r<br>若没有，则输出NO</p>"},{"title":"题目二 统计字符","id":"8f7db698f280414f84460c387876bfd6","description":"<p>输入一个长度小于1000字符串，统计这个字符串中‘*’ ‘@＇出现的次数。</p>","aboutInput":"<p>只有一行，一个包括可能包括了多个‘*’，’@’ </p>","aboutOutput":"<p>一共二行，分别输出二种符号的个数。</p>"},{"title":"甲流病人初筛","id":"eeb3ea42f61f4ddd98858758c34221d5","description":"<p>目前正是甲流盛行时期，为了更好地进行分流治疗，医院在挂号时要求对病人的体温和咳嗽情况进行检查，对于体温超过37.5度（含等于37.5度）并且咳嗽的病人初步判定为甲流病人（初筛）。现需要统计某天前来挂号就诊的病人中有多少人被初筛为甲流病人。</p>","aboutInput":"<p>第一行是某天前来挂号就诊的病人数n\r<br>其后有n行，每行是病人的信息，包括三个信息：姓名（字符串，不含空格，最多8个字符）、体温（float）、是否咳嗽（整数，1表示咳嗽，0表示不咳嗽）\r<br></p>","aboutOutput":"<p>行数不确定，但最后一行是一个整数m，表示被初筛为甲流的病人数，之前有m行，每行按输入顺序输出病人的姓名</p>"},{"title":"小于当前数的数","id":"3292e0e1ecec4a289287d567018b7b11","description":"<p>给你一个数组 nums，对于其中每个元素 nums[i]，请你统计数组中比它小的所有数字的数目。\r<br>\r<br>换而言之，对于每个 nums[i] 你必须计算出有效的 j 的数量，其中 j 满足 j != i 且 nums[j] < nums[i]。</p>","aboutInput":"<p>第一行是一个整数 n，表示数组大小。\r<br>接下来 n 行，每行表示数组中的一个数。\r<br>\r<br>0 <= n <= 1000, 每个数都在int可以表示的范围内.</p>","aboutOutput":"<p>n 行，每行代表数组中比它小的数的个数。\r<br>\r<br>如果没有要输出的数据，输出\"None\"。</p>"},{"title":"记数问题","id":"c464027785c8456aab1af00e06dde997","description":"<p>试计算在区间 1 到 n 的所有整数中，数字 x(0 ≤ x ≤ 9)共出现了多少次？例如，在 1 到 11 中，即在 1、2、3、4、5、6、7、8、9、10、11 中，数字 1 出现了 4 次，数字2出现了1次。</p>","aboutInput":"<p>输入共 1 行，包含 2 个整数 n、x，之间用一个空格隔开。</p>","aboutOutput":"<p>输出共 1 行，包含一个整数，表示 x 出现的次数。</p>"},{"title":"换酒问题","id":"0d2d948fdedd4815a82ffc36b77a1138","description":"<p>小区便利店正在促销，用 a 个空酒瓶可以兑换一瓶新酒。你购入了 b 瓶酒。\r<br>\r<br>如果喝掉了酒瓶中的酒，那么酒瓶就会变成空的。\r<br>\r<br>请你计算最多能喝到多少瓶酒。</p>","aboutInput":"<p>用空格分开的两个整数，分别为a和b。\r<br>\r<br>1 < a <= 1000000000,\r<br>0 <= b <= 1000000000.</p>","aboutOutput":"<p>能喝到多少瓶酒。</p>"},{"title":"喝奶茶","id":"97fd297f285447b485345fe25252501b","description":"<p>计算概论班级一共有150名同学，学号分别为N1到N150。期末考试后，老师决定请部分同学喝奶茶，但是大家都很优秀，老师没办法进行挑选。于是助教们想了这样一种挑选幸运同学的方法：\r<br>给每位同学一个编号牌，仅在正面写有该名同学编号i，编号与学号数字相同，即学号为Ni的同学得到的编号牌正面写有数字i。\r<br>然后将所有编号牌正面朝上放到桌子上，同学们按照编号从小到大依次进行如下操作：\r<br>N1同学把所有编号牌翻面一次；\r<br>N2同学把编号为2、4、6、8 ... 148、150的编号牌翻面一次；\r<br>N3同学把编号为3、6、9 ... 147、150的编号牌翻面一次；\r<br>N4同学把编号为4、8、12 ... 144、148的编号牌翻面一次；\r<br>......\r<br>以此规律直到150名同学操作完为止，规定正面朝下的编号牌对应的同学能够喝老师请的奶茶。\r<br>请编写程序计算这些幸运的同学的人数，并按照数字从小到大的顺序依次输出其学号。</p>","aboutInput":"<p>无</p>","aboutOutput":"<p>第一行为幸运同学的学号，以空格间隔\r<br>第二行为幸运同学的人数</p>"},{"title":"回型加密-十进制版","id":"7e2503f4a95a474b8c860168f82bc856","description":"<p>计算概论班的同学发明了一种新的文本加密算法--将文本转化为十进制数并回型存放到矩阵里。\r<br>使用者事先约定好矩阵的行数与列数，并且规定文本中仅有大写字母和空格。他们事先按照这样的方法对文本进行编码：\r<br>空格 = 00\r<br>A = 01\r<br>B = 02\r<br>C = 03\r<br>......\r<br>Y = 25\r<br>Z = 26\r<br>然后，然后按照回型遍历的方法，将每个字符对应编码的2位十进制数依次填入矩阵中，多出来的位置使用0补充。例如，对于信息“PKU”，在矩阵行列数均是3的情况下，填充结果为：\r<br>\r<br>1 -> 6 -> 1\r<br>                |\r<br>0 -> 0      1\r<br> |              |\r<br>0 <- 1 <- 2\r<br>\r<br>再逐行将矩阵中的数字连起来，完成加密过程。也就是上述例子中的信息最终会被加密为：\r<br>161001012</p>","aboutInput":"<p>第一行为两个整数R和C，中间用一个空格隔开，分别表示行数和列数，其中1≤R≤10，1≤C≤10。\r<br>第二行为一个只包含大写字母和空格的字符串，不会以空格开头。1≤字符串长度≤(R * C) / 2。</p>","aboutOutput":"<p>一行，为加密后的十进制串</p>"},{"title":"小茗同学很方","id":"fef471d7649f412482bb43f7d0d23bcb","description":"<p>n(n不超过1000)个有蛀牙的小朋友被老师组织集体去拔牙，但是排队的时候由于所有小朋友都害怕拔牙，所以没人主动排在前面。这时老师想了一个有趣的方法，所有小朋友排成一列，按照顺序进行编号（编号从1开始），并从1依次进行报数，数到m的小朋友去拔牙，然后后面的小朋友再从1开始报数，下一个数到m的小朋友去拔牙…依此循环往复。小茗同学既不想先去拔牙，也不想被留到最后再拔，于是他决定第k(k<=n)个去拔。请你帮小茗同学想想他应该排在第几个位置才能“如愿以偿”。</p>","aboutInput":"<p>n m k</p>","aboutOutput":"<p>一个整数，小茗在队列中的位置(从1开始)</p>"},{"title":"有趣的二进制","id":"300eec7960eb41ae9aaec834335e22f4","description":"<p>最近北京大学药学院的小晨在计概课上学习到二进制之后对其产生了浓厚的兴趣，在每次操作仅能移动相邻的0和1的前提下，她想知道把一个二进制数转换成另一个二进制数的最小操作数。</p>","aboutInput":"<p>输入共三行：\r<br>\r<br>第一行为一个整数n (0 < n <= 200)，代表二进制数的位数\r<br>\r<br>第二行为第一个二进制数的每一位\r<br>\r<br>第三行为第二个二进制数的每一位</p>","aboutOutput":"<p>输出将第一个二进制数转换为第二个二进制数的最少操作数，如果答案不存在，则输出-1</p>"},{"title":"重排空格","id":"af7d880117294e568696ee3ba04e0543","description":"<p>给你一个字符串 text，该字符串由若干被空格包围的单词组成。每个单词由一个或者多个小写英文字母组成，并且两个单词之间至少存在一个空格。\r<br>请你重新排列空格，使每对相邻单词之间的空格数目都  相等  ，并尽可能  最大化  该数目。如果不能重新平均分配所有空格，请  将多余的空格放置在字符串末尾  ，这也意味着输出的字符串应当与原字符串的长度相等。</p>","aboutInput":"<p>一行由小写英文字母和空格组成的字符串。\r<br>\r<br>字符串长度不超过1000，至少包含一个单词。</p>","aboutOutput":"<p>一行和原字符串长度相等的字符串。</p>"},{"title":"谁能拿到最多的硬币","id":"d833d1dc7a2c4d3ea2d6b1ce56b50832","description":"<p>有n个硬币排成一排，每个硬币上用一个数字标识了它的价值。每次要你从最左边或者最右边拿出一个硬币。总共拿k次，写一个算法，使能拿到的硬币的价值和最大。</p>","aboutInput":"<p>输入包含两行，第一行为n， k；\r<br>第二行包含n个数字，表示n个硬币的价值。\r<br>\r<br>1 <= k <= n <= 100000\r<br>单个硬币的价值大于0且不超过10000.</p>","aboutOutput":"<p>输出可以拿到的k个硬币最大的价值和。</p>"},{"title":"n-gram串频统计","id":"594e2196e29143fa8bfd063dc032cb21","description":"<p>在文本分析中常用到n-gram串频统计方法，即，统计相邻的n 个单元（如单词、汉字、或者字符）在整个文本中出现的频率。假设有一个字符串，请以字符为单位按n-gram 统计长度为 n 的子串出现的频度，并输出最高频度以及频度最高的子串。设定所给的字符串不多于500个字符，且 1 < n <5。 如果有多个子串频度最高，则根据其在序列中第一次出现的次序输出多个，每行输出一个，如果最高频度不大于1，则输出 NO\r<br>\r<br>例如，n=3，所给的串是：abcdefabcd，\r<br>则，所有的 3-gram是：abc,bcd,cde,def,efa,fab,abc,bcd。最后面的cd不足以形成3-gram，则不考虑。这样，abc 和 bcd 都出现了2次，其余的只出现了1次，于是，输出结果应该是：\r<br>2\r<br>abc\r<br>bcd\r<br></p>","aboutInput":"<p>第一行为n\r<br>第二行为字符串\r<br></p>","aboutOutput":"<p>输出最高频度以及频度最高的所有子串。</p>"},{"title":"过河问题","id":"f4a4e2f96e494992921fcbbb180561f5","description":"<p>n个人想要过一条河,河上只有一条小船,这条船只能容纳两个人,因此这n个人想要全部过河的话就必须来回很多次.每个人划船的速度有所不同,两个人一起的时候船的速度是划得较慢的人的速度.请你找出一种策略使得他们在尽可能短的时间内过河.</p>","aboutInput":"<p>第一行包括一个正整数t,表示有t组数据.\r<br>每组数据两行,第一行是人数n(n&lt;=1000),第二行是n个人各自过河所需的时间(不大于100).</p>","aboutOutput":"<p>输出最短时间</p>"},{"title":"1052 花生问题","id":"e90207884099480bb850f80866c54e2a","description":"<p>鲁宾逊先生有一只宠物猴，名叫多多。这天，他们两个正沿着乡间小路散步，突然发现路边的告示牌上贴着一张小小的纸条：“欢迎免费品尝我种的花生！??熊字”。 \r<br>\r<br>鲁宾逊先生和多多都很开心，因为花生正是他们的最爱。在告示牌背后，路边真的有一块花生田，花生植株整齐地排列成矩形网格（如图1）。有经验的多多一眼就能看出，每棵花生植株下的花生有多少。例如在图2中的花生田里，只有位于(2, 5), (3, 7), (4, 2), (5, 4)的植株下长有花生，个数分别为13, 7, 15, 9。我们假定多多在每个单位时间内，可以做下列四件事情中的一件：(1)从路边跳到最靠近路边（即第一行）的某棵花生植株；(2)从一棵植株跳到前后左右与之相邻的另一棵植株；(3)采摘一棵植株下的花生；(4)从最靠近路边（即第一行）的某棵花生植株跳回路边。 \r<br>\r<br><img src=\"1928_1.jpg\">\r<br>\r<br>为了训练多多的算术，鲁宾逊先生说：“你先找出花生最多的植株，去采摘它的花生；然后再找出剩下的植株里花生最多的，去采摘它的花生；依此类推，不过你一定要在我限定的时间内回到路边。” 例如在图2中，沿着图示的路线，多多在21个单位时间内，最多可以采到37个花生。 \r<br>\r<br>现在给定一块花生田的大小和花生的分布，请问在限定时间内，多多最多可以采到多少个花生？注意可能只有部分植株下面长有花生，假设这些植株下的花生个数各不相同。</p>","aboutInput":"<p>输入第一行代表组数T。\r<br>之后每组第一行包括三个整数，M, N和K，用空格隔开；表示花生田的大小为M * N（1 <= M, N <= 20），多多采花生的限定时间为K（0 <= K <= 1000）个单位时间。接下来的M行，每行包括N个非负整数，也用空格隔开；第i + 1行的第j个整数Pij（0 <= Pij <= 500）表示花生田里植株(i, j)下花生的数目，0表示该植株下没有花生。</p>","aboutOutput":"<p>输出包括T组，每一行代表一组，只包含一个整数，即在限定时间内，多多最多可以采到花生的个数。</p>"},{"title":"循环数","id":"1e4611f6c2b24bf3ae8305bc9c8a557f","description":"<p>当一个N位的整数X满足下列条件时，称其为循环数：X与任意一个整数1≤Y ≤ N相乘时，都将产生一个X的“循环”。即：分别将这两个整数的第1位数字与最后1位数字连在一起，可以得到一个相同的数字循环；当然两个整数在该数字循环中的起始位置不同。例如，142857是一个循环数 \r<br>142857 *1 = 142857 \r<br>142857 *2 = 285714 \r<br>142857 *3 = 428571 \r<br>142857 *4 = 571428 \r<br>142857 *5 = 714285 \r<br>142857 *6 = 857142</p>","aboutInput":"<p>写一个程序判断一个整数是否是循环数。输入文件是一个整数序列，每个整数长度为2~60。注意：每个整数前面的零被看作是该整数的一部分，在计算N时要统计。例如“01”是一个2位的整数，而“1”是一个1位的整数。</p>","aboutOutput":"<p>对每个输入整数，输出一行，说明该整数是否是循环数。</p>"},{"title":"1140 最短前缀","id":"c5e8bb080d2041ff8a7d34c5dbe02c2c","description":"<p>一个字符串的前缀是从该字符串的第一个字符起始的一个子串。例如 \"carbon\"的字串是: \"c\", \"ca\", \"car\", \"carb\", \"carbo\", 和 \"carbon\"。注意到这里我们不认为空串是子串, 但是每个非空串是它自身的子串. 我们现在希望能用前缀来缩略地表示单词。例如, \"carbohydrate\" 通常用\"carb\"来缩略表示. 现在给你一组单词, 要求你找到唯一标识每个单词的最短前缀 \r<br>在下面的例子中，\"carbohydrate\" 能被缩略成\"carboh\", 但是不能被缩略成\"carbo\" (或其余更短的前缀) 因为已经有一个单词用\"carbo\"开始 \r<br>一个精确匹配会覆盖一个前缀匹配，例如，前缀\"car\"精确匹配单词\"car\". 因此 \"car\" 是 \"car\"的缩略语是没有二义性的 , “car”不会被当成\"carriage\"或者任何在列表中以\"car\"开始的单词.</p>","aboutInput":"<p>输入包括至少2行，至多1000行. 每行包括一个以小写字母组成的单词，单词长度至少是1，至多是20.</p>","aboutOutput":"<p>输出的行数与输入的行数相同。每行输出由相应行输入的单词开始，后面跟着一个空格接下来是相应单词的没有二义性的最短前缀标识符。</p>"},{"title":"流感","id":"276d231c9c6947268d75ebfd3a9e16e4","description":"<p>    学校里一共有n个学生。这n个学生里一共有m对朋友关系。\r<br>    在流感发作期，每个健康学生都要看望当天他生病的朋友（如果有的话），并在第二天被传染上疾病（除非他在免疫期内）；\r<br>    每个生病的学生在第二天都会痊愈，并在这一天具有免疫性。从第三天起，看望生病的朋友将再次使他染上流感。\r<br>    初始时（第一天），只有一个学生患有流感。试问多少天后流感会自动结束。\r<br></p>","aboutInput":"<p>第一行输入两个正整数n和m。\r<br>接下来m行每行两个正整数x,y，表示编号为x的学生和编号为y的学生是一对朋友。输入数据保证每一对朋友关系只描述一次。\r<br>最后一行输入一个正整数，代表初始时患有流感的学生的编号。\r<br>\r<br>n,m <= 100,000。\r<br></p>","aboutOutput":"<p>输出多少天后流感会结束。\r<br>\r<br>如果天数超过2,000,000,000，则视为流感不会结束，输出-1。\r<br></p>"},{"title":"破解密码","id":"b513c573a31749ed9501ca809e296a83","description":"<p>考虑一种加密方式，它需要一个任意长度的原文 m 和秘钥 key，其中要求原文和秘钥只包含大写和小写的英文字符。\r<br>\r<br>首先定义字符之间的加密，用字符 a 去加密字符 b 的结果是：\r<br>1. 首先把 a 和 b 转成数字 x 和 y。转换的规则是，小写字母 a 到 z 依次对应 0 到 25，大写字母依次对应 26 到 51。\r<br>2. 计算 x 和 y 的和 z，对 52 取模，即计算 (x + y) % 52。\r<br>3. 返回数字 z 对应的字符。\r<br>\r<br>现在来讲如何用秘钥 key 来加密原文 m：\r<br>1. 如果秘钥的 key 的长度小于 m，那么不停重复 key 直到长度不小于 m 为止。举例来说，如果原文是 beijing，秘钥是 PKUSAA，那么秘钥需要被重复称 PKUSAAPKUSAA。\r<br>2. 假设原文的长度是 n，那么对于每一个 1~n 的数字 i，都用 key 的第 i 个字符去加密 m 的第 i 个字符。\r<br>3. 返回结果。\r<br>\r<br>那么用 PKUSAA 去加密 beijing 的结果就是：QOcbINV\r<br>\r<br>现在火山哥有 n 个字符串，s[1] 到 s[n]，他对这些字符串做了 m 次加密操作：第 i 次加密操作用第 s[x[i]] 去加密 s[y[i]]，并把 s[y[i]] 替换成加密结果。\r<br>\r<br>现在依次给出 m 次加密操作，以及加密操作结束后每一个字符串的模样，你可以还原出这 n 个字符串原来的模样吗？</p>","aboutInput":"<p>第一行输入两个整数 n,m (1 <= n,m <= 1000)。\r<br>\r<br>接下来 m 行每行输入两个整数 x[i],y[i]，表示依次加密操作，保证 x[i] 不等于 y[i]。\r<br>\r<br>接下来 n 行每行输入一个字符串，表示加密最后的结果。字符串的长度在 1 到 100 之间，只包含大小写英文字符。</p>","aboutOutput":"<p>输出 n 行，每行一个字符串，表示原本的字符串。</p>"}]},{"title":"抄程序练习（给没有基础的同学，选做，不计入成绩）","id":"5c6bf4321fe64e2a8d7dc26f666d4d6e","problems":[{"title":"实现冒泡排序","id":"5d36bf15dfb140abbaad9dcf47ac85d0","description":"<p>请根据自己的理解编写冒泡排序算法，数组大小1000以内</p>","aboutInput":"<p>第一行是n，表示数组的大小\r<br>接着n行是数组的n个元素</p>","aboutOutput":"<p>排序之后的结果\r<br>一个元素一行</p>"},{"title":"习题(8-10) 分数求和","id":"a68317b5106b4120899ca477a889fb29","description":"<p>输入n个分数并对他们求和，用约分之后的最简形式表示。\r<br>比如：\r<br>q/p = x1/y1  + x2/y2 +....+ xn/yn，\r<br>q/p要求是归约之后的形式。\r<br>如：5/6已经是最简形式，3/6需要规约为1/2, 3/1需要规约成3，10/3就是最简形式。\r<br>\r<br>PS:分子和分母都没有为0的情况，也没有出现负数的情况</p>","aboutInput":"<p>第一行的输入n,代表一共有几个分数需要求和\r<br>接下来的n行是分数</p>","aboutOutput":"<p>输出只有一行，即归约后的结果</p>"},{"title":"大整数加法","id":"bd646775285c4543a3626e514555093d","description":"<p>求两个不超过400位的非负整数的和</p>","aboutInput":"<p>首先输入N，即测试数据的组数\r<br>每组测试数据输入：\r<br>一行，每行是两个不超过400位的非负整数，没有多余的前导0，两个整数之间用空格隔开\r<br></p>","aboutOutput":"<p>N行，输出两个大整数的和，没有前导0</p>"}]}]