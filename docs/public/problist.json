[{"title":"2021年期末考试（选做，不记成绩）","id":"958e371e43aa467bb8b60f79058a7cbb","problems":[{"title":"购买纪念品","id":"fa7b450d39fa4e81b51f923819493fbe","description":"<p>北京大学邀请了一些专家，现在交给你一个任务，到纪念品商店里购买纪念品。已知一份纪念品的价格是 1 元 9 角，而班主任给你的钱是 a 元 b 角，问，你最多能买多少纪念品呢？\r<br></p>","aboutInput":"<p>输入格式：输入只有一行两个整数，分别表示 a 和 b，空格间隔。</p>","aboutOutput":"<p>输出格式：输出一行一个整数，表示你最多能买多少个纪念品。</p>"},{"title":"发水果","id":"d97a1a0059b54f48ab3a56244894d9ac","description":"<p>中午是幼儿园水果时间，老师会给每个小朋友发水果。教室为一个矩形区域，共有N 排，每排M个工位。老师通常按照逆时针方向螺旋发水果。已知每个座位有一个数字，表示该小朋友的学号，每个学号各不相同。已知老师从（0, 0）位置开始，按照逆时针螺旋的顺序发水果，请输出收到水果的小朋友的学号序列。</p>","aboutInput":"<p>第一行 两个数， 数组行列 N，M\r<br>接下来 N 行，每行 M 个正整数，表示每个位置的员工工号\r<br>1 ≤ N ≤ 15\r<br>1 ≤ M ≤ 15</p>","aboutOutput":"<p>发放水果学号序列</p>"},{"title":"最小外包矩形","id":"7f65548f75a241e0bfca5178ff1cde4f","description":"<p>最小外包矩形是图形学中一个重要的概念，其定义是能够包围几何对象（可以视为一组点的集合），且平行于x,y轴的最小外接矩形。\r<br>想要生成最小外包矩形，只需要统计组成该几何对象所有点的x、y坐标的最大值和最小值即可。最小外包矩形左下角的点x坐标等于所有点的x坐标的最小值，y坐标等于所有点的y坐标的最大值，同样的，右上角的点x坐标等于所有点的x坐标的最大值，y坐标等于所有点的y坐标的最大值。\r<br>特别地，如果几何对象为一个点，最小外包矩形变成一个点，可以用4个位置一样的点表示，如果为水平/垂直线段，最小外包矩形变成一条线段，用两对相等的点表示。\r<br>请你根据输入的点的信息输出最小外包矩形的信息。</p>","aboutInput":"<p>第一行为整数，表示所有的点个数。\r<br>每一行包含3个整数，从左到右分别是点所属于的几何对象的ID、点的x坐标、点的y坐标。\r<br></p>","aboutOutput":"<p>输出的结果每行按照几何体的ID从小到大排序，每一行有5个，从左到右依次是：\r<br>几何体ID、左下角点x坐标，左下角点y坐标、右上角点x坐标、右上角点y坐标。</p>"},{"title":"任意K进制长纯小数加法运算","id":"7f58cb59d0ef433c9dcb7c463d4b135d","description":"<p>任意输入两个K进制纯小数，均为正数，计算其和，其中，1 < K < 11。所谓纯小数是指整数部分为0,一定有小数位（允许小数位都为0）。假定小数部分的长度不超过100位。</p>","aboutInput":"<p>第1行，是小数对的个数 n；\r<br>之后是 n 行，每行格式是：\r<br>k m1 m2\r<br>其中，k表示后面的 m1 和 m2 是k进制，m1和m2为k进制纯小数。中间均按空格间隔。\r<br>注意：输入的纯小数<b>末位可能会带有0</b></p>","aboutOutput":"<p>输出为对应的 n 行相加的结果。\r<br>规定：结果值的小数位<b>末位不能是0</b>，如果小数位都为0，<b>也必须有小数点</b>。</p>"},{"title":"城堡问题","id":"1a60b58608c04e0a9eefda938a3ca742","description":"<p><p align=\"center\"><img src=\"fig1.png\" width=\"40%\"/>\r<br>(图 1)\r<br>   #  = Wall   \r<br>   |  = No wall\r<br>   -  = No wall\r<br></p>\r<br>图1是一个城堡的地形图。请你编写一个程序，计算城堡一共有多少房间，最大的房间有多大。城堡被分割成m*n(m≤50，n≤50)个方块，每个方块可以有0~4面墙。</p>","aboutInput":"<p>程序从标准输入设备读入数据。第一行是两个整数，分别是南北向、东西向的方块数。在接下来的输入行里，每个方块用一个数字(0≤p≤50)描述。用一个数字表示方块周围的墙，1表示西墙，2表示北墙，4表示东墙，8表示南墙。每个方块用代表其周围墙的数字之和表示。城堡的内墙被计算两次，方块(1,1)的南墙同时也是方块(2,1)的北墙。输入的数据保证城堡至少有两个房间。</p>","aboutOutput":"<p>输出分为两行。城堡的房间数、城堡中最大房间所包括的方块数。结果显示在标准输出设备上。</p>"},{"title":"装载问题","id":"fa59d53687dc40d2ad2b9225f32b3c91","description":"<p>有一批共 <i>n</i> 个集装箱要装上 2 艘载重量分别为 <i>c</i><sub>1</sub>和 <i>c</i><sub>2</sub>的轮船，其中集装箱 <i>i</i> 的重量为 <i>w</i><sub>i</sub>，且<img src=\"wcc.gif\" height=\"44\" valign=\"middle\"/>装载问题要求确定，是否有一个合理的装在方案可将这 <i>n</i> 个集装箱装上这 2 艘轮船。如果有，找出最优装载方案。</p>","aboutInput":"<p>输入要输入\r<br>1、集装箱数量 类型整型\r<br>2、集装箱重量数组 类型整型数组\r<br>3、两艘轮船的载重量 类型整型数组\r<br>输入格式如：\r<br>5\r<br>67 34 2 69 24\r<br>78 158</p>","aboutOutput":"<p>如果能装载的话输出格式如下：\r<br>ok,can load it\r<br>a way is:\r<br>the first trip load:2 69\r<br>the second trip load:67 34 24\r<br>如果不能装载的话输出如下：\r<br>can't find a way to Loading</p>"},{"title":"盗宝","id":"195b1ef2f3c54559ab7b494ab5f34cac","description":"<p>有个财主收藏了大量的宝物。为防止被盗，他将宝物藏在离家不太远一个海岛上的不同洞穴内，有些洞内放了一件宝物，有些洞存放了多件，并绘制了藏宝图。但藏宝图不慎被一个海盗发现，他详细知道了每件宝物所在的洞穴。好在财主事先做了进一步的防范措施：万一有人进入一个洞内窃取宝物，最多只能取走洞内的一件宝物，而且不能让其再进入同一个洞内。海盗决定驾着他的小船去盗宝，但船承载货物的重量受限。已知每件宝物的重量和价值，请你根据船的载重量，推算海盗在每个洞只能进去一次的情况下，这一趟盗走宝物可能导致财主最大价值的损失是多少？</p>","aboutInput":"<p>第一行两个整数m,n（1<=m,n<=1000），分别是船的载货重量（海盗自身的重量忽略不计）和宝物总件数。两个整数以空格间隔\r<br>接下来n行，每行3个数，分别表示各件宝物的重量、价值和所在洞的编号。均为整数，且以空格间隔。</p>","aboutOutput":"<p>一个整数值，为所盗宝物可能的最大总价值。</p>"},{"title":"天平","id":"60ae847fc5244a24b4c06fd49e9e3271","description":"<p>Gigel有一个奇怪的天平，他想要使它平衡。事实上，这个东西与其他普通的天平是不同的。\r<br>它有两条重量可以忽略的臂，每条臂的长度是15。臂上有一些挂钩，Gigel想要从他拥有的G个重物中（1 <= G <= 20）挂一些上去，这些重物有着不同的重量，重量范围在1到25之间。Gigel可以把任意的重物放到任意的挂钩上，但他必须全部用完所有重物。\r<br>最终，Gigel成功地利用他在全国信息学奥赛中的经验将天平弄平衡了。现在他想知道有多少种方式可以让它平衡。\r<br>挂钩的位置和重物的重量是已知的，写一个程序来计算能使天平平衡的所有可能数目。\r<br>测试样例保证至少有一种能使之平衡的方案。\r<br></p>","aboutInput":"<p>输入由以下组成： \r<br>&#8226; 第一行包含整数C(2 <= C <= 20)和整数G(2 <= G <= 20); \r<br>&#8226; 下一行包含C个整数(这些数字也是互不相同的，按递增排序），范围在-15到15之间，代表挂钩的分配；每个数字代表在X轴上相对天平中心的位置（当没有重物在天平上时，天平沿X轴方向平衡。距离的绝对值代表挂钩与天平中心的距离，数字的符号决定挂钩在哪个臂上：负号代表在左臂，正号代表在右臂）\r<br>&#8226; 再下一行是G个互不相同的自然数，按递增排序，范围在1到25之间，代表重物的重量值。</p>","aboutOutput":"<p>输出包含一个数M，代表使天平平衡的可能方案个数。</p>"},{"title":"1123 拨钟问题","id":"79f43369937947399645a2cb18356b94","description":"<p>有9个时钟，排成一个3*3的矩阵。 \r<br>\r<br>\r<br><center><img src=\"1123_1.jpg\"></center>\r<br>\r<br>现在需要用最少的移动，将9个时钟的指针都拨到12点的位置。共允许有9种不同的移动。如右表所示，每个移动会将若干个时钟的指针沿顺时针方向拨动90度。 \r<br>\r<br>\r<br>移动 影响的时钟 \r<br>1 ABDE \r<br>2 ABC \r<br>3 BCEF \r<br>4 ADG \r<br>5 BDEFH \r<br>6 CFI \r<br>7 DEGH \r<br>8 GHI \r<br>9 EFHI \r<br>(图 2)</p>","aboutInput":"<p>从标准输入设备读入9个整数，表示各时钟指针的起始位置。0=12点、1=3点、2=6点、3=9点。</p>","aboutOutput":"<p>输出一个最短的移动序列，使得9个时钟的指针都指向12点。按照移动的序号大小，输出结果。</p>"}]},{"title":"2020年期末考试（选做，不记成绩）","id":"c8532e6776124057b7f0c7834a57b14c","problems":[{"title":"最长连号","id":"7dc93f4cf01e437f95558e4f486644a2","description":"<p>输入n个正整数，（1<=n<=10000),要求输出最长的连号的长度。（连号指从小到大连续自然数）</p>","aboutInput":"<p>第一行，一个数n;  第二行，n个正整数，之间用空格隔开。</p>","aboutOutput":"<p>一个数，最长连号中数的个数。</p>"},{"title":"求到最大最小值距离差最小的数","id":"0cbeeb438aa9431d9511ef6e36cfabbb","description":"<p>给定一组正整数，其中的最大值和最小值分别为max和min，其中的一个数x到max和min的距离差D定义为\r<br>\r<br>abs(abs(x-max) - abs(x-min))。\r<br>\r<br>其中，abs()表示求一个数的绝对值</p>","aboutInput":"<p>输入第一行为整数n，剩余n行每行一个正整数。(n<=10000)</p>","aboutOutput":"<p>输出仅一行，它的值为使得距离差D最小的x。</p>"},{"title":"特殊素数序列","id":"612a03964a43432db016c3affa640710","description":"<p>给丁一对正整数[p,q]，其中，p小于q 且q不大于100000\r<br>请按从小到大的顺序输出p和q之间的素数序列，以逗号间隔。输出的素数 a 需满足如下二个条件：\r<br>（1）p<=a<=q；\r<br>（2）a 的逆序 b 也必须是素数，且 a<=b,同时，p<=b<=q\r<br> \r<br>例如，p=2, q=50,则输出：\r<br>\r<br>2,3,5,7,11,13\r<br>\r<br>注意：13的逆序31也是素数，且都在[2,50]的范围内，13小于31，故只输出 13.\r<br>\r<br>如果没有满足条件的序列，则输出 NULL\r<br></p>","aboutInput":"<p>两个正整数，由逗号间隔，分别表示 p 和 q</p>","aboutOutput":"<p>输出符合条件的素数序列，其间以逗号间隔；如果没有满足条件的序列，则输出 NULL</p>"},{"title":"DNA排序","id":"28796834c9d14542bb4f57bacb4f62b6","description":"<p>作为医学生的你，一定对DNA不陌生。DNA可以看作是由字母'A''C''G''T'组成的字符串，现在有一些DNA序列需要你排序，排序的规则是按照DNA序列中逆序对的个数。逆序对的定义就是字符串中，在字母表中靠后的字母排在了字母表中靠前的字母的前面。举例来说，字符串\"DAABEC\"的逆序对数为5，分别是\"D-A\"\"D-A\"\"D-B\",\"D-C\"和\"E-C\"，而\"AACEDGG'' 就只有\"C-E\"这一个逆序对，\"ABCDE\"就没有逆序对。现在，给你一些DNA序列，请你将它们按照逆序对的个数从小到大排序。</p>","aboutInput":"<p>第一行是两个整数n和m，0&lt;n&lt;=50，表示字符串的长度，0&lt;m&lt;=100，表示字符串的个数。\r<br>接下来是m行，每一行是一个长度为n的字符串。</p>","aboutOutput":"<p>m行，将m个字符串按照逆序对数从小到大的顺序输出。如果有逆序对数相等的字符串，按照它们在输入中的相对顺序输出。</p>"},{"title":"拼装模型","id":"c3643232f6924f86abbb2b8d2ce44455","description":"<p>Dzx从日本回来了，并为TN准备了礼物----一个恐龙模型。TN想把它尽快拼好，但是由于模型很庞大，TN又实在比较懒，所以他希望你为他寻找一个最节省时间的拼装方案。\r<br>\r<br>模型是由N个零件组成的，每次TN可以选取两个零件拼装在一起来组成一个新的零件，直到得到完整的模型。由于零件的复杂程度不同，TN每次拼装所需要的时间也是不同的，对于两个零件A和B，假设他们的复杂程度分别为a和b，则TN要将这两个零件拼装在一起所需要的时间为a+b，而这由两个零件所组成的新零件的复杂程度为a+b。\r<br>\r<br>现在TN已经统计出了每个零件的复杂程度，你能告诉他最快的拼装方法需要多少时间么？</p>","aboutInput":"<p>Line 1： N (1 <= N <= 10000)，零件数目\r<br>Line 2： N Integers，表示每个零件的复杂程度</p>","aboutOutput":"<p>最快的拼装方案所需要的时间</p>"},{"title":"括号配对","id":"e51f88adcf1847509815495ec6518b65","description":"<p>小凡同学在学习C语言时无意间发现括号的配对是件很有意思的事。对于不同数量的括号，似乎有很多种不同但是合法的组合方式。对于小凡给出的括号总对数N，你能告诉他总共有多少种不同的括号组合方式吗？</p>","aboutInput":"<p>输入有一行，为括号的总对数N，N为不超过10的正整数。</p>","aboutOutput":"<p>按左括号优先的顺序排列出所有合法的组合方式。</p>"},{"title":"对角遍历","id":"ba4bc05976c34465ab5d8b3f27cf8914","description":"<p>阿福最近在研究矩阵的遍历。给定一个大小为4<sup>n</sup>x4<sup>n</sup>的方阵，现在需要将序号0-4<sup>n</sup>x4<sup>n</sup>-1依次放入到方阵中。放置方式具体如下：\r<br>首先，将4<sup>n</sup>x4<sup>n</sup>分成16个4<sup>n-1</sup>x4<sup>n-1</sup>的子块，然后按照对角遍历的方式（如下图所示）遍历各个子块；对于每个子块继续划分成16个更小的子块，并按照如下图所示的方式遍历各个子块，..., 以此类推，并将遍历的顺序号依次填入各个1x1方块中。\r<br><img src=./img1 height=\"300\" width=\"600\">\r<br>现在给定非负整数n，一个1x1方块的行号x和列号y,其中0<=x,y<4<sup>n</sup>,请求出该块遍历的序号。输入保证1<=n<=10。</p>","aboutInput":"<p>包含多行，每行三个非负整数n,x,y,中间用空格隔开\r<br>当n为0时，表示输入结束,该组输入不用处理</p>","aboutOutput":"<p>输出包括多行，每行一个整数，表示输入块按照上述遍历方式得到的序号。</p>"},{"title":"计算字符串的相似度","id":"a7e43f36a893469581812c485f67b980","description":"<p>在计算机程序中，往往会大量使用字符串。对于不同的字符串，我们总希望能够有办法判断其相似度。因此，我们定义了一套操作方法来把两个不同的字符串变得相同。\r<br>\r<br>具体可选的操作方法有：\r<br>1. 修改一个字符，例如将\"a\"修改为\"b\"；\r<br>2. 增加一个字符，例如将\"abdd\"变为\"aebdd\"\r<br>3. 删除一个字符，例如将\"travelling\"变为\"traveling\"\r<br>\r<br>例如，对于两个字符串\"abcdefg\"和\"abcdef\"两个字符串来说，我们可以通过“将前一个字符串减少一个g”或者“给后一个字符串增加一个g”这两种方式来使得它们相同，这两种方案，都仅需要一次操作。\r<br>\r<br>将修改字符串操作需要的最少的次数定义为两个字符串之间的距离，而相似度等于“距离+1”的倒数。例如，上例中\"abcdefg\"和\"abcdef\"的距离为1，则其相似度为1/2=0.5.\r<br>\r<br>给定任意两个字符串(长度20以内)，写出一个程序来求出它们的相似度。\r<br>\r<br></p>","aboutInput":"<p>第一行有一个整数n。表示测试数据的组数，\r<br>接下来共n行，每行两个字符串，用空格隔开。表示要计算距离的两个字符串\r<br>字符串长度不超过20。</p>","aboutOutput":"<p>针对每一组测试数据输出两个字符串的相似度，保留小数点后6位。</p>"},{"title":"球桌出租","id":"7a04508c46774ed0a9a29901546525a9","description":"<p>某乒乓球场里有很多张球桌,其中有一张由极品材料制作而成,大家都喜欢租这张球桌打球。\r<br>由于租的人太多,每年开张第一天,这张球桌的订单就如雪片一样飞来。这些订单中预订的时间从开张第一天一直到过年关门的那一天都有，更让老板为难的是：这些订单中总是有很多的时间冲突，接受了一张订单可能就有好些订单必须得拒绝。\r<br>现在，老板又在为这些订单犯愁了，某人很不厚道地向他透露了你精通动态规划算法的消息，于是老板二话没说把订单全扔给了你，请你为他选择接受一些订单使得获益最大。\r<br>对你来说，小菜一碟，不是么？:)</p>","aboutInput":"<p>第一行是一个正整数n(1<=n<=100000)，表示订单的数目。\r<br>接下来n行，每行表示一份订单，包含三个非负整数s,t和c，其中s,t表示订单预订的时间段及从时刻s到时刻t(0 <= s < t < = 2100000000)，c表示客户愿意为这份订单出多少钱。</p>","aboutOutput":"<p>输出只包含一个整数，表示采用最优方案时老板能够获益多少(答案不超过32位有符号整数所能表示的范围）。</p>"}]},{"title":"第四阶段编程练习（3）","id":"1f2fe29bcd0e4f9aa3fb796ed4d87747","problems":[{"title":"编程填空：排序","id":"9ce5cfb860114d2f9ae9cbea461324f5","description":"<p>模仿 <code>std::sort</code> 的接口，编写一个排序函数。\r<br>\r<br>排序函数 <code>sort</code> 接受三个参数：指向首元素的指针、指向尾元素下一位置的指针和指向比较函数 <code>cmp</code> 的指针。<code>sort</code> 会将指定范围内的元素排序：若 <code>cmp(a, b)</code> 为真，则将 <code>a</code> 排在 <code>b</code> 前面。\r<br>\r<br><app-pre>bool less(int a, int b) {\r<br>    return a &lt; b;\r<br>}\r<br>bool greater(int a, int b) {\r<br>    return a > b;\r<br>}\r<br>using CompareFunc = bool(int, int);\r<br>&nbsp;\r<br>void sort(int* begin, int* end, CompareFunc* comp) {\r<br></app-pre>\r<br><app-post>\r<br>}\r<br>&nbsp;\r<br>#include &lt;iostream>\r<br>&nbsp;\r<br>int main() {\r<br>    int a[100];\r<br>    int n;\r<br>    std::cin >> n;\r<br>    for (int i = 0; i &lt; n; i++) {\r<br>        std::cin >> a[i];\r<br>    }\r<br>    sort(a, a + n, &amp;less);\r<br>    for (int i = 0; i &lt; n; i++) {\r<br>        std::cout &lt;&lt; a[i] &lt;&lt; ' ';\r<br>    }\r<br>    std::cout << std::endl;\r<br>    sort(&amp;a[0], &amp;a[n], &amp;greater);\r<br>    for (int i = 0; i &lt; n; i++) {\r<br>        std::cout &lt;&lt; a[i] &lt;&lt; ' ';\r<br>    }\r<br>}\r<br></app-post>\r<br><link rel=\"stylesheet\" href=\"https://guyutongxue.github.io/pg-cloze-plugin/cloze.css\">\r<br><script src=\"https://guyutongxue.github.io/pg-cloze-plugin/cloze.js\"></script></p>","aboutInput":"<p>输入一共两行。第一行是一个正整数 n，不超过 100。\r<br>第二行有 n 个整数。</p>","aboutOutput":"<p>输出一共两行。\r<br>第一行将所有 n 个数从小到大排列；\r<br>第二行将所有 n 个数从大到小排列。\r<br>行末有空格。</p>"},{"title":"分割乘积","id":"78ebaa9f7be2412a810bdc3940c9fa63","description":"<p>给定一个整数，求插入两个乘号将该整数分割成三个数之后，三个数的的最大乘积。</p>","aboutInput":"<p>只有一行，一个整数。</p>","aboutOutput":"<p>所求出的最大乘积。</p>"},{"title":"左手定则","id":"0f6a59058e6644cdafa28492352c317d","description":"<p>玩过RPG（尤其是国产RPG）的童鞋都应该对迷宫这种神棍的设定深恶痛绝，尤其是当你转了半小时之后发现回到了原地，这种感觉真是无比的痛苦。。。万一游戏还中途崩溃了那真是连掀桌子、砸键盘、摔鼠标的心都有了……\r<br>经过无数次的TRIAL AND ERROR之后，玩家终于下定决心认定迷宫存在的意义就是延长游戏时间，SO，他决定借鉴著名的左手定则（就是在每一个路口，我们都选择最左边的方向，左转的优先级最高，其次为向前，最后为右转，如果实在走进了一个死胡同，那就连续右转两次，回头向后走。稍微研究一下这种走迷宫的方法，我们就发现在这个过程中，事实上我们的左手可以始终放在墙上。）对迷宫进行探索。\r<br>但是呢，左手定则并不能保证遍历到迷宫中的每一个点。悲剧的是，某项重要的通关道具被放在了这个迷宫中……幸运的是，游戏迷宫的地图可以绘制出来，现在请求你的帮助。对于一个给定的地图，他想知道是不是能够通过左手定则取得这件道具。\r<br></p>","aboutInput":"<p>多组数据。\r<br>对于每组数据，第一行有两个整数N,M代表接下来有n行字符串，每行m个字符，其中0 < n <= 100, 0 < m <= 100，表示一个n × m的迷宫。\r<br>其中‘#’表示墙，‘S’表示起点，‘T’表示道具，‘.’表示空地。\r<br>接下来是一个方向（NSWE），表示起始面向的方向。\r<br>数据保证最外一圈都是墙。\r<br></p>","aboutOutput":"<p>对于每组数据输出一行。‘YES’表示可以到达，‘NO’表示无法到达。</p>"},{"title":"基因检测","id":"7d56cc29c37d4a5887bdb8cf08b9a2da","description":"<p>用一个字符串表示一段基因，例如：“CTATGGGTTT”。两段基因的相似度定义为它们所包含的最大公共子串的长度。例如：“CCTTGG”和“TGGGC”的最大公共子串为“TGG”，它的长度为3，则我们称“CCTTGG”和“TGGGC”的相似度为3。现给定两段基因，要求计算它们的相似度。</p>","aboutInput":"<p>输入第一行包含一个正整数N（0 &lt N &lt; 100），表示测试数据的数目；接下来N行，每行包含两个字符串（每个字符串长度小于等于20），用一个空格隔开，分别表示给定的两段基因。</p>","aboutOutput":"<p>对于每组测试数据输出一行，该行包含一个整数，表示给定基因段的相似度。</p>"}]},{"title":"第四阶段编程练习（2）","id":"5acdf550b0d04f8c9166b9f3d00105e9","problems":[{"title":"编程填空：字符串转整数","id":"66bfd3bf775f4aac89faca45634fa4d1","description":"<p>补全 <code>tryParse</code> 函数：该函数用于将字符串转换为整数，其返回值表示转换是否成功（原字符串是否为合法整数形式）。\r<br>\r<br><app-pre>#include &lt;iostream>\r<br>#include &lt;cctype>\r<br>using namespace std;\r<br>&nbsp;\r<br>bool tryParse(const char* str, int* n) {\r<br></app-pre>\r<br><app-post>\r<br>}\r<br>int main() {\r<br>    int n;\r<br>    tryParse(\"42\", &n);\r<br>    cout &lt;&lt; \"Hello, \" &lt;&lt; n &lt;&lt; endl;\r<br>&nbsp;\r<br>    char str[10]{};\r<br>    while (cin >> str) {\r<br>        if (tryParse(str, &n)) {\r<br>            cout &lt;&lt; n + 1 &lt;&lt; endl;\r<br>        } else {\r<br>            cout &lt;&lt; \"Not an integer\" &lt;&lt; endl;\r<br>        }\r<br>    }\r<br>}\r<br></app-post>\r<br><link rel=\"stylesheet\" href=\"https://guyutongxue.github.io/pg-cloze-plugin/cloze.css\">\r<br><script src=\"https://guyutongxue.github.io/pg-cloze-plugin/cloze.js\"></script></p>","aboutInput":"<p>若干行字符串。每行字符串最多 9 个字符，不含空格。</p>","aboutOutput":"<p>先输出一行 <code>Hello, 42</code>。\r<br>随后，对于之前的每一行输入，将它们转换成整数值并 + 1。如果输入的字符串不是整数的形式，则输出 <code>Not an integer</code>。</p>"},{"title":"第五题：分词","id":"986eef90611543ec8ac5964988c4f17d","description":"<p>给定一个包含n个单词的英文词典和m个只由英文字母组成的字符串。\r<br>判断这些字符串能否由词典中的单词组成。\r<br>比如词典中包含5个单词：\"Jim\", \"and\", \"cat\",\"like\", \"dog\" \r<br>这些单词能组成\"Jimlikecatanddog\"、\"doglikecatandcatlikedog\"等，\r<br>但是不能组成\"catlikeme\"\r<br>\r<br>为了简化问题，所有的字母都是小写,而且词典中的所有单词长度都一样。\r<br></p>","aboutInput":"<p>第一行两个正整数，n和m（n，m都不超过100）；\r<br>接下来n行，每行一个单词，每个单词长度不超过20；\r<br>接下来m行，每行一个字符串，长度不超过1000；</p>","aboutOutput":"<p>m行，表示词库中的单词能否组成该字符串，能输出\"Yes\"，不能输出\"No\"。</p>"},{"title":"计算卷积","id":"c010e4dca7fc43829e900dfb2e3f86c4","description":"<p>在数字信号处理中，卷积是一种重要的运算。通常，我们使用快速傅立叶变换(FFT)来计算卷积。这里，为了编程简单起见，我们直接在时域计算卷积。设a,b是长度分别为M和N的数字信号，则a与b的卷积定义为<img src=\"convolution\">，i=0, 1, …, M+N-2。结果得到一个长度为M+N-1的数字信号。\r<br>\r<br>关于数字信号的说明：本题中，对于一个长度为M的数字信号，其在 ｛0，1，……，M-1｝ 之外的取值均为0</p>","aboutInput":"<p>第一行是一个正整数，表示测试数据的组数。\r<br>从第二行开始，每两行表示一组测试数据：例如，第二行有两个正整数M和N(都不大于30)，分别表示两个数字信号的长度；第三行是M+N个整数，前M个数表示第一个信号的取值，后N个数表示第二个信号的取值。\r<br></p>","aboutOutput":"<p>对于每组测试数据，输出一行整数，即本组两个输入信号的卷积结果</p>"},{"title":"子集合划分","id":"912ebb95059843e99b2badd5e08b9066","description":"<p>将一个没有重复元素的集合A分成若干个非空子集，使得A中每个元素属于且仅属于一个子集，那么这些子集构成的集合称为A的一个划分。现在给定集合的元素个数n，希望知道有多少种不同的划分（假定集合本身属于一种划分），当n=0的时候，也认为有一种划分。\r<br>例如，n=3 时，A={1，2，3}的所有划分如下：\r<br>{ {1} ， {2} ， {3} } \r<br>{ {1 ， 2} ， {3} } \r<br>{ {1 ， 3} ， {2} } \r<br>{ {1} ， {2 ， 3} } \r<br>{ {1 ， 2 ， 3} } \r<br>\r<br>一共有5种。</p>","aboutInput":"<p>若干行整数，每行一个整数n，当为-1时结束</p>","aboutOutput":"<p>每行对应的集合划分数（假设可以用long表示）</p>"},{"title":"例题(15.4) 八皇后 (1060)","id":"91b268f10bbc4d07942d894677f5003c","description":"<p>会下国际象棋的人都很清楚：皇后可以在横、竖、斜线上不限步数地吃掉其他棋子。如何将8个皇后放在棋盘上（有8 * 8个方格），使它们谁也不能被吃掉！这就是著名的八皇后问题。 \r<br>对于某个满足要求的8皇后的摆放方法，定义一个皇后串a与之对应，即a=b1b2...b8，其中bi为相应摆法中第i行皇后所处的列数。已经知道8皇后问题一共有92组解（即92个不同的皇后串）。 \r<br>给出一个数b，要求输出第b个串。串的比较是这样的：皇后串x置于皇后串y之前，当且仅当将x视为整数时比y小</p>","aboutInput":"<p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数b(1 <= b <= 92)</p>","aboutOutput":"<p>n行，每行输出对应一个输入。输出应是一个正整数，是对应于b的皇后串</p>"}]},{"title":"第四阶段编程练习（1）","id":"104964ac685e4dc4a30cbd4e56c36cb0","problems":[{"title":"顺序输出三个整数（使用指针完成）","id":"8835adf83557488daadf1ea1084e14b2","description":"<p>输入三个数（包括整数与浮点数），按由小到大的顺序输出。若输入为整数，则按整数输出；若输出为浮点数，则输出为浮点数，且保留小数点后2位。（请使用参数为指针的函数来完成！！！）</p>","aboutInput":"<p>输入为三个数，逗号隔开。</p>","aboutOutput":"<p>输出为按由小到大顺序排列的数，用逗号隔开。</p>"},{"title":"矩阵乘法(使用指针完成)","id":"07d9b716d61b437284f90a2a6c95dc8c","description":"<p>计算两个矩阵的乘法。n*m阶的矩阵A乘以m*k阶的矩阵B得到的矩阵C是n*k阶的，且C[i][j] = A[i][0]*B[0][j] + A[i][1]*B[1][j] + …… +A[i][m-1]*B[m-1][j](C[i][j]表示C矩阵中第i行第j列元素)</p>","aboutInput":"<p>首先输入G，即测试数据的组数\r<br>每组测试数据输入：\r<br>第一行为n, m, k，表示A矩阵是n行m列，B矩阵是m行k列，n, m, k均小于100\r<br>然后先后输入A和B两个矩阵，A矩阵n行m列，B矩阵m行k列，矩阵中每个元素不会大于10000\r<br></p>","aboutOutput":"<p>针对每组数据，输出n行k列的C矩阵</p>"},{"title":"字符串排序","id":"797bc56cb052405f87eba2b246bd9c50","description":"<p>将输入的字符串按字典序排序后升序输出。</p>","aboutInput":"<p>第一行是一个正整数n，表示字符串的数量，且n<=1000。\r<br>接下来n行每行是一个由小写字母组成的字符串，字符串的长度不会超过1000。</p>","aboutOutput":"<p>输出n行，每行输出一个字符串，要求按字典序升序输出。</p>"},{"title":"双素数","id":"9f7eb5676ff54e3f9ac8a67c585aba94","description":"<p>学习了计算概论课之后，我们知道整数在计算机中是以二进制存储的。数学兴趣小组最近在研究质数，他们想知道，素数的二进制表示有什么规律，比如：素数的二进制表示中1的个数是不是素数。我们给二进制表示中1的个数仍然是素数的素数，取名为“双素数”。现在请你写出一个程序，统计不大于n的正整数中有多少个“双素数”。</p>","aboutInput":"<p>输入多行，每行一个整数，即正整数n。（n<=12345）\r<br></p>","aboutOutput":"<p>输出多行，每行一个整数，即对应的不大于n的正整数中“双素数”的个数</p>"},{"title":"第四题：代码查重","id":"b4ab7c5bb07e485aac88bb20d89ce3f6","description":"<p>    五道口某职业学校开设了一门名为计算概论的课程。这门课程开设最初，老师、同学、助教相亲相爱，十分和谐。直到有一天，一名丧心病狂的助教写了一个代码查重程序，之前的温馨和谐的关系开始崩坏。学生们甚至发生了暴动，这个事件被后世成为T大计算机系灭门惨案。\r<br>    十年过去了，为了研究T大计算机系灭门惨案的始末，P大的老师让同学们实现那名丧心病狂的助教写的伤害了无数无辜同学的查重程序的简化版本。\r<br>\r<br>    输入两份代码，分别统计两份代码中的if，switch，while，for语句的数量，若两份代码中if和switch的数量之和，与while、for之和分别都相等，则判定这两份代码有相互抄袭的嫌疑。【简直丧心病狂！\r<br></p>","aboutInput":"<p>第1行一个整数n，代表第一份代码的行数\r<br>随后从2到n+1行为第一份代码\r<br>第n+2行一个整数m，代表第二份代码的行数\r<br>随后从n+3到n+m+2行为第二份代码</p>","aboutOutput":"<p>一行, 两份代码有相互抄袭的嫌疑, 输出Yes，否则输出No</p>"}]},{"title":"第三阶段编程练习（9）","id":"95dfaa51f570409bae19c0b4ac6a0fe1","problems":[{"title":"选择你喜爱的水果","id":"5c455825f62f47cdbe7d68140b9b9663","description":"<p>程序中保存了七种水果的名字，要求用户输入一个与水果有关的句子。程序在已存储的水果名字中搜索，以判断句子中是否包含七种水果的名称。如果包含，则用词组\"Brussels sprouts\"替换句子中出现的水果单词，并输出替换后的句子。如果句子中没有出现这些水果的名字，则输出\"You must not enjoy fruit.\".假设七种水果的名字为：apples, bananas, peaches, cherries, pears, oranges, strawberries. </p>","aboutInput":"<p>输入有多行，每行是一个字符串。每一行输入中只会有一个水果名称，不会存在一行输入包括多种水果名称或重复水果名称的情况。</p>","aboutOutput":"<p>如果包含水果单词，则用词组\"Brussels sprouts\"替换句子中出现的水果单词，并输出替换后的句子。如果句子中没有出现这些水果的名字，则输出\"You must not enjoy fruit.\".</p>"},{"title":"回数猜想","id":"e482048bdf534d3e931d5241396e60dd","description":"<p>回数猜想： 任取一个数，再把它倒过来，并把这两个数相加，然后把这个和数再倒过来，与原和数相加，重复此过程，一定能获得一个回数。例： 68 倒过来是 86 \r<br>        68+86= 154，154+451= 605， 605+506=1111 (回数) \r<br>编程，输入任意整数，按上述方法产生一个回数，为简便起见，最多计算7步，看是否能得到一个回数。 \r<br>要求： \r<br>主函数中接收键盘数据，显示该数与其倒数的和，输出每一步计算步骤。 \r<br>子函数1，计算该数的倒数。 \r<br>子函数2，验证和是否为回数，</p>","aboutInput":"<p>输入为int型</p>","aboutOutput":"<p>换行输出每步计算过程（最多七步）\r<br>输出7步内是否得到一个回数（Y/N）</p>"},{"title":"棋盘问题","id":"e201d4c7a17f4b6a971fa98bad77321a","description":"<p>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。</p>","aboutInput":"<p>输入含有多组测试数据。\r<br>每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个n*n的矩阵内描述棋盘，以及摆放棋子的数目。 n <= 8 , k <= n\r<br>当为-1 -1时表示输入结束。\r<br>随后的n行描述了棋盘的形状：每行有n个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。 </p>","aboutOutput":"<p>对于每一组数据，给出一行输出，输出摆放的方案数目C （数据保证C<2^31）。</p>"},{"title":"和为定值的子集数","id":"602b44e70a2a44769de13a38a02e96d0","description":"<p>已知 n 个正整数，wi  (1≤i≤n) 形成一个集合 W={w1,w2,...,wn}，集合中的元素彼此不相同。给定某个正整数 M ，集合W中可否存在子集，该子集的所有元素之和和恰好为M，问：这样的子集有多少个？\r<br>\r<br>例如，4个正整数为：\r<br>11 13 24 7\r<br>若给定M=31，则有两个子集{7,11,13}和{7,24}\r<br>于是，这样的子集有 2 个。\r<br></p>","aboutInput":"<p>第1行，输入若干个正整数，表示集合的元素，各整数之间以空格间隔；\r<br>后面有多行，每行表示一个 M 值；若某行的 M 值为0，则结束。</p>","aboutOutput":"<p>对应的每个有效的 M 值，输出相应行的子集数目</p>"},{"title":"水淹七军","id":"2e45a29d18174f088364097ac9ac77e9","description":"<p>随着最后通牒的递出，C国的总攻也开始了，由于C国在地形上的优势，C国总司令下令采用水攻，剿灭A国最后的有生力量。\r<br>地形图是一个M*N的矩阵，矩阵上每一个点都对应着当前点的高度。C国总司令将选择若干个点进行放水（放水……这个词很好很强大嘛……）。根据水往低处流的特性，水可以往四个方向的流动，被淹的地方的水面高度便和放水点的高度一样。然而，A国不是一马平川的，所以总会有地方是淹没不到的。你的任务很简单，判断一下A国司令部会不会被淹没掉。\r<br>我们将给你完整的地形图，然后给出A国司令部所在位置，给出C国将在哪几个点进行放水操作。你所需要的，就是给出A国司令部会不会被水淹。如果被水淹了，那么就意味着，战争结束了，否则，战争也会结束（八成被水包围了）……\r<br></p>","aboutInput":"<p>第一行：一个整数K，代表数据组数。\r<br>对于每一组数据：\r<br>第1行：符合题目描述的两个整数，M(0 < M <= 200)、N(0 < N <= 200)。\r<br>第2行至M+1行：每行N个数，以空格分开，代表这个矩阵上的各点的高度值H(0<=H<=1000)。\r<br>第M+2行：两个整数I(0 < I <= M)、J(0 < J <= N)，代表司令部所在位置。\r<br>第M+3行：一个整数P(0 < P <= M * N)，代表放水点个数。\r<br>第M+4行至M+P+4行：每行两个整数X(0 < X <= M)、Y(0 < Y <= N)，代表放水点。\r<br> </p>","aboutOutput":"<p>对于每组数据，输出一行，如果被淹则输出Yes，没有则输出No。</p>"}]},{"title":"第三阶段编程练习（8）","id":"8738ad932dba4f3289581a81d03b8a06","problems":[{"title":"带通配符的字符串匹配","id":"93b68230a2e84f6984ad8cdf5833aca6","description":"<p>通配符是一类键盘字符，当我们不知道真正字符或者不想键入完整名字时，常常使用通配符代替一个或多个真正字符。通配符有问号(?)和星号(*)等，其中，“?”可以代替一个字符，而“*”可以代替零个或多个字符。\r<br>\r<br>你的任务是，给出一个带有通配符的字符串和一个不带通配符的字符串，判断他们是否能够匹配。\r<br>\r<br>例如，1?456 可以匹配 12456、13456、1a456，但是却不能够匹配23456、1aa456；\r<br>2*77?8可以匹配 24457798、237708、27798。</p>","aboutInput":"<p>输入有两行，每行为一个不超过20个字符的字符串，第一行带通配符，第二行不带通配符</p>","aboutOutput":"<p>如果两者可以匹配，就输出“matched”，否则输出“not matched”</p>"},{"title":"质因数分解","id":"1b12bb79f83044298c507d1b6cdb3d3c","description":"<p>将一个大于1的正整数分解为质因数的积</p>","aboutInput":"<p>一个大于1的正整数，如，72</p>","aboutOutput":"<p>分解为质因数的积后输出，如\r<br>72=2*2*2*3*3</p>"},{"title":"判断元素","id":"e3dcaf68316042c895493599a600589f","description":"<p>有一个集合M是这样生成的：\r<br>(1) 已知 k 是集合 M 的元素；\r<br>(2) 如果 y 是 M 的元素，那么， 2y+1 和 3y+1 都是 M 的元素；\r<br>(3) 除了上述二种情况外，没有别的数能够成为 M 的一个元素。\r<br>\r<br>问题：任意给定 k 和 x，请判断 x 是否是 M 的元素。这里的 k是无符号整数，x 不大于 100000，\r<br>如果是，则输出YES，否则，输出 NO\r<br>\r<br>\r<br></p>","aboutInput":"<p>输入整数 k 和 x, 逗号间隔。</p>","aboutOutput":"<p>如果是，则输出 YES，否则，输出NO\r<br></p>"},{"title":"1102 迷宫","id":"5fa429bcb30e4ec2bfb3aceb6b53bf76","description":"<p>一天Extense在森林里探险的时候不小心走入了一个迷宫，迷宫可以看成是由n * n的格点组成，每个格点只有2种状态，.和#，前者表示可以通行后者表示不能通行。同时当Extense处在某个格点时，他只能移动到东南西北(或者说上下左右)四个方向之一的相邻格点上，Extense想要从点A走到点B，问在不走出迷宫的情况下能不能办到。如果起点或者终点有一个不能通行(为#)，则看成无法办到。</p>","aboutInput":"<p>第1行是测试数据的组数k，后面跟着k组输入。每组测试数据的第1行是一个正整数n (1 <= n <= 100)，表示迷宫的规模是n * n的。接下来是一个n * n的矩阵，矩阵中的元素为.或者#。再接下来一行是4个整数ha, la, hb, lb，描述A处在第ha行, 第la列，B处在第hb行, 第lb列。注意到ha, la, hb, lb全部是从0开始计数的。</p>","aboutOutput":"<p>k行，每行输出对应一个输入。能办到则输出“YES”，否则输出“NO”。</p>"},{"title":"图案计数","id":"cf8074dbcbb34d229241e7ccc05ebd07","description":"<p>一张画布里有n行*m列个格子，其中有的格子里有颜色填充，有的格子是空的没有颜色填充。现在需要你写一个程序来数出画布里边有颜色填充的格子构成了多少个图案，其中图案的定义为：\r<br>\r<br>如果两个有颜色的格子边相邻或者角相邻（即横、纵两个方向上的位置差都不超过1），则他们属于同一个图案。</p>","aboutInput":"<p>第一行为两个整数n和m（1<=n, m<=200）。\r<br>之后的n行，每行为一个长度为m的字符串，构成了整个画布。字符串中，#表示颜色，-表示空白。</p>","aboutOutput":"<p>一个整数，表示图案的个数</p>"},{"title":"有理数树","id":"e7761dc3b1ab4426869fbeb0b49afdc1","description":"<p>二叉树指的是一种树形结构，它的每个结点有至多两个子节点。\r<br>现在有一个由有理数组成的无穷二叉树形状如下：\r<br><pre>\r<br>         1/1 \r<br>    ______|______ \r<br>    |           | \r<br>   1/2         2/1 \r<br> ___|___     ___|___ \r<br> |     |     |     | \r<br>1/3   3/2   2/3   3/1 \r<br></pre>\r<br>\r<br>在p/q结点位置的左子节点为p/(p+q)，右子结点为(p+q)/q\r<br>现在已知所有有理数在这个二叉树内都存在，且仅出现一次。我们按照树的层次进行遍历，可以得到一个序列1/1, 1/2, 2/1, 1/3, 3/2, 2/3, 3/1, ...\r<br>\r<br>请你解决以下问题：对于给定一个有理数，求它在上述序列中的位置\r<br></p>","aboutInput":"<p>首先输入一个整数T，表示测试样例的数目。\r<br>接下来是T行，每行包含两个整数，分别代表有理数的分子与分母</p>","aboutOutput":"<p>对于每一行输入，请输出有理数在序列中的位置，位置从1开始计数,并且结果保证是在int的范围内</p>"}]},{"title":"第三阶段编程练习（7）","id":"480ead7cd930441b8ad433a3e6def7f7","problems":[{"title":"全排列","id":"281fd9ea8d7147d78aee3d9bae15bb37","description":"<p>给定一个由不同的小写字母组成的字符串，输出这个字符串的所有全排列。 \r<br>\r<br>我们假设对于小写字母有'a' < 'b' < ... < 'y' < 'z'，而且给定的字符串中的字母已经按照从小到大的顺序排列。</p>","aboutInput":"<p>输入只有一行，是一个由不同的小写字母组成的字符串，已知字符串的长度在1到6之间。</p>","aboutOutput":"<p>输出这个字符串的所有排列方式，每行一个排列。要求字母序比较小的排列在前面。字母序如下定义： \r<br>\r<br>已知S = s1s2...sk , T = t1t2...tk，则S < T 等价于，存在p (1 <= p <= k)，使得 \r<br>s1 = t1, s2 = t2, ..., sp - 1 = tp - 1, sp < tp成立。</p>"},{"title":"计算x的n阶勒让德多项式","id":"10175a299d5d405abbd241c533a8b8fa","description":"<p>n阶勒让德多项式的公式如下\r<br> <img src=\"legendre\"/></p>","aboutInput":"<p>输入两个整数，第一个是n的值，第二个是x的值</p>","aboutOutput":"<p>以double类型输出x的n阶勒让德多项式的值</p>"},{"title":"取石子游戏","id":"b56ab76ab6c44ae699468f17798b8673","description":"<p>有两堆石子,两个人轮流去取.每次取的时候,只能从较多的那堆石子里取,并且取的数目必须是较少的那堆石子数目的整数倍.最后谁能够把一堆石子取空谁就算赢.\r<br>比如初始的时候两堆石子的数目是25和7\r<br><table>\r<br><tr><td>25 7</td><td>--></td><td>11 7</td><td>--></td><td>4 7</td><td>--></td><td>4 3</td><td>--></td><td>1 3</td><td>--></td><td>1 0</td></tr>\r<br><tr><td>&nbsp;</td><td>选手1取</td><td>&nbsp;</td><td>选手2取</td><td>&nbsp;</td><td>选手1取</td><td>&nbsp;</td><td>选手2取</td><td>&nbsp;</td><td>选手1取</td></tr>\r<br></table>\r<br>最后选手1（先取的）获胜，在取的过程中选手2都只有唯一的一种取法。\r<br>给定初始时石子的数目，如果两个人都采取最优策略，请问先手能否获胜。</p>","aboutInput":"<p>输入包含多数数据。每组数据一行，包含两个正整数a和b，表示初始时石子的数目。\r<br>输入以两个0表示结束。\r<br></p>","aboutOutput":"<p>如果先手胜，输出\"win\"，否则输出\"lose\"</p>"},{"title":"猴子分苹果","id":"78066e095868471e8f4ee551fd12d412","description":"<p>有1堆苹果共 m 个，由 n 只猴子按个数平均分配。每次到达苹果堆放地的猴子只有1只，而且每个猴子都会平均分 1 次苹果。第1个到达的猴子将苹果平均分成 n 等份，但发现多 k ( k < n )个，于是，将多余的k个扔掉，然后拿走其中的1等份。第 2 个猴子同样将剩余的苹果又分成 n 等份，也发现多 k 个，并同样将多余的 k 个扔掉，然后拿走其中1等份。之后的每个猴子都这样（将剩余的苹果又分成 n 等份，也发现多 k 个，并将多余的 k 个扔掉，然后拿走其中1等份）。假设最后的猴子分配后至少可以拿走1个苹果，请根据输入的 n 和 k值，计算最小的 m</p>","aboutInput":"<p>输入猴子数目n 和扔掉的个数 k，其中 k 小于 n，n 和 k 之间以空格间隔。</p>","aboutOutput":"<p>输出最小苹果数目</p>"},{"title":"后缀表达式","id":"f38d70cb8c0044d9a4f7a04db991f3c6","description":"<p>后缀表达式是指这样的一个表达式：式中不使用括号，运算符号放在两个运算数之后，所有计算按运算符号出现的顺序，严格地自左而右进行（不用考虑运算符的优先级）\r<br>如：3*(5-2)+7对应的后缀表达式为：3 5 2 - *  7 + @。’@’为表达式的结束符号。\r<br>\r<br>（注：运算过程中请使用long long进行运算。）</p>","aboutInput":"<p>多行，每行一个用空格分割的后缀表达式。保证表达式长度不超过1000个字符。\r<br>表达式中可能出现整数，+ - * /四种运算符，以及@。</p>","aboutOutput":"<p>输出多行，为对应表达式的值。\r<br>\r<br>如果在运算过程中出现除0，则输出NaN。</p>"},{"title":"红与黑","id":"cded880b66c24e14850965e0ddc4876f","description":"<p>有一间长方形的房子，地上铺了红色、黑色两种颜色的正方形瓷砖。你站在其中一块黑色的瓷砖上，只能向相邻的四块瓷砖中的黑色瓷砖移动。请写一个程序，计算你总共能够到达多少块黑色的瓷砖。</p>","aboutInput":"<p>包括多个数据集合。每个数据集合的第一行是两个整数W和H，分别表示x方向和y方向瓷砖的数量。W和H都不超过20。在接下来的H行中，每行包括W个字符。每个字符表示一块瓷砖的颜色，规则如下 \r<br>‘.’：黑色的瓷砖 \r<br>‘#’：红色的瓷砖 \r<br>‘@’：黑色的瓷砖，并且你站在这块瓷砖上。该字符在每个数据集合中仅出现一次 \r<br>当在一行中读入的是两个零时，表示输入结束。</p>","aboutOutput":"<p>对每个数据集合，分别输出一行，显示你从初始位置出发能到达的瓷砖数(记数时包括初始位置的瓷砖)。</p>"}]},{"title":"第三阶段编程练习（6）","id":"28016115a85b48f7b7c3eaaab78279d3","problems":[{"title":"二叉树","id":"14d90c735ed343eaafb751a8174e24db","description":"<p><center><img src=\"2756.jpg\"></center>\r<br>如上图所示，由正整数1, 2, 3, ...组成了一棵无限大的二叉树。从某一个结点到根结点（编号是1的结点）都有一条唯一的路径，比如从10到根结点的路径是(10, 5, 2, 1)，从4到根结点的路径是(4, 2, 1)，从根结点1到根结点的路径上只包含一个结点1，因此路径就是(1)。对于两个结点x和y，假设他们到根结点的路径分别是(x<sub>1</sub>, x<sub>2</sub>, ... ,1)和(y<sub>1</sub>, y<sub>2</sub>, ... ,1)（这里显然有x = x<sub>1</sub>，y = y<sub>1</sub>），那么必然存在两个正整数i和j，使得从x<sub>i</sub> 和 y<sub>j</sub>开始，有x<sub>i</sub> = y<sub>j</sub> , x<sub>i + 1</sub> = y<sub>j + 1</sub>, x<sub>i + 2</sub> = y<sub>j + 2</sub>,... 现在的问题就是，给定x和y，要求x<sub>i</sub>（也就是y<sub>j</sub>）。</p>","aboutInput":"<p>输入只有一行，包括两个正整数x和y，这两个正整数都不大于1000。</p>","aboutOutput":"<p>输出只有一个正整数x<sub>i</sub>。</p>"},{"title":"习题(15-1) 前缀表达式 (1010)","id":"04904ada2e8241a7848d84f7977a446f","description":"<p>前缀表达式是一种把运算符前置的算术表达式，例如普通的表达式2 + 3的前缀表示法为+ 2 3。前缀表达式的优点是运算符之间不必有优先级关系，也不必用括号改变运算次序，例如(2 + 3) * 4的前缀表示法为* + 2 3 4。本题求解前缀表达式的值，其中运算符包括+ - * /四个。</p>","aboutInput":"<p>输入为一行，其中运算符和运算数之间都用空格分隔，运算数是浮点数。</p>","aboutOutput":"<p>输出为一行，表达式的值。 \r<br>可直接用printf(\"%f\\n\", v)输出表达式的值v。</p>"},{"title":"平衡矩阵","id":"c3d6dc32ad4f4f6fa37a2a82a96f334f","description":"<p>现在有一个n阶正整数方阵（n<=7），现在可以对矩阵的任意一行进行左移，具体操作为：每次对于某一行a_i1,a_i2,…,a_in进行一次左移，最左边的元素移动到这一行的末尾，其他元素均向左移动一位，即变为a_i2,a_i3,…,a_in,a_i1。对某一行可以执行任意次的左移。\r<br>现在我们的目标是：通过对矩阵的每一行进行若干次左移，使得矩阵中每列和的最大值最小。\r<br></p>","aboutInput":"<p>输入包含多组数据。\r<br>对于每组数据，第一行为一个正整数n（1<=n<=7），代表矩阵的阶。接下来的n行，每行n个正整数（不超过10000），代表这个矩阵。\r<br>输入数据以一个-1为结尾代表输入结束。</p>","aboutOutput":"<p>对于每组数据，输出一行一个正整数，为最小的最大列和。</p>"},{"title":"K进制数的子序列","id":"4eaa51ab16cb4142bf97563d7112831d","description":"<p>任意给定一个k（其中，k 大于1小于10）进制的数（不超过30位，且第一位不为0），以此为基点，按增1的方式连续输出后面的m个k进制数，其间以逗号间隔,这里，m为正整数。输出的每个数第一位不能为0，每行输出5个数，最后一行可以少于5个。\r<br>\r<br>例如，给定12位的5进制数：321234232132，后面的6个数依次为：\r<br>\r<br>321234232133,321234232134,321234232140,321234232141,321234232142,321234232143\r<br>\r<br>如果输出6个数，则应该是：\r<br>\r<br>321234232133,321234232134,321234232140,321234232141,321234232142\r<br>321234232143</p>","aboutInput":"<p>输入三个数k,m,和k进制数，三个数之间以逗号间隔，k进制数不超过30位，m为正整数。\r<br></p>","aboutOutput":"<p>输出后续的m个数，每行5个数（每行的最后一个数之后没有逗号），最后一行可以少于5个数。</p>"},{"title":"1090 分解因数","id":"3f6250de057749ef9db19293503ca093","description":"<p>给出一个正整数a，要求分解成若干个正整数的乘积，即a = a1 * a2 * a3 * ... * an，并且1 < a1 <= a2 <= a3 <= ... <= an，问这样的分解的种数有多少。注意到a = a也是一种分解。</p>","aboutInput":"<p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a (1 < a < 32768)</p>","aboutOutput":"<p>n行，每行输出对应一个输入。输出应是一个正整数，指明满足要求的分解的种数</p>"},{"title":"习题(15-2) 硬币面值组合","id":"802209a27bab488fbdb50c87852f5140","description":"<p>使用1角、2角、5角硬币组成 n 角钱。\r<br>设1角、2角、5角的硬币各用了a、b、c个，列出所有可能的a, b, c组合。\r<br>输出顺序为，按c的值从小到大，c相同的按b的值从小到大输出。\r<br>要求必须使用递归。</p>","aboutInput":"<p>输入只有一个整数n（1 <= n <= 100)，代表需要组成的钱的角数。</p>","aboutOutput":"<p>输出有若干行，每行的形式为：\r<br>i           a           b           c\r<br>\r<br>第1列i代表当前行数（行数从001开始，固定3个字符宽度，宽度不足3的用0填充），\r<br>后面3列a, b, c分别代表1角、2角、5角硬币的个数（每个数字固定12个字符宽度，宽度不足的在左边填充空格）</p>"}]},{"title":"第三阶段编程练习（5）","id":"6bb0af3f46294ed1987c84bf9b0e9137","problems":[{"title":"营养与健康","id":"37be695827bb41a3a229e7ce9a993190","description":"<p>随着人们生活水平的日益提高，健康越来越受到大家的关注。营养搭配，合理膳食，开始成为人们日常饮食追求的目标。营养学家希望能在计算机上开发一套饮食指导系统，来帮助人们检查每日饮食搭配是否合理，并提出指导意见。\r<br>假设我们只考虑一种营养成分：钙。已知人体每天需摄入600-1000毫克钙。钙的主要来源有：豆腐，110毫克/100克；牛奶，120毫克/100克；海带，2250毫克/100克；虾米，880毫克/100克。当用户输入四种食物每天的摄入量后，系统就会判断钙的摄入量是否合理。\r<br></p>","aboutInput":"<p>一行，4个整数，分别表示用户每日摄入的豆腐、牛奶、海带、虾米的量，单位克</p>","aboutOutput":"<p>一行，饮食指导系统的反馈结果\r<br>如果摄入过量，输出\"OVER\"；如果摄入不足，输出\"UNDER\"；如果适量，输出\"FINE\"\r<br></p>"},{"title":"角谷猜想","id":"908db2648b00454ebc7905fbb316c54d","description":"<p>所谓角谷猜想，是指对于任意一个正整数，如果是奇数，则乘3加1，如果是偶数，则除以2，得到的结果再按照上述规则重复处理，最终总能够得到1。如，假定初始整数为5，计算过程分别为16、8、4、2、1。\r<br>程序要求输入一个整数，将经过处理得到1的过程输出来。</p>","aboutInput":"<p>一个正整数</p>","aboutOutput":"<p>从输入整数到1的步骤，每一步为一行，每一部中描述计算过程，假定输入为7，则输出为：\r<br>7*3+1=22\r<br>22/2=11\r<br>11*3+1=34\r<br>34/2=17\r<br>17*3+1=52\r<br>52/2=26\r<br>26/2=13\r<br>13*3+1=40\r<br>40/2=20\r<br>20/2=10\r<br>10/2=5\r<br>5*3+1=16\r<br>16/2=8\r<br>8/2=4\r<br>4/2=2\r<br>2/2=1\r<br>最后一行输出\"End\"，如果输入为1，直接输出\"End\"\r<br></p>"},{"title":"字符串p型编码","id":"a387f7a721c04710a788a79a576c09b2","description":"<p>给定一个完全由数字字符（'0','1','2','3'…'9'）构成的字符串str，请写出str的p型编码串。例如：字符串122344111可被描述为\"1个1、2个2、1个3、2个4、3个1\"，因此我们说122344111的p型编码串为1122132431；类似的道理，编码串101可以用来描述1111111111；00000000000可描述为\"11个0\"，因此它的p型编码串即为110；100200300可描述为\"1个1、2个0、1个2、2个0、1个3、2个0\"，因此它的p型编码串为112012201320。</p>","aboutInput":"<p>输入包含若干测试。第一行给出测试的组数k，接着k行输入为字符串。每一行字符串最多包含1000个数字字符。</p>","aboutOutput":"<p>对每一组测试，输出该字符串对应的p型编码串，输出k行结果（每一输出结果后只需换一行）。</p>"},{"title":"孙悟空找师傅","id":"7946182946b94243a1236341de631d2b","description":"<p>“大师兄，师傅又被妖怪抓走了！”，沙师弟说道。悟空听到这个消息，便立刻前去救师傅。可是当悟空来到妖怪洞府时，发现妖怪给自己设了一个阵，只有成功破解这个阵，悟空才能救出师傅。请帮悟空判断他能否救出师傅。\r<br></p>","aboutInput":"<p>输入第一行是两个数字m和n，表示该阵为m*n大小（0 < m,n <= 50，m为行，n为列）。接下来是一个m*n的矩阵表示这个阵。其中0为该阵中可走的路，1为墙（即不能走的位置），2为悟空的位置，3为师傅的位置。悟空只有四个可行的行走方向：即，上、下、左、右，不能斜对角线穿越。每行输入的数据之间都是空格间隔。\r<br></p>","aboutOutput":"<p>输出只有一行，\"Yes\"或\"No\"表示悟空是否可以成功救出师傅（悟空能走到师傅的位置即可救出师傅）。</p>"},{"title":"找相似串","id":"0b9cf99d7ee34e57a7e5cfc502dcbf8b","description":"<p>在近似搜索中经常需要计算串的相似性。所谓找相似串，就是从某个串的集合T 中找出与给定串 S 最相似的串。如果在T中有一个串和S完全相同，那么，这个串与S的相似度最高。一般情况下，度量两个串 S1 和 S2 的相似性，可以通过从一个串变换成另一个串所需要的最少操作次数来衡量，需要的操作次数越少，则越相似。假设从一个串变化成另一个串所允许的操作只有两种：插入一个字符或者删除一个字符。无论是插入还是删除一个符号，均算作一次操作。当给定串S和集合T时，请从T中找出与 S最相似的串。\r<br> \r<br>例如 两个串分别为S1=abcd 和 S2=aced\r<br>从S1 变化为 S2 所需要的最少操作是：\r<br>删除 S1 中的 b（一次操作），然后在d之前插入 e（一次操作），共2次操作。\r<br>\r<br>如果S2=abed，同样由 S1 变换成 S2 也需要 2次操作（先删除 S1 中的 c， 再插入 e）。\r<br></p>","aboutInput":"<p>第一行给定一个串 S，长度不大于500；\r<br>第二行给定一个整数 n，n 不大于200；\r<br>其后给 n 行串作为串集合 T，每个串长度不大于500；\r<br></p>","aboutOutput":"<p>从T 中找到与串 S 最相似的串输出，如果有多个串同时与 S 最相似，则按T中串的顺序输最相似的串，每行一个串。</p>"},{"title":"集合里的乘法","id":"af2cfe331fc84f83afdf712d782c74fd","description":"<p>给定一个目标数T和一个整数集合S，判断是否存在S的一个非空子集，子集中的数相乘的积为T。</p>","aboutInput":"<p>输入为两行。\r<br>第一行为目标数T，和S中的元素个数N，以空格隔开。\r<br>第二行为S中的N个元素，以空格隔开。\r<br>其中 N <= 16。</p>","aboutOutput":"<p>如果可以，则输出YES，否则输出NO。</p>"}]},{"title":"2022年期中考试","id":"be8abce238434e5293d6e9cde1ef15a4","problems":[{"title":"是否中闪电","id":"d9b9195f3e2d4016b7b07f508a890e5f","description":"<p>萧桥同学喜欢玩桌游，尤爱三国杀。在三国杀中，延时锦囊牌“闪电”生效（即“中闪电”）的条件是下一张判定牌为黑桃且牌面数值在2到9之间（包含2和9）。现在告诉你下一张判定牌的花色以及数值，你来判断一下萧桥同学是否会中闪电？</p>","aboutInput":"<p>一行，牌的花色与大小。花色在（heitao, hongtao, fangpian, meihua）范围内，大小在1-13范围内。</p>","aboutOutput":"<p>一行，中闪电则输出yes，不中则输出no</p>"},{"title":"海龟去哪儿了","id":"412faf95b34d48d1839956a8e15b7775","description":"<p>海龟从坐标原点（0，0）出发，每次移动，坐标变化量为dx, dy；\r<br>输入一系列坐标的变化量，输出海龟移动若干次后，到原点的距离。\r<br>例如：\r<br>第一次，-1 -1移动到（-1，-1）\r<br>第二次，1 0移动到（0，-1）\r<br>第三次，1 2移动到（1，1）\r<br>经过三次移动，距离原点1.4142\r<br>也就是说，输入：\r<br>-1.0 -1.0 1.0 0.0 1.0 2.0\r<br>输出\r<br>1.4142\r<br></p>","aboutInput":"<p>一行若干个浮点数，若干对（dx，dy）</p>","aboutOutput":"<p>一个浮点数，保留小数点后4位\r<br></p>"},{"title":"门诊计数","id":"81115b37679745f49480aa154fba25ce","description":"<p>医院某科门诊早上开两个小时。从8点开始可以排队，9点开始正式门诊，每个病人需要看10分钟(若最后剩余不足10分钟，则不进行门诊)，11点门诊结束。输入包含n（n<=20）个病人的到达时间（距离8点的分钟数），输出最终得到门诊的病人数。</p>","aboutInput":"<p>第一行为病人数n。\r<br>之后有n行，每行为病人到达的时间\r<br></p>","aboutOutput":"<p>一个整数：能得到门诊的病人数</p>"},{"title":"有效的密码","id":"1a8303a4b91547f88937b69998634224","description":"<p>由于北大未名BBS比较知名，容易引来黑客攻击。因此，对每个人的账户而言，密码越复杂，被黑客破解的可能性就越低。通常而言，密码至少由不少于六个字符组成，由以下规则判定密码是否安全：\r<br>1. 如果密码长度小于6位，则不安全\r<br>2. 如果组成密码的字符只有一类，则不安全\r<br>3. 如果组成密码的字符有两类，则为中度安全\r<br>4. 如果组成密码的字符有三类或以上，则为安全\r<br>\r<br>通常，把数字、大写字母、小写字母和其它符号归为四类不同的字符。</p>","aboutInput":"<p>输入的第一行是一个整数n，表明后面有n组密码输入。随后的n行每行代表一个密码，每个密码的长度均小于50个字符（不含空格）。</p>","aboutOutput":"<p>针对每一个密码判断并输出它是否安全。对于不安全的密码输出\"Not safe\"，对于中度安全的密码输出\"Medium safe\"，对于安全的密码输出\"Safe\"</p>"},{"title":"柱状图上的最大矩形","id":"cf0a63d5fc754220b951e76a087ed7b1","description":"<p>给定n个非负整数，代表柱状图上每个柱的高度（宽度均为1），求这个柱状图中最大的矩形面积。例如对于输入\"2 1 5 6 2 3\"，最大面积为10（见下图）\r<br><img src=\"histogram.png\" /></p>","aboutInput":"<p>第一行是一个整数n，代表有多少个柱形，n小于等于20000\r<br>第二行有n个整数，依次为每个柱形的高度</p>","aboutOutput":"<p>一个数字，即这个柱状图中最大的矩形面积，面积最大不超过int的表示范围</p>"},{"title":"判断是否为C语言的合法标识符","id":"aa775db908c04168bc187c1be51d98d9","description":"<p>C语言中的合法标识符的定义为：以下划线或字母开头的字母数字串（含下划线）。\r<br>完成一个程序实现对输入的n个字符串进行判定，是否为C语言的合法标识符。如果是则输出1，不是则输出0</p>","aboutInput":"<p>输入的第一行为一个数字，表明有几个输入字串。\r<br>后面每一行为一个长度不超过80的字符串。</p>","aboutOutput":"<p>对所有输入的字符串进行判断，是合法标识符则输出1，回车。否则输出0，回车。</p>"},{"title":"例题(15.6) 细菌实验分组","id":"ce0dfa4caced4cb78360eb41fa25a5d6","description":"<p>有一种细菌分为A、B两个亚种，它们的外在特征几乎完全相同，仅仅在繁殖能力上有显著差别，A亚种繁殖能力非常强，B亚种的繁殖能力很弱。在一次为时一个小时的细菌繁殖实验中，实验员由于疏忽把细菌培养皿搞乱了，请你编写一个程序，根据实验结果，把两个亚种的培养皿重新分成两组。</p>","aboutInput":"<p>输入有多行，第一行为整数n（n&le;100），表示有n个培养皿。\r<br>其余n行，每行有三个整数，分别代表培养皿编号，试验前细菌数量，试验后细菌数量。</p>","aboutOutput":"<p>输出有多行：\r<br>第一行输出A亚种培养皿的数量，其后每行输出A亚种培养皿的编号，按繁殖率升序排列。\r<br>然后一行输出B亚种培养皿的数量，其后每行输出B亚种培养皿的编号，也按繁殖率升序排列。\r<br></p>"},{"title":"啤酒厂选址","id":"e708537589714fd9a93f0e93407d4055","description":"<p>海上有一个岛，在环海边上建有一条环岛高速公路，沿着公路有n（5 < n < 10000）个居民点，假设每个居民点有一个编号，从0开始，按顺时针依次从小到大（即，0,1，…，n-1）编号。在岛上啤酒很受青睐。某啤酒企业计划在岛上投资建一个啤酒厂，并根据啤酒需求每天向居住点送啤酒。已知两个相邻的居民点的距离以及每个居住点每天的啤酒需求量（假设每个居住点每天不超过2000桶）。假定每单位长度的路程送一桶啤酒需要的费用恒定（为单位费用）。请问，选择哪一个居民点建啤酒厂，才能使每天送啤酒的费用最小（空车不计费用）。</p>","aboutInput":"<p>第一行：为居民点数目n\r<br>后面为n行，每行为一个居民点的啤酒需求量以及按顺时针离下一个居民点的距离（均为整数,空格间隔），从编号为0的开始，按单增顺次给出。\r<br>\r<br>注意：后面第n行对应于居民点（n-1)的啤酒需求量以及到编号为0的居民点距离。\r<br></p>","aboutOutput":"<p>啤酒厂所在的居民点编号以及每天的运输费用，其间以逗号间隔</p>"},{"title":"带符号的大整数相减","id":"864a3e7dd43e4128a3a1b167ee5d6e96","description":"<p>给定两个不超过200位的大整数（200位包含符号位。正整数和0可以带符号，也可以不带符号），计算其差值（前面的值-后面的值）。</p>","aboutInput":"<p>第1行输入 n ，表示后面有 n 组数。\r<br>之后，每组数依次占两行，表示被减数与减数；相邻的两组数之间隔一行。</p>","aboutOutput":"<p>逐行输出相减的结果（若结果不为0，最高位不能是0；若结果为非负整数，不能带符号）。</p>"}]},{"title":"期中模拟考试（选做，不记成绩）","id":"78b8e9d24b994a30be5dee0e0c1b11e0","problems":[{"title":"佩奇的勇气机","id":"72f75af0499843d69f5adec83cadade9","description":"<p>佩奇的期末考试马上就要开始了, 但是他没有足够的勇气报名参加, 为了帮助佩奇,她的小伙伴给她准备一台勇气获得机。初始的时候佩奇的勇气值是0, 勇气获得机有两个按钮:\r<br>\r<br>1、N按钮: 如果当期拥有的勇气值为x, 按下之后勇气值将变为2*x+1，\r<br>\r<br>2、G按钮: 如果当前拥有的勇气值为x, 按下之后勇气值将变为2*x+2，\r<br>\r<br>勇气值过高也会膨胀,所以佩奇需要将自己的勇气值恰好变为n, 请你帮助她设计一个勇气获得机的按键方案使妞妞的勇气值恰好变为n。</p>","aboutInput":"<p>输入包括一行, 包括一个正整数n(1 <= n <= 100000), 表示佩奇最后需要的勇气值。</p>","aboutOutput":"<p>输出一行字符串, 每个字符表示该次佩奇选择按动的按钮,'N'表示该次按动N按钮,'G'表示该次按动G按钮。</p>"},{"title":"字符串最大跨距","id":"9b8175e20f894853aa1a4e93a0d9cf07","description":"<p>有三个字符串S,S1,S2，其中，S长度不超过300,S1和S2的长度不超过10，想检测S1和S2是否同时在S中出现，且S1位于S2的左边，并在S中互不交叉（即，S1的右边界点在S2的左边界点的左侧）。计算满足上述条件的最大跨距（即，最大间隔距离：最右边的S2的起始点与最左边的S1的终止点之间的字符数目）。如果没有满足条件的偶对S1，S2存在，则输出 -1\r<br>\r<br>例如，S = \"abcd123ab888efghij45ef67kl\", S1=\"ab\", S2=\"ef\"，其中，S1在S中出现了2次，S2也在S中出现了2次，最大跨距则为：18</p>","aboutInput":"<p>三个串：S, S2, S3，其间以逗号间隔（注意，S, S2, S3中均不含逗号）；</p>","aboutOutput":"<p>S1和S2在S最大跨距；若在S中没有满足条件的S1和S2，则输出-1</p>"},{"title":"矩形覆盖","id":"7a4b2fd824dc415c8a1fe4ab6de85032","description":"<p>该题目的数据代表两种操作：\r<br>1. 在指定的区域上添加一个矩形（可以和以前已有的矩形重叠）；\r<br>2 .询问一个矩形是否被已添加的所有矩形形成的区域完全覆盖。\r<br>\r<br>写程序完成添加矩形操作，并且针对第二种询问操作，如果被覆盖，则输出“Yes”，否则输出：“No”</p>","aboutInput":"<p>第一行是一个整数n (1<=n<=500)，代表有n个操作。\r<br>\r<br>接下来共有n行，\r<br>\r<br>每一行第一个数字为0时，代表该步要添加新矩形，接下来有四个整数x1,y1,x2,y2 (0 <= x1 <= 500, 0 <= x2 <= 500, 且x1小于x2 ;  0 <= y1 <= 500, 0 <= y2 <= 500, 且y1小于y2)，\r<br>代表该新矩形的左下角坐标为(x1,y1)，右上角坐标为(x2,y2)。\r<br>\r<br>每一行第一个数字为1时，代表该步要进行询问，接下来有四个整数x1,y1,x2,y2 (0 <= x1 <= 500, 0 <= x2 <= 500, 且x1小于x2 ;  0 <= y1 <= 500, 0 <= y2 <= 500, 且y1小于y2)，\r<br>代表需要被询问的矩形的左下角坐标为(x1,y1)，右上角坐标为(x2,y2)。</p>","aboutOutput":"<p>对于每一个询问操作，若给出的矩形被之前添加的矩形覆盖，那么输出“Yes”,否则输出“No”。</p>"},{"title":"好人坏人","id":"259350e26d1d4c748446c198c9f3ca00","description":"<p>小朋友们在玩游戏：2k个小朋友围成一个圈，标号依次从1到2k，其中k个扮演好人，另k个扮演坏人。游戏规则如下：从第一个小孩开始报数，报到m时，第m个小孩被踢出，然后从下一个小孩开始，重复前面的过程，直到还剩下k个小孩，停止踢人。我们希望被踢出的都是坏人。已知前k个是好人，后k个是坏人，现在要求你对于每一个k，确定一个最小的正整数m，使得按游戏规则踢出的k个孩纸都是坏人。\r<br></p>","aboutInput":"<p>输入有多行，每行一个非负整数k，k不大于13。若输入为0，则标志着输入结束。\r<br></p>","aboutOutput":"<p>对于每一个正整数k，输出最小的m</p>"},{"title":"1020 跳格问题","id":"e4cb1cc73ee0415fb9f4f6aa6d0e0664","description":"<p>有一种游戏，在纸上画有很多小方格，第一个方格为起点(S)，最后一个方格为终点。有一个棋子，初始位置在起点上，棋子每次可移动一次，棋子在起点时，可向前移动一个格子到第二个方格内；棋子在其他方格内时，可根据方格内的数字Ni进行移动。如果Ni大于零，就向前移动Ni个格子；如果Ni小于零，就向后移动-Ni个格子；如果Ni等于零，则此次原地不动一次，在下一步移动时可向前移动一步到下一个格子。显然，如果仅按此方案，会出现棋子永远移动不到终点的情形。为防止这种情况发生，我们规定，当棋子再次来到它曾经到过的方格时，它需要原地不动一次，在下一步移动时可向前移动一步到下一个格子。按此方案，棋子总能够走到终点(F)。如果给定一个方格图，试求棋子要走多少步才能从起点走到终点。（注：当然还可能会出现向前移动Ni个格子就跑过终点了，则把棋子放到终点上。如果Ni太小，使得棋子向后移动跑过了起点，则把棋子放到起点上。）（如图所示，其中S代表起点，F代表终点）（只有离开后再次来到一个方格时，才算来到它曾经到过的方格，包括起点S） \r<br><img src=\"a8.gif\"></p>","aboutInput":"<p>第一行为所有中间格子的总数n（n&lt;20）（即加上起点小格子和终点小格子，共有n+2个小格子）。 \r<br>其余各行上分别为一个整数，表示对应的小格子上的初始数字。</p>","aboutOutput":"<p>输出一行，要从起点跳到终点，共要跳多少步。\r<br>（注：每跳一步，可能跳过多个格子，也可能原地不动。)</p>"},{"title":"区间合并2.0版本","id":"1649748bac7c4f95b2876a38fac12e55","description":"<p>给定 n 个闭区间 [ai; bi]，其中i=1,2,...,n。 我们可以通过添加一些闭区间来使这些区间可以用一个不间断的闭区间来表示。我们的任务是找出这些需要添加的闭区间中的最小的集合（最小的集合是指这些区间包含的整数个数总和最小），并将其按照升序输出（所谓升序，即对于区间[a;b]和[c;d]是升序的，当且仅当a ≤ b < c ≤ d），如果这些区间本来就可以用一个闭区间来表示，则输出”Not Needed”。</p>","aboutInput":"<p>第一行为一个整数n，3 ≤ n ≤ 50000。表示输入区间的数量。在第i+1行上（1 ≤ i ≤ n），为两个整数 ai 和 bi ，整数之间用一个空格分隔，表示区间 [ai; bi]（其中 1 ≤ ai ≤ bi ≤ 100000）。</p>","aboutOutput":"<p>输出应包括所找到的结果区间中的全部，每行为一个区间，由两个整数中间用一个空格分隔表示，两个整数依次为该区间的开始数和结尾数，这些区间以升序的顺序输出。如果输入的区间可以用一个闭区间来表示，则输出”Not Needed”</p>"},{"title":"五子棋判输赢","id":"4bf94e9425d5464aa1869e40a0df66e8","description":"<p>在一个N×N的棋盘上下五子棋。给定对弈双方的落子序列 (x0, y0), (x1, y1),  ..., (xn, yn)，判断走到多少步时，哪方获胜。</p>","aboutInput":"<p>第一行有两个整数，棋盘的边长N和落子序列的长度n。\r<br>其余各行每行两个数字，分别为横、纵坐标，且第二、四、六……行为黑方落子的位置，第三、五、七……行为白方落子的位置。\r<br>输入一定是合理的，而且一定能分出输赢；但可能因为在满足输赢条件时，对弈双方没有看出输赢，而多行了数步。</p>","aboutOutput":"<p>输出为一行，包含两个整数，第一个数是判断出输赢时行棋的步数，第二个数表示获胜方：0代表黑方获胜；1代表白方获胜。</p>"},{"title":"打鱼还是晒网","id":"fe5ea697d5c94bbe903847f7183a1eee","description":"<p>中国有句俗语叫“三天打鱼两天晒网”。某人从1990年1月1日起开始“三天打鱼两\r<br>天晒网”，问这个人在以后的某一天中是“打鱼”还是“晒网”。\r<br>注意要区分闰年和不是闰年的两种情况</p>","aboutInput":"<p>输入为三个整数\r<br>按照年 月 日 输入为之后的某一天</p>","aboutOutput":"<p>输出为单词\r<br>如果今天渔夫打鱼就是\r<br>fishing\r<br>如果今天晒网就是\r<br>sleeping</p>"},{"title":"有趣的二进制","id":"300eec7960eb41ae9aaec834335e22f4","description":"<p>最近北京大学药学院的小晨在计概课上学习到二进制之后对其产生了浓厚的兴趣，在每次操作仅能移动相邻的0和1的前提下，她想知道把一个二进制数转换成另一个二进制数的最小操作数。</p>","aboutInput":"<p>输入共三行：\r<br>\r<br>第一行为一个整数n (0 < n <= 200)，代表二进制数的位数\r<br>\r<br>第二行为第一个二进制数的每一位\r<br>\r<br>第三行为第二个二进制数的每一位</p>","aboutOutput":"<p>输出将第一个二进制数转换为第二个二进制数的最少操作数，如果答案不存在，则输出-1</p>"}]},{"title":"第三阶段编程练习（4）","id":"bc233ea95f0a48debf2cbbe4e5905fc6","problems":[{"title":"1057 放苹果","id":"0aa5e8ce9cf549dc81dc5c927e7199e3","description":"<p>把M个同样的苹果放在N个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？（用K表示）5，1，1和1，5，1 是同一种分法。</p>","aboutInput":"<p>第一行是测试数据的数目t（0 <= t <= 20）。以下每行均包含二个整数M和N，以空格分开。1<=M，N<=10。</p>","aboutOutput":"<p>对输入的每组数据M和N，用一行输出相应的K。</p>"},{"title":"垂直直方图","id":"0fc1129f013d4aa280ba22561eb6fb43","description":"<p>输入4行全部由大写字母组成的文本，输出一个垂直直方图，给出每个字符出现的次数。注意：只用输出字符的出现次数，不用输出空白字符，数字或者标点符号的输出次数。</p>","aboutInput":"<p>输入：包括4行由大写字母组成的文本，每行上字符的数目不超过80个。</p>","aboutOutput":"<p>输出：包括若干行。其中最后一行给出26个大写英文字母，这些字母之间用空格隔开。前面的几行包括空格和星号，每个字母出现几次，就在这个字母的上方输出一个星号。\r<br>注意：输出的第一行不能是空行。每行的末尾不能有空格。每行以#开始</p>"},{"title":"拔牙","id":"c48f72153bac4f068373b92e78d12261","description":"<p>    浩助教当了一学期的口腔二班助教，有一天，他突然对各种动物的牙齿颗数产生了兴趣，经过查阅资料，他发现，一般成人有32颗牙齿，狗有42颗牙齿，鳄鱼有66颗牙齿，蜗牛据说有25600颗牙齿。\r<br>    OK，假设你是一名优秀的牙医，目标是将某种动物所有的n颗牙齿全部拔掉，考虑到患者的感受，每个月只能拔掉1颗或者2颗牙齿，直到拔完为止，你的任务是写一个程序，求一共有多少种不同的拔牙方式。\r<br>    例如有3颗牙齿，你可以选择第一个月拔掉1颗，第二个月拔掉2颗，也可以选择第一个月拔掉2颗，第二个月拔掉1颗，也可以选择三个月每个月拔1颗。这样一共有3种拔牙方式。</p>","aboutInput":"<p>输入只有一行，表示牙齿的颗数n（0 &lt; n &lt; 30）。</p>","aboutOutput":"<p>输出所有可能的拔牙方式的种类数。</p>"},{"title":"变幻的矩阵","id":"45324c0b73ba42ffbacd1bbc051a6137","description":"<p>\r<br>\r<br>有一个N x N（N为奇数，且1<=N<=10）的矩阵，矩阵中的元素都是字符。这个矩阵可能会按照如下的几种变幻法则之一进行变幻（只会变幻一次）。\r<br>\r<br>现在给出一个原始的矩阵，和一个变幻后的矩阵，请编写一个程序，来判定原始矩阵是按照哪一种法则变幻为目标矩阵的。\r<br>\r<br>1. 按照顺时针方向旋转90度；\r<br>如： \r<br>1 2 3          7 4 1\r<br>4 5 6  变幻为  8 5 2\r<br>7 8 9          9 6 3\r<br>\r<br>2. 按照逆时针方向旋转90度；\r<br>如：\r<br>1 2 3  \t      3 6 9\r<br>4 5 6  变幻为  2 5 8\r<br>7 8 9          1 4 7 \r<br>\r<br>3. 中央元素不变（如下例中的 5），其他元素（如下例中的3）与“以中央元素为中心的对应元素”（如下例中的7）互换；\r<br>如：\r<br>1 2 3  \t      9 8 7\r<br>4 5 6  变幻为  6 5 4\r<br>7 8 9          3 2 1 \r<br>\r<br>4. 保持原始矩阵，不变幻；\r<br>\r<br>5. 如果 从原始矩阵 到 目标矩阵 的变幻，不符合任何上述变幻，请输出5</p>","aboutInput":"<p>第一行：矩阵每行/列元素的个数 N； \r<br>\r<br>第二行到第N+1行：原始矩阵，共N行，每行N个字符； \r<br>\r<br>第N+2行到第2*N+1行：目标矩阵，共N行，每行N个字符；</p>","aboutOutput":"<p>只有一行，从原始矩阵 到 目标矩阵 的所采取的 变幻法则的编号。 </p>"},{"title":"例题(15.2)排队游戏","id":"6f5a50bd35764e4cba8d60b10cf7f253","description":"<p>在幼儿园中，老师安排小朋友做一个排队的游戏。首先老师精心的把数目相同的小男孩和小女孩编排在一个队列中，每个小孩按其在队列中的位置发给一个编号（编号从0开始）。然后老师告诉小朋友们，站在前边的小男孩可以和他后边相邻的小女孩手拉手离开队列，剩余的小朋友重新站拢，再按前后相邻的小男孩小女孩手拉手离开队列游戏，如此往复。由于教师精心的安排，恰好可以保证每两个小朋友都能手拉手离开队列，并且最后离开的两个小朋友是编号最小的和最大的两个小朋友。（注：只有小男孩在前，小女孩在后，且他们两之间没有其他的小朋友，他们才能手拉手离开队列）。请根据老师的排队，按小女孩编号从小到大的顺序，给出所有手拉手离开队列的小男孩和小女孩的编号对。</p>","aboutInput":"<p>用一个字符串代表小朋友队列。字符串中只会出现两个字符，分别代表小男孩和小女孩，首先出现的字符代表小男孩，另一个字符代表小女孩。小孩总数不超过100\r<br>\r<br>注意：只会出现两个字符不代表只会出现括号()</p>","aboutOutput":"<p>按小女孩编号顺序，顺序输出手拉手离开队列的小男孩和小女孩的编号对，每行一对编号，编号之间用一个空格分隔。</p>"}]},{"title":"第三阶段编程练习（3）","id":"9e4aeaa0bcf440a2a162f62b75234959","problems":[{"title":"排队看病","id":"dd92f674a038482e92093f68a127edc6","description":"<p>时过境迁，对于非急诊科室的医生，特别是特需门诊坐诊的医生来说，当天挂号来看病的病人已经很少了，大多数病人都是提前多时进行了预约挂号。在这种情况下，先挂先看的办法有时不一定是最好的。假设有n个已经挂号的病人，并且根据历史病例和大数据估算医生为每位病人的诊断时间为Ti，请找出这n个人的一种顺序，使得n个病人的等待时间最小。</p>","aboutInput":"<p>输入为2行\r<br>第一行为n，为等待看病的人数(n<=1000)\r<br>第二行分别表示第一位病人到第n位病人的诊断时间T1，T2，…，Tn，每个数据间有一个空格</p>","aboutOutput":"<p>输出为2行\r<br>第一行为一种排队顺序，即1到n的一种排列\r<br>第二行为这种方案下的平均等待时间（精确到小数点后两位）</p>"},{"title":"传球游戏","id":"abcb7ddb2dae42968709831d40d11c4c","description":"<p>N个人围成一圈玩传球游戏。开始时，第一个人拿着球。每个人把球传给左手的第K个人，其中，1 <= K <= N/2。计算最大的K，使得第一个人重新拿到球之前，每个人都拿过球。</p>","aboutInput":"<p>正整数N，假定N的值大于2</p>","aboutOutput":"<p>K的最大值</p>"},{"title":"简单的缩略语判断","id":"d1e34c7e7add4e96a96cb0cf88485958","description":"<p>各种语言都充满了缩略语。如汉语上的“非典（非典型性肺炎）”，“北大（北京大学）”，英语上的“SARS(Severe Atypical Respiratory Syndrome)”。假定某个字符串A中的每个字符出现在另一个字符串S中不同的位置（大小写完全相同），且字符串 A 中字符的前后关系在 S 中不发生改变，同时，A的长度小于S的长度，就认为 A 是 S 的一个可能缩略语。现在任意给定两对串，请判断前面的串是否是后面串的可能缩略语。若是，则输出 YES，否则，输出 NO</p>","aboutInput":"<p>第1行为串对数目n；\r<br>后面 n 行中，每行是一对字符串，其间以冒号间隔（判断左边的串是否是右边串可能的缩略语），假定左边串的长度不大于30个字符，右边串的长度不大于300个字符。</p>","aboutOutput":"<p>若有n对，则有 n 行输出，每行对应判断的结果。若是可能的缩略语，输出YES；若否，输出 NO</p>"},{"title":"相关月","id":"b574ce9c0b3745f8820aa8f20bbafda6","description":"<p>“相关月”是指那些在一年中月份的第一天星期数相同的月份。例如，九月和十二月是相关的，因为九月一日和十二月一日的星期数总是相同的。两个月份相关，当且仅当两个月份第一天相差的天数能被7整除，也就是说，这两天相差为几个整星期。又如，二月和三月一般都是相关月，因为二月有28天，能被7整除，也恰好为4个星期。而在闰年，一月和二月的相关月与它们在平年的相关月是不同的，因为二月有29天，其后每个月份的第一天星期数都推后了一天。</p>","aboutInput":"<p>输入的第一行为整数n（n&le;200），\r<br>其后n行，每行三个整数，依次为一个年份和两个月份，整数之间用一个空格分隔。</p>","aboutOutput":"<p>输出有n行，对应于每个输入的年份和相应两个月份，\r<br>如果这两个月份是相关的，则输出YES；\r<br>否则，输出NO。</p>"},{"title":"查看菌落数目","id":"5e9b8dc4f14b4214a98c619e4d86ab2a","description":"<p>菌落的数量对医生来说一直是一个很重要的数据，但是细菌数量太多人工又无法计数，因此你能写个程序帮助医生完成这个任务么？\r<br>有一张n*m的菌落的显微镜照片，每个格子是0(表示当前位置无细菌)或者1(表示当前位置是细菌)，请你输出这张照片中菌落的数量。\r<br>如果一个细菌，其上下左右四个方向有细菌的话，则这些相邻的细菌属于一个菌落。\r<br>例如给定如下照片：\r<br>0 0 1 0\r<br>0 1 0 1\r<br>1 1 0 0\r<br>则给出的照片一共有A,B,C三个菌落，如下：\r<br>0 0 A 0\r<br>0 B 0 C\r<br>B B 0 0\r<br>\r<br></p>","aboutInput":"<p>输入数据第一行两个整数n,m（1<=n,m<=100）,表示照片的长和宽。\r<br>接下来n行，每行都有m个用空格隔开的整数（0或者1），表示这一照片行的状态（有无细菌）。</p>","aboutOutput":"<p>输出一个整数，表示该张照片中菌落数量</p>"}]},{"title":"第三阶段编程练习（2）","id":"95a6dab97323439dae963c3964ab291f","problems":[{"title":"输出二进制补码","id":"42bd3c642fc64d0ba5e9c18e0fef5e29","description":"<p>输入若干int型整数，输出每个整数的二进制补码。</p>","aboutInput":"<p>输入有若干行，除最后一行外，每行包含一个int型整数。最后一行仅包含一个不定的字母，标志着输入结束。我们保证输入的整数不超出int型变量的表示范围</p>","aboutOutput":"<p>对于每个输入的整数，输出一行，即该整数的补码表示。</p>"},{"title":"最小公倍数","id":"f081a25ea51a472589207dfb815567c5","description":"<p>输入两个数，输出其最小公倍数。</p>","aboutInput":"<p>输入两个数（100以内），用逗号隔开。</p>","aboutOutput":"<p>输出它们的最小公倍数。</p>"},{"title":"确定进制","id":"e815adeeb8e44d169ab423252bf85de8","description":"<p>6*9 = 42 对于十进制来说是错误的，但是对于13进制来说是正确的。因为, 6(13) * 9(13) = 42(13)， 而 42(13) = 4 * 13 + 2 = 54(10)\r<br>你的任务是写一段程序读入三个整数p, q和 r，然后确定一个进制 B (2<=B<=16) 使得 p * q = r. 如果 B有很多选择, 输出最小的一个。例如：  p = 11, q = 11, r = 121. 则有 11(3) * 11(3) = 121(3) 因为 11(3) = 1 * 3 + 1 = 4(10) 和 121(3) = 1 * 3^2 + 2 * 3 + 1 = 16(10)。 对于进制 10,有 11(10) * 11(10) = 121(10)。这种情况下，应该输出 3。如果没有合适的进制，则输出 0。\r<br></p>","aboutInput":"<p>输入有 T组测试样例。 T在第一行给出。每一组测试样例占一行，包含三个整数p, q, r。 p, q, r 的所有位都是数字，并且1<=p,q, r<=1,000,000</p>","aboutOutput":"<p>对于每个测试样例输出一行。该行包含一个整数，即使得p * q = r成立的最小的B。如果没有合适的B，则输出 0。</p>"},{"title":"478-3279","id":"5497b7a5b7ff46f7af54526e8a9e4e79","description":"<p>在美国，商家都喜欢用好记的电话号码。人们常用的方法就是把电话号码拼成一个便于记忆的词汇或者短语，比如你可以通过Gino比萨店的电话号码301-GINO来定比萨。另一个方法就是把电话号码分为成组的数字，比如你可以通过必胜客的电话“三个十”：3-10-10-10来定比萨。\r<br>一个七位电话号码的标准形式是xxx-xxxx，如 123-4567。\r<br>通常，电话上的数字与字母的映射关系如下\r<br>A, B, C 映射到 2\r<br>D, E, F 映射到 3\r<br>G, H, I 映射到 4\r<br>J, K, L映射到5\r<br>M, N, O映射到6\r<br>P, R, S映射到7\r<br>T, U, V映射到8\r<br>W, X, Y映射到9\r<br>Q和Z并没有相关的映射。\r<br>你的任务就是把一个七位电话号码转为标准的xxx-xxxx格式，其中x表示数字\r<br></p>","aboutInput":"<p>第一行为输入的电话号码个数n(n<100), 下面n行每行表示一个七位号码，这些号数为了便于记忆可能不是标准格式，但一定是合法的。</p>","aboutOutput":"<p>对于行输入，输出一个标准格式的电话号码</p>"},{"title":"习题(10-7) 玛雅历 (1075)","id":"a09ea2c96b6249a9b3597101dfd0842a","description":"<p>上周末，M.A教授对古老的玛雅有了一个重大发现。从一个古老的节绳（玛雅人用于记事的工具）中，教授发现玛雅人使用了一个一年有365天的叫做Haab的日历。这个Haab日历拥有19个月。在开始的18个月，一个月有20天。这18个月的名字分别是pop, no, zip, zotz, tzec, xul, yoxkin, mol, chen, yax, zac, ceh, mac, kankin, muan, pax, koyab, cumhu. 这些月份中的日期用0到19表示。Haab历的最后一个月叫做uayet，它只有5天，用0到4表示。玛雅人认为这个日期最少的月份是不吉利的，在这个月法庭不开庭，人们不从事交易，甚至没有人打扫屋中的走廊。 \r<br>因为宗教的原因，还玛雅人使用了另一个日历，在这个日历中年被称为Tzolkin(holly年)，一年被分成13个不同的时期，每个时期20天长，每一天用一个数字和一个单词相组合的形式来表示。使用了20个单词：imix, ik, akbal, kan, chicchan, cimi, manik, lamat, muluk, ok, chuen, eb, ben, ix, mem, cib, caban, eznab, canac, ahau。和13个数字1到13。 \r<br>\r<br>注意：年中的每一天都有着明确的描述，比如，在一年的开始，日期如下描述： \r<br>1 imix, 2 ik, 3 akbal, 4 kan, 5 chicchan, 6 cimi, 7 manik, 8 lamat, 9 muluk, 10 ok, 11 chuen, 12 eb, 13 ben, 1 ix, 2 mem, 3 cib, 4 caban, 5 eznab, 6 canac, 7 ahau, and again in the next period 8 imix, 9 ik, 10 akbal . . . \r<br>\r<br>Haab历和Tzolkin历中的年都被数字0，1，：：：表示，数字0表示世界的开始。所以第一天被表示成： \r<br>\r<br>Haab: 0. pop 0 \r<br>\r<br>Tzolkin: 1 imix 0 \r<br>\r<br>请帮助M.A.教授，为他写一个程序可以把Haab历转化成Tzolkin历。</p>","aboutInput":"<p>Haab历中的数据由如下的方式表示： \r<br>日期. 月份 年数 \r<br>\r<br>第一行表示要转化的Haab历的数据量. 下面的每一行表示一个日期，年数小于5000。</p>","aboutOutput":"<p>Tzolkin历中的数据由如下的方式表示： \r<br>天数字 天名称 年数 \r<br>\r<br>第一行表示要转化的Haab历的数据量. 下面的每一行表示一个日期。</p>"}]},{"title":"第三阶段编程练习（1）","id":"a1e5bb7a87ea4ffe8716e66cd7989bb4","problems":[{"title":"井底之蛙","id":"78bc4edd141c4481b13d928df80ea48f","description":"<p>自从上次遇到海龟之后，小青蛙就对大海充满了向往，以至于蚊不香、蝇不爱，连那软绵绵的泥浆躺起来也硌得慌，思量再三小青蛙决定要出去看一看。由于井太深，小青蛙不能直接跳出去，只能白天往上跳一点，加上可恶的井壁那么湿滑，晚上还要下落一些，小青蛙这就犯了难，到底啥时候才能出去了，你能帮帮它么？</p>","aboutInput":"<p>输入为一行，是以空格分隔的三个整数，分别代表井深、白天跳的高度、晚上下滑的高度。</p>","aboutOutput":"<p>输出一个整数，为青蛙跳出去需要的天数</p>"},{"title":"细菌的战争","id":"f11066904af549cb901319ac4d598c49","description":"<p>有两种细菌，一种是有害菌，繁殖能力很强，每小时会繁殖一倍；另一种是有益菌，繁殖能力较弱，每小时能繁殖百分之五（向下取整，也就是说，假设有益菌在某个小时的数量为整数m，下一个小时的数量则为(int)floor(1.05 * m);）。但在单位体积内，当有害菌数量超过一百万时，多出的细菌会因为密度太大而迅速死亡，直到细菌数量下降到一百万。已知每个有益菌每小时能消灭一个有害菌。给定单位体积内有害菌和有益菌的初始数量，请问多少小时后，有害菌将被有益菌消灭干净？</p>","aboutInput":"<p>输入的第一行为一个整数n，表示后边有n组数据。\r<br>每组数据占一行，有两个整数，依次为有害菌和有益菌单位体积中的初始数量。整数之间用一个空格分隔。</p>","aboutOutput":"<p>输出有n行，每行一个整数，为每组数据对应的有害菌将被有益菌消灭干净所用的小时数。</p>"},{"title":"营养与健康","id":"37be695827bb41a3a229e7ce9a993190","description":"<p>随着人们生活水平的日益提高，健康越来越受到大家的关注。营养搭配，合理膳食，开始成为人们日常饮食追求的目标。营养学家希望能在计算机上开发一套饮食指导系统，来帮助人们检查每日饮食搭配是否合理，并提出指导意见。\r<br>假设我们只考虑一种营养成分：钙。已知人体每天需摄入600-1000毫克钙。钙的主要来源有：豆腐，110毫克/100克；牛奶，120毫克/100克；海带，2250毫克/100克；虾米，880毫克/100克。当用户输入四种食物每天的摄入量后，系统就会判断钙的摄入量是否合理。\r<br></p>","aboutInput":"<p>一行，4个整数，分别表示用户每日摄入的豆腐、牛奶、海带、虾米的量，单位克</p>","aboutOutput":"<p>一行，饮食指导系统的反馈结果\r<br>如果摄入过量，输出\"OVER\"；如果摄入不足，输出\"UNDER\"；如果适量，输出\"FINE\"\r<br></p>"},{"title":"求交集","id":"8e817f1fc70849f78a2cbc68d2b57d3b","description":"<p>给定两个整数集合，输出交集，输出时，按元素从小到大的顺序输出，以逗号间隔。\r<br>\r<br>注意：给定的集合中可能有重复元素，但输出的交集中不能有重复元素。如果没有交集，则输出 NULL\r<br>\r<br>例：\r<br>集合A：1,3,5,6,10,6,8,11\r<br>集合B: 2,4,8,6,10,6,12,13\r<br>\r<br>那么，输出为：\r<br>6,8,10</p>","aboutInput":"<p>2行，每行表示一个集合的元素序列，元素之间以逗号间隔，假定每个集合不超出200个元素。</p>","aboutOutput":"<p>两个集合的交集，按元素从小到大输出，以逗号间隔。如果没有交集，则输出 NULL</p>"},{"title":"流感传染","id":"ed547c2b38d6404baec80b766e5cdf02","description":"<p>有一批易感人群住在网格状的宿舍区内，宿舍区为n*n的矩阵，每个格点为一个房间，房间里可能住人，也可能空着。在第一天，有些房间里的人得了流感，以后每天，得流感的人会使其邻居传染上流感，（已经得病的不变），空房间不会传染。请输出第m天得流感的人数。</p>","aboutInput":"<p>第一行一个数字n，n不超过100，表示有n*n的宿舍房间。\r<br>接下来的n行，每行n个字符，’.’表示第一天该房间住着健康的人，’#’表示该房间空着，’@’表示第一天该房间住着得流感的人。\r<br>接下来的一行是一个整数m，m不超过100.</p>","aboutOutput":"<p>输出第m天，得流感的人数</p>"}]},{"title":"第二阶段编程练习（6）","id":"890434181d774b2cad3e5bc9cfd661c0","problems":[{"title":"密切数判断","id":"7724936939ca458181beb1cf19964c82","description":"<p>任意给定两个正整数，如果这两个数的质因数均相同，那么这两个数称为密切数。例如 6 和 12，其质因数均是 2 和 3；因此，6 和 12 是一对密切数。请判断任意给定的两个正整数是否为一对密切数。若是，输出YES，若不是，输出NO 。\r<br></p>","aboutInput":"<p>输入两个正整数，用逗号间隔</p>","aboutOutput":"<p>若是密切数，输出YES；\r<br>若不是，输出NO；\r<br></p>"},{"title":"挂号医师","id":"8ed8d3c5081f4eec86b6d38c478406d8","description":"<p>某医院有N位医生（编号依次为1，2，…，N）负责接诊。挂号医师把新来的病人安排到排队人数最少的医生处就诊，如果两位医生的排队人数相同，则优先安排到编号小的医生处就诊。现给出N位医生的初始排队人数，请输出下一位到来的病人所就诊医生的编号。</p>","aboutInput":"<p>共N+1行输入。 \r<br>第1行包含一个整数：N，医生数量，0 < N <＝ 100。 \r<br>第2, 3, ..., N+1行，每行包含一个非负整数，依次对应于编号为1,2, ..., N的医生的当前排队人数。 </p>","aboutOutput":"<p>输出1行，是下一位病人所就诊的医生编号。</p>"},{"title":"活动选择","id":"cdca701e9a92459a89238351134841c4","description":"<p>北京大学有多个社团申请在圣诞节当天在图书馆南配楼举办 n 个活动，已知每个活动的开始时间和结束时间，请问如何安排，才能让可举办的活动最多？ \r<br>（注：如果两个活动的开始结束时间分别为（3,4）(4,5)，这两个活动是相容的）</p>","aboutInput":"<p>第一行数据为整数n (n < 100,000)，表示申请举办活动的个数； \r<br>其余n行每行两个整数，分别是活动的开始时间和结束时间（数值 < 1,000,000）。\r<br></p>","aboutOutput":"<p>输出一个整数，为所能举办的活动的最大个数</p>"},{"title":"人工智能","id":"b325635ad338475389e29b4651e4bbbc","description":"<p>人工智能一直是计算机学所追求的一个很高的境界，全世界的计算机学家们至今仍在不断努力力求达到这个境界。\r<br>这道题也跟“人工智能”有关。\r<br>学过初中物理的同学都应该知道物理学中的这个公式P（功率）= U（电压）* I（电流）。如果给定其中的任意两个值，第三个值都是很容易求的，这个就是本题的任务。</p>","aboutInput":"<p>既然是人工智能，不要妄想题目会直接告诉你其中的某两个值。\r<br>输入的第一行是一个整数，表示有多少组测试数据。以下每一行是一组测试数据，分别为一句英文句子。你需要从中识别已知和未知，并且求出未知量。需要说明的是，句子中I，U，P三个物理量中已知的两个一定会以I=xA, U=xV，P=xW这样的样式给出（注意单位以及大小写）。在这样的表达式中，可能会在单位（A，V，W）的前面出现表示数量级的字母m、k、M，分别表示毫，千，兆。</p>","aboutOutput":"<p>对于每一组数据，按以下格式输出三行：\r<br>首先输出\"Problem #k\"，k表示当前是第k组测试数据。\r<br>然后在下一行输出结果，结果要求单位必须为A，V或者W，并且保留两位小数。\r<br>最后再输出一个空行。\r<br>具体可以参见样例输出。</p>"},{"title":"单词排序","id":"32badeb972b646f9913b3dd96c305fc9","description":"<p>输入一行单词序列，相邻单词之间由1个或多个空格间隔，请按照字母顺序输出这些单词（即按照字符串中字母的ASCII码排序，区分大小写，当首字母相同时，比较第2个字母，依次类推），要求重复的单词只输出一次。</p>","aboutInput":"<p>一行单词序列，最少1个单词，最多100个单词，每个单词长度不超过50，单词之间用至少1个空格间隔。</p>","aboutOutput":"<p>按字母顺序输出这些单词，重复的单词只输出一次。</p>"}]},{"title":"第二阶段编程练习（5）","id":"d6c1a9fac148489eb7f0bbbfaa7583bf","problems":[{"title":"计算鞍点","id":"5fef17c882414a38bcd780094aa4db5b","description":"<p>输入一个二维 (5*5)数组，每行只有一个最大值，每列只有一个最小值。\r<br>如果存在鞍点，则输出鞍点所在的位置（行和列），不存在鞍点时，要输出“not found”。\r<br>鞍点指的是数组中的一个元素，它是所在行的最大值，并且是所在列的最小值。\r<br>例如：在下面的例子中（第4行第1列的元素就是鞍点，值为8 ）。\r<br>11 3 5 6 9\r<br>12 4 7 8 10\r<br>10 5 6 9 11\r<br>8 6 4 7 2\r<br>15 10 11 20 25\r<br></p>","aboutInput":"<p>输入包含一个5行5列的矩阵</p>","aboutOutput":"<p>如果存在鞍点，输出鞍点所在的行、列及其值，如果不存在，输出\"not found\"</p>"},{"title":"习题(15-5) 五户共井问题","id":"bb0a6f6b779d44a1b040e83e9a6191dc","description":"<p>有A, B, C, D, E五户人共用一口井，已知井深不超过k米。A, B, C, D, E的绳长互不相同，而且绳长换算成厘米一定是整数。\r<br>从井口放下绳索正好达到水面时：\r<br>(a)需要A家的绳n1条接上B家的绳1条，或者，\r<br>(b)需要B家的绳n2条接上C家的绳1条，或者，\r<br>(c)需要C家的绳n3条接上D家的绳1条，或者，\r<br>(d)需要D家的绳n4条接上E家的绳1条，或者，\r<br>(e)需要E家的绳n5条接上A家的绳1条\r<br>问井深和各家绳长。\r<br></p>","aboutInput":"<p>输入只有1行。包括空格分开的6个整数。\r<br>第一个整数k（1 <= k <= 20)，代表井的最大深度（单位：米）。\r<br>接下来是5个正整数n1, n2, n3, n4, n5。这五个整数的含义见上面的题目描述。</p>","aboutOutput":"<p>输出只有1行。\r<br>如果找到了可行解，就输出6个整数，用空格分开，分别代表井的深度和A, B, C, D, E的绳长（单位都是厘米）。\r<br>如果有多组可行解，输出井的深度最小的那组解。\r<br>如果不存在可行解，就输出一行：\r<br>not found</p>"},{"title":"比饭量","id":"20e9b6bf9ac34be9a8c911136e9c8bbb","description":"<p>3个人比饭量，每人说了两句话：\r<br>A说：B比我吃的多，C和我吃的一样多\r<br>B说：A比我吃的多，A也比C吃的多\r<br>C说：我比B吃得多，B比A吃的多。\r<br>事实上，饭量和正确断言的个数是反序的关系。\r<br>请编程按饭量的大小输出3个人的顺序（可按升序输出）。\r<br>备注：三人的饭量和正确断言数都各不相同</p>","aboutInput":"<p>无输入</p>","aboutOutput":"<p>按照饭量大小输出3人顺序，比如：\r<br>ABC</p>"},{"title":"判断闰年","id":"8e2acb11264d40f18fb3acaec733f720","description":"<p>判断某年是否是闰年。</p>","aboutInput":"<p>输入只有一行，包含一个整数a(0 < a < 3000)</p>","aboutOutput":"<p>一行，如果公元a年是闰年输出Y，否则输出N</p>"},{"title":"将两个排序后的数组合并","id":"0bf2c53607454475bb48a2155f0ec84f","description":"<p>假设你给出两个已经经过排序的数组A[10]与B[10]，\r<br>那么利用归并排序的思想，将两个数组合并并且再排序为一个新的数组C[20]\r<br>并且把C输出的屏幕上。</p>","aboutInput":"<p>两行 每行十个元素</p>","aboutOutput":"<p>一行 总共20个元素</p>"}]},{"title":"2021年期中考试题（选做，不记成绩）","id":"ae2a33c44c864a368320c55bebafe53b","problems":[{"title":"数字消失","id":"3924a620c2d54b74b442fd74e817ef38","description":"<p>有一个包含n个整数的序列，序列中每个数都在[1, n]内，[1,n]中的数有些在这个序列中出现了1次或多次，而有些数没出现过。请输出[1, n]的整数中所有没出现过的整数。其中2 <= n <= 100.</p>","aboutInput":"<p>输入包括两行：\r<br>第1行一个整数n\r<br>第2行共n个整数，表示序列中的n个数，相互之间用空格隔开\r<br></p>","aboutOutput":"<p>输出若干行，按从小到大的顺序，每行输出一个没出现的整数。</p>"},{"title":"病人分类","id":"881767092c2b46a89b4daafae5e3ed2e","description":"<p>就医时对不同症状的病人分类是非常重要的，这样可以为病人找最专业的医生来就诊。目前一共有n个病人，编号是1~n，最开始每个病人的症状未被分类。每个病人属于一个单独的集合。\r<br>现在要进行m个操作，操作共有两种：\r<br>\r<br>“M a b”，由于症状相同，将编号为a和b的两个病人所在集合合并，如果两个病人已经在同一个集合中，则忽略这个操作；\r<br>\r<br>“Q a b”，询问编号为a和b的两个病人是否在同一个集合中；</p>","aboutInput":"<p>第一行输入整数n和m，1≤n,m≤100\r<br>\r<br>接下来m行，每行包含一个操作指令，指令为“M a b”或“Q a b”中的一种。\r<br></p>","aboutOutput":"<p>对于每个询问指令”Q a b”，都要输出一个结果，如果a和b在同一集合内，则输出“Yes”，否则输出“No”。每个结果占一行。</p>"},{"title":"习题(11-7) 最匹配的矩阵","id":"913dd44108224516a928c2e99033ecdb","description":"<p>给定一个矩阵A[m,n](100 &ge; m &ge; 1,100 &ge; n &ge; 1) 和另一个矩阵B[r,s],有0 &lt; r &le; m, 0 &lt; s &le; n，A、B所有元素值都是小于100的正整数。求A中和B最匹配的矩阵C[r,s]，所谓最匹配是指B和C的对应元素差值的绝对值之和最小，如果有多个最佳匹配只需输出第一个（行号最小，行号相同时，列号最小）。</p>","aboutInput":"<p>第一行是m和n，以空格隔开\r<br>以下m行每行有n个整数，表示A矩阵中的各行\r<br>第m+2行为r和s，以空格隔开\r<br>以下r行每行有s个整数，表示B矩阵中的各行</p>","aboutOutput":"<p>求出A中和B最匹配的矩阵C并输出之\r<br>注意：每一个数字后面都有空格，包括一行中的最后一个数字\r<br></p>"},{"title":"节约网费","id":"fe6d76df8b8d4fa185b3428cb6b35f66","description":"<p>有一款游戏，它按照玩家的游戏时长分 n+1 段收费递增： \r<br>1. 玩家游戏的前 a[1] 个小时，收费为每小时 b[1] 元。\r<br>2. 从第 a[1]+1 个小时开始到第 a[2] 个小时，收费为每小时 b[2] 元 。 \r<br>...\r<br>3. 从第 a[n-1]+1 个小时开始到第 a[n] 个小时，收费为每小时 b[n] 元。\r<br>4. 从第 a[n]+1 个小时开始，收费为每小时 b[n+1] 元。 \r<br>其中，1 <= a[1] < a[2] < ... < a[n] <= 1000000, 1 <= b[1] < b[2] < ... < b[n+1] <= 1000。\r<br>\r<br>小明打算玩 h 小时个游戏，但是他觉得游戏时长太多的时候，收费太贵，因此他打算开 k 个账号从而减少费用。\r<br>\r<br>具体来说，小明打算选择 k 个非负整数 c[1] ... c[k] 满足 c[1] + c[2] + ... + c[k] = h，并在第 i 个账号上玩 c[i] 个小时。\r<br>\r<br>小明希望你能帮他决定一下 c[1] ... c[k]，使得他花的钱最少。 </p>","aboutInput":"<p>第一行输入两个整数 n,k,h (1<=n,k<=1000,1<=h<=1000000)。\r<br>\r<br>第二行输入 n 个整数，表示 a[i]。第三行输入 n+1 个整数，表示 b[i]。</p>","aboutOutput":"<p>输出一行一个整数，表示最少的花费。 </p>"},{"title":"爱读书的Tim（已选-中）","id":"f79e8859194a40fa884c8cfc031aede3","description":"<p>Tim穿越到荒岛时，灯神还给了他一本天书，这本书的某些页十分晦涩难懂，需要阅读完另一页的内容才能完全理解。而有些页则比较通俗易懂，阅读完当前页即可理解。\r<br>\r<br>Tim是一个喜欢钻研的小朋友，他每天都会从这本书中页数最小的从未读过的一页开始读，读到完全理解这一页的内容为止。例如对于当Tim某一天要读这本书的第a页时，这一页要求读完第b页才能理解，于是Tim又要去读第b页，而第b页要求读完第c页才能理解，于是Tim又要去读第c页，而第c页不需要读别的页就可以理解，或是需要读的页在之前已经读过了，最终Tim这一天读了a, b, c这三页内容。\r<br>\r<br>Tim想知道自己需要花多少天才能读完这本书？</p>","aboutInput":"<p>第一行一个整数n,表示这本书有n页\r<br>第二行有n个正整数a1,a2,……,an，其中ai表示要读完第i页的内容要先读完第ai页的内容。（ai>=i）</p>","aboutOutput":"<p>一个正整数，表示读完这本书需要的时间</p>"},{"title":"邮局选址","id":"961f75a111524f3ca5276f92b743a371","description":"<p>在一个偏远的地区修建一个邮局，希望选择一个邮局地址，使得邮局到所有的这个地区所有村落的距离之和最小。 在这个问题中，我们假设所有村子位于一条直线上，每一个村子对应一个小于 100000 的整数x，代表村子在这个直线上的位置，邮局可以选择在直线上的任意一点，可以在一个村落中，也可以不位于村落中。</p>","aboutInput":"<p>输入由多组测试数据构成。\r<br>第一行为一个整数T，代表了测试数据的组数。\r<br>每组测试数据中 第一行是一个正整数n，输入数据中保证n大于等于2\r<br>第二行为n个数字，代表村落的坐标值。输入数据中保证村落的输入顺序按坐标从小到大排列。</p>","aboutOutput":"<p>对于每组测试数据，每个测试数据输出一行，为一个整数，输出邮局到所有村落的距离之和。</p>"},{"title":"魔王军队","id":"58a56eaa6f814319b0bd5a7cc153d2ce","description":"<p>魔王需要带领他的军队从A城堡进攻B城堡。为了追踪他的兵力，他分发了很多观察之石。每颗观察之石的最大有效观察半径R个单位，并且必须被一个士兵携带（观察之石不能处于没有士兵的空中）。帮助魔王计算出为了追踪所有部队所需要的观察之石的最小数量。</p>","aboutInput":"<p>输入包含多个实例。每个测试实例第一行为两个整数：R，n。R（0<=R<=1000）是观察之石的有效半径，n（1<=n<=1000）为魔王军队的士兵数量。接下来的1行包含n个整数，分别是每个士兵的位置x_1,x_2,…,x_n（0<=x_i<=50000）。如果某个实例输入的R和n 均为-1，则结束。</p>","aboutOutput":"<p>针对每个测试实例，输出一行整数表示所需的最小数量。</p>"},{"title":"日期串","id":"f96219478855493bb90bb5b05cbfa758","description":"<p>今天是 2021 年 1 月 3 日，定义日期字符串 s 为把从今天开始到 9999 年 12 月 31 日的日期依次写下得到的字符串：\r<br>\r<br>s = 202101032021010420210105...99991231\r<br>\r<br>现在，给出 n 个数字 a[1] ... a[n]，你需要对于每一个数字求出它第一次在 s 中出现的位置（s 的下标从 1 开始）。\r<br></p>","aboutInput":"<p>第一行输入一个整数 n，表示数字的个数 (1 <= n <= 100)。\r<br>\r<br>接下来每行输入一个整数，表示 a[i] (0 <= a[i] <= 100)。</p>","aboutOutput":"<p>输出 n 行，每行一个整数，表示答案。如果 a[i] 在 s 中没有出现，则输出 -1. </p>"},{"title":"操作数列","id":"c2fbaafc367d48f781fed7b87c33746a","description":"<p>给定一个初始数字集合，对其做如下两种操作： \r<br>\r<br>1. 添加一个新的数字 \r<br>2. 将集合中当前最小的数字取出（输出并删除），如果最小的数字有多个，只取出其中一个。 \r<br></p>","aboutInput":"<p>输入文件第一行为整数n，接下来n个整数，表示初始的数字集合。 \r<br>随后是一个整数m，表示操作的个数。接下来m行，每行表示一个操作，有两种输入格式： \r<br>\r<br>ADD x：表示往数字集合中添加一个x \r<br>EXTRACT-MIN：表示取出当前数字集合中最小的数 \r<br>\r<br>注意数字集合中的数随时都有重复。 \r<br>\r<br>n>=0 \r<br>m>=0 \r<br>n+m<=200000</p>","aboutOutput":"<p>对于每一个EXTRACT-MIN，输出最小的数值。如果当前EXTRACT-MIN操作时集合为空，则输出\"NULL\"</p>"}]},{"title":"2020年期中考试题（选做，不记成绩）","id":"83eb777d45ae49419b1ceefb2f91d15c","problems":[{"title":"甲流病人初筛","id":"eeb3ea42f61f4ddd98858758c34221d5","description":"<p>目前正是甲流盛行时期，为了更好地进行分流治疗，医院在挂号时要求对病人的体温和咳嗽情况进行检查，对于体温超过37.5度（含等于37.5度）并且咳嗽的病人初步判定为甲流病人（初筛）。现需要统计某天前来挂号就诊的病人中有多少人被初筛为甲流病人。</p>","aboutInput":"<p>第一行是某天前来挂号就诊的病人数n\r<br>其后有n行，每行是病人的信息，包括三个信息：姓名（字符串，不含空格，最多8个字符）、体温（float）、是否咳嗽（整数，1表示咳嗽，0表示不咳嗽）\r<br></p>","aboutOutput":"<p>行数不确定，但最后一行是一个整数m，表示被初筛为甲流的病人数，之前有m行，每行按输入顺序输出病人的姓名</p>"},{"title":"小于当前数的数","id":"3292e0e1ecec4a289287d567018b7b11","description":"<p>给你一个数组 nums，对于其中每个元素 nums[i]，请你统计数组中比它小的所有数字的数目。\r<br>\r<br>换而言之，对于每个 nums[i] 你必须计算出有效的 j 的数量，其中 j 满足 j != i 且 nums[j] < nums[i]。</p>","aboutInput":"<p>第一行是一个整数 n，表示数组大小。\r<br>接下来 n 行，每行表示数组中的一个数。\r<br>\r<br>0 <= n <= 1000, 每个数都在int可以表示的范围内.</p>","aboutOutput":"<p>n 行，每行代表数组中比它小的数的个数。\r<br>\r<br>如果没有要输出的数据，输出\"None\"。</p>"},{"title":"换酒问题","id":"0d2d948fdedd4815a82ffc36b77a1138","description":"<p>小区便利店正在促销，用 a 个空酒瓶可以兑换一瓶新酒。你购入了 b 瓶酒。\r<br>\r<br>如果喝掉了酒瓶中的酒，那么酒瓶就会变成空的。\r<br>\r<br>请你计算最多能喝到多少瓶酒。</p>","aboutInput":"<p>用空格分开的两个整数，分别为a和b。\r<br>\r<br>1 < a <= 1000000000,\r<br>0 <= b <= 1000000000.</p>","aboutOutput":"<p>能喝到多少瓶酒。</p>"},{"title":"小茗同学很方","id":"305643abae004a649bfd56955f99c70b","description":"<p>n(n不超过1000)个有蛀牙的小朋友被老师组织集体去拔牙，但是排队的时候由于所有小朋友都害怕拔牙，所以没人主动排在前面。这时老师想了一个有趣的方法，所有小朋友排成一列，按照顺序进行编号（编号从1开始），并从1依次进行报数，数到m的小朋友去拔牙，然后后面的小朋友再从1开始报数，下一个数到m的小朋友去拔牙…依此循环往复。小茗同学既不想先去拔牙，也不想被留到最后再拔，于是他决定第k(k<=n)个去拔。请你帮小茗同学想想他应该排在第几个位置才能“如愿以偿”。</p>","aboutInput":"<p>n,m,k</p>","aboutOutput":"<p>一个整数，小茗在队列中的位置(从1开始)</p>"},{"title":"重排空格","id":"af7d880117294e568696ee3ba04e0543","description":"<p>给你一个字符串 text，该字符串由若干被空格包围的单词组成。每个单词由一个或者多个小写英文字母组成，并且两个单词之间至少存在一个空格。\r<br>请你重新排列空格，使每对相邻单词之间的空格数目都  相等  ，并尽可能  最大化  该数目。如果不能重新平均分配所有空格，请  将多余的空格放置在字符串末尾  ，这也意味着输出的字符串应当与原字符串的长度相等。</p>","aboutInput":"<p>一行由小写英文字母和空格组成的字符串。\r<br>\r<br>字符串长度不超过1000，至少包含一个单词。</p>","aboutOutput":"<p>一行和原字符串长度相等的字符串。</p>"},{"title":"1052 花生问题","id":"e90207884099480bb850f80866c54e2a","description":"<p>鲁宾逊先生有一只宠物猴，名叫多多。这天，他们两个正沿着乡间小路散步，突然发现路边的告示牌上贴着一张小小的纸条：“欢迎免费品尝我种的花生！??熊字”。 \r<br>\r<br>鲁宾逊先生和多多都很开心，因为花生正是他们的最爱。在告示牌背后，路边真的有一块花生田，花生植株整齐地排列成矩形网格（如图1）。有经验的多多一眼就能看出，每棵花生植株下的花生有多少。例如在图2中的花生田里，只有位于(2, 5), (3, 7), (4, 2), (5, 4)的植株下长有花生，个数分别为13, 7, 15, 9。我们假定多多在每个单位时间内，可以做下列四件事情中的一件：(1)从路边跳到最靠近路边（即第一行）的某棵花生植株；(2)从一棵植株跳到前后左右与之相邻的另一棵植株；(3)采摘一棵植株下的花生；(4)从最靠近路边（即第一行）的某棵花生植株跳回路边。 \r<br>\r<br><img src=\"1928_1.jpg\">\r<br>\r<br>为了训练多多的算术，鲁宾逊先生说：“你先找出花生最多的植株，去采摘它的花生；然后再找出剩下的植株里花生最多的，去采摘它的花生；依此类推，不过你一定要在我限定的时间内回到路边。” 例如在图2中，沿着图示的路线，多多在21个单位时间内，最多可以采到37个花生。 \r<br>\r<br>现在给定一块花生田的大小和花生的分布，请问在限定时间内，多多最多可以采到多少个花生？注意可能只有部分植株下面长有花生，假设这些植株下的花生个数各不相同。</p>","aboutInput":"<p>输入第一行代表组数T。\r<br>之后每组第一行包括三个整数，M, N和K，用空格隔开；表示花生田的大小为M * N（1 <= M, N <= 20），多多采花生的限定时间为K（0 <= K <= 1000）个单位时间。接下来的M行，每行包括N个非负整数，也用空格隔开；第i + 1行的第j个整数Pij（0 <= Pij <= 500）表示花生田里植株(i, j)下花生的数目，0表示该植株下没有花生。</p>","aboutOutput":"<p>输出包括T组，每一行代表一组，只包含一个整数，即在限定时间内，多多最多可以采到花生的个数。</p>"},{"title":"过河问题","id":"f4a4e2f96e494992921fcbbb180561f5","description":"<p>n个人想要过一条河,河上只有一条小船,这条船只能容纳两个人,因此这n个人想要全部过河的话就必须来回很多次.每个人划船的速度有所不同,两个人一起的时候船的速度是划得较慢的人的速度.请你找出一种策略使得他们在尽可能短的时间内过河.</p>","aboutInput":"<p>第一行包括一个正整数t,表示有t组数据.\r<br>每组数据两行,第一行是人数n(n&lt;=1000),第二行是n个人各自过河所需的时间(不大于100).</p>","aboutOutput":"<p>输出最短时间</p>"},{"title":"1140 最短前缀","id":"c5e8bb080d2041ff8a7d34c5dbe02c2c","description":"<p>一个字符串的前缀是从该字符串的第一个字符起始的一个子串。例如 \"carbon\"的字串是: \"c\", \"ca\", \"car\", \"carb\", \"carbo\", 和 \"carbon\"。注意到这里我们不认为空串是子串, 但是每个非空串是它自身的子串. 我们现在希望能用前缀来缩略地表示单词。例如, \"carbohydrate\" 通常用\"carb\"来缩略表示. 现在给你一组单词, 要求你找到唯一标识每个单词的最短前缀 \r<br>在下面的例子中，\"carbohydrate\" 能被缩略成\"carboh\", 但是不能被缩略成\"carbo\" (或其余更短的前缀) 因为已经有一个单词用\"carbo\"开始 \r<br>一个精确匹配会覆盖一个前缀匹配，例如，前缀\"car\"精确匹配单词\"car\". 因此 \"car\" 是 \"car\"的缩略语是没有二义性的 , “car”不会被当成\"carriage\"或者任何在列表中以\"car\"开始的单词.</p>","aboutInput":"<p>输入包括至少2行，至多1000行. 每行包括一个以小写字母组成的单词，单词长度至少是1，至多是20.</p>","aboutOutput":"<p>输出的行数与输入的行数相同。每行输出由相应行输入的单词开始，后面跟着一个空格接下来是相应单词的没有二义性的最短前缀标识符。</p>"}]},{"title":"第二阶段编程练习（4）","id":"2a55e09b9b144517b0cfd7b86938d7c5","problems":[{"title":"跳水比赛","id":"2094106509124eb7ade59242fcc6d9ca","description":"<p>5位跳水高手将参加10米跳台决赛，有好事者让5人据实力预测比赛结果：\r<br>\r<br> A选手说：B第二；我第三。\r<br> B选手说：我第二；E第四。\r<br> C选手说：我第一；D第二。\r<br> D选手说：C最后；我第三。\r<br> E选手说：我第四；A第一。\r<br>\r<br>决赛成绩公布之后，每位选手的预测都只对了一半，即一对一错。\r<br>请编程解出比赛的实际名次。</p>","aboutInput":"<p>无。</p>","aboutOutput":"<p>输出5行。第1行输出A的名次，名次从高到低分别用1、2、3、4、5表示；第2、3、4、5行分别输出B、C、D、E的名次。</p>"},{"title":"根据日期求星期","id":"4c4f4babd4104d7f8e8b28a6575a411a","description":"<p>在不同的国家和地区，时间表示方法各不相同。例如同是2006年5月1日，可以表示为2006-May-01、May-01-2006、01-May-2006等等。现假定年使用形如 yyyy 的四个数字表示、月使用形如 Mmm 的英文月份简写表示，日使用形如 dd 的两个数字表示，他们之间使用符号 - 或 / 分隔。但他们的在日期中出现的前后顺序不定，请写一个程序，对任意满足本题约束的日期字符串，求该日期是星期几。</p>","aboutInput":"<p>输入有多行，第一行是一个整数n，表示有多少个待处理的日期字符串。\r<br>接着是n行日期字符串，每行一个。\r<br>日期范围从1900年1月1日至2099年12月31日。</p>","aboutOutput":"<p>输出有n行，输出对应日期的星期的英文缩写。缩写前后不应有空白字符或其他字符。</p>"},{"title":"单词翻转","id":"fcbfdb4ff53b4d2e8786a18349b20914","description":"<p>输入一个句子（一行），将句子中的每一个单词翻转后输出</p>","aboutInput":"<p>只有一行，为一个字符串，不超过500个字符。单词之间以空格隔开。</p>","aboutOutput":"<p>翻转每一个单词后的字符串</p>"},{"title":"进制计算","id":"dc12f3280a0743b09d54847edae05c0b","description":"<p>将两个其他进制的数求和，并以某进制的方式输出\r<br>（最大为16进制，超出9的数字分别用 a、b、c、d、e、f表示）</p>","aboutInput":"<p>输入共三行，第一行两个数，一个为进制数，一个为该进制的数值\r<br>第二行和第一行含义相同\r<br>第三行一个数，为以什么进制输出</p>","aboutOutput":"<p>输出为两个数的和，并以要求的进制打印</p>"},{"title":"统计单词","id":"da7f4a3eadf4448d98cca4006c43b640","description":"<p>计算机信息管理免不了要涉及到文本处理的问题，而在众多处理方式中对一句（段）话中单词数的统计是非常基本也是十分重要的一个环节。</p>","aboutInput":"<p>一句话，由英文字母，数字及常用标点符号组成。</p>","aboutOutput":"<p>统计句子中各单词出现的次数，并按单词在句子中第一次出现的顺序输出。\r<br>输出包括若干行，每一行是一个单词，空格再跟着该单词在句子中出现的次数。</p>"},{"title":"子串定位","id":"b672274bc30a4243af36f8968e8371b4","description":"<p>两个单词 s 和 w ，判断 s 出现在 w 中第一次出现的位置。</p>","aboutInput":"<p>输入只有一行，第一个词 s 和第二个单词 w ，单词之间以一个空格分隔。每个字符串的长度都小于50。并且输入保证s一定是w的一个子串。</p>","aboutOutput":"<p>输出也只有一行，s 在 w 中出现的位置。</p>"},{"title":"文字排版","id":"bbd13e2c8a704d1aa1305051e337735d","description":"<p>给一段英文短文，单词之间以空格分隔（每个单词应包括其前后紧邻的标点符号）。请将短文重新排版，要求如下：\r<br>每行不超过80个字符；每个单词居于同一行上；在同一行的单词之间以一个空格分隔；行首和行尾都没有空格。\r<br></p>","aboutInput":"<p>第一行是一个整数n，表示英文短文中单词的数目. 其后是n个以空格分隔的英文单词（单词包括其前后紧邻的标点符号，且每个单词长度都不大于40个字母）。</p>","aboutOutput":"<p>排版后的多行文本，每行文本字符数最多80个字符，单词之间以一个空格分隔，每行文本首尾都没有空格。</p>"}]},{"title":"第二阶段编程练习（3）","id":"8bc49562ee364dbe970b0d8c79c466a1","problems":[{"title":"侃侃而谈的四位朋友","id":"0a5770339ee64757af4be666c34394b7","description":"<p>某宾馆来了四位外宾朋友，他们可能使用中、英、法、日4种语言。现已知：\r<br>A．甲、乙、丙各会两种语言，丁只会一种语言；\r<br>B．有一种语言4人中有3人都会；\r<br>C．甲会日语，丁不会日语，乙不会英语；\r<br>D．甲与丙、丙与丁不能直接交谈，乙与丙可以直接交谈；\r<br>E．没有人既会日语，又会法语。\r<br>请问：甲乙丙丁各会什么语言？</p>","aboutInput":"<p>无</p>","aboutOutput":"<p>按照甲乙丙丁的顺序，输出他们各自会的语言。每个人输出一行，如会多种语言则用空格分割。其中，中、英、法、日语分别用1、2、3、4表示。</p>"},{"title":"寻找平面上的极大点","id":"d589d199fab6472dbb618ac21307742a","description":"<p>在一个平面上，如果有两个点(x,y),(a,b),如果说(x,y)支配了(a,b)，这是指x>=a,y>=b;\r<br>用图形来看就是(a,b)坐落在以(x,y)为右上角的一个无限的区域内。\r<br>给定n个点的集合，一定存在若干个点，它们不会被集合中的任何一点所支配，这些点叫做极大值点。\r<br>编程找出所有的极大点，按照x坐标由小到大，输出极大点的坐标。\r<br>本题规定：n不超过100，并且不考虑点的坐标为负数的情况。\r<br></p>","aboutInput":"<p>输入包括两行，第一行是正整数n，表示是点数，第二行包含n个点的坐标，坐标值都是整数，坐标范围从0到100，输入数据中不存在坐标相同的点。</p>","aboutOutput":"<p>按x轴坐标最小到大的顺序输出所有极大点。\r<br>输出格式为:(x1,y1),(x2,y2),...(xk,yk)\r<br>注意：输出的每个点之间有\",\"分隔,最后一个点之后没有\",\",少输出和多输出都会被判错</p>"},{"title":"例题(5.9) 肿瘤面积 (1111)","id":"2cdb086626e143549b4b3fe8af035a2e","description":"<p>在一个正方形的灰度图片上，肿瘤是一块矩形的区域，肿瘤的边缘所在的像素点在图片中用0 表示。其它肿瘤内和肿瘤外的点都用255 表示。现在要求你编写一个程序，计算肿瘤内部的像素点的个数（不包括肿瘤边缘上的点）。已知肿瘤的边缘平行于图像的边缘。</p>","aboutInput":"<p>只有一个测试样例。第一行有一个整数n，表示正方形图像的边长。其后n 行每行有n 个整数，取值为0 或255。整数之间用一个空格隔开。已知n 不大于1000。</p>","aboutOutput":"<p>输出一行，该行包含一个整数，为要求的肿瘤内的像素点的个数。</p>"},{"title":"单词倒排","id":"b06fc1d576e048c88885b8ddecc49f09","description":"<p>编写程序，读入一段英文(英文中不包含标点)，将所有单词的顺序倒排并输出，其中单词以空格分隔。</p>","aboutInput":"<p>输入为一个字符串（字符串长度最大为100）</p>","aboutOutput":"<p>输出为按要求排续后的字符串</p>"},{"title":"判断字符串是否为回文","id":"fc2753028c0140cebcaa52bce25d17fd","description":"<p>编程，输入一个字符串，输出该字符串是否回文。</p>","aboutInput":"<p>输入为一行字符串（字符串中没有空白字符，字符串长度不超过100）。</p>","aboutOutput":"<p>如果字符串是回文，输出yes；否则，输出no。</p>"},{"title":"例题(13.8) 出书最多","id":"a6a15926ba4e4af08fc6d7cb73339aaf","description":"<p>假定图书馆新进了m（10 &le; m &le; 999）本图书，它们都是由n（2 &le; n &le; 26）个作者独立或相互合作编著的。假设m本图书编号为整数（1到999），作者的姓名为字母（'A'到'Z'），请根据图书作者列表找出参与编著图书最多的作者和他的图书列表。</p>","aboutInput":"<p>第一行为所进图书数量m，其余m行，每行是一本图书的信息，其中第一个整数为图书编号，接着一个空格之后是一个由大写英文字母组成的没有重复字符的字符串，每个字母代表一个作者。</p>","aboutOutput":"<p>输出有多行：\r<br>第一行为出书最多的作者字母；\r<br>第二行为作者出书的数量；\r<br>其余各行为作者参与编著的图书编号（按输入顺序输出）。</p>"},{"title":"提取数字串按数值排序","id":"fc28ba2ceee240c1a64e13d97c5364c4","description":"<p>输入一串不超过300个字符的符号序列，请将其中的所有数字串提出，并将每个数字串作为整数看待（假设可以用int 表示），按从小到大顺序输出结果，输出的整数之间以逗号间隔。如果没有数字，则输出0；例如：*1234.345#6781ad9jk81-11101?aght88ir09kp，其中的整数包括：1234，345，6781，9，81，11101，88，9，从小到大排序后，应该输出：\r<br>9，9，81，88，345，1234，6781，11101\r<br></p>","aboutInput":"<p>在一行内输入一串符号</p>","aboutOutput":"<p>从小到大排序的整数序列，如果没有数字，则输出0；</p>"}]},{"title":"第二阶段编程练习（2）","id":"a092216a60664e379fcbf2ad998e0b55","problems":[{"title":"计算数据的方差","id":"b4aa971722e14998962f8600a79d7446","description":"<p>读入一组大小为n(n<=10010)个样本数据（双精度浮点数），求他们的均值E和方差D。</p>","aboutInput":"<p>第一个整数为n，剩余n个双精度浮点数为样本数据。</p>","aboutOutput":"<p>输出为一行，均值E和方差D，两数之间用一个空格分隔，精确到小数点后5位。</p>"},{"title":"统计字母和数字个数","id":"a741f641f30342efac0bf176b87ccffe","description":"<p>药学院附属小学于2018年将编程正式加入校园课程，要求所有课程均要结合编程进行教学，于是，老师药驰盖给同学们布置了一道家庭作业，要求利用编程，统计出一串乱码中的大写字母个数，小写字母个数以及数字个数，但药老师自己不会编程，所以麻烦你帮忙写一份作为标准答案。</p>","aboutInput":"<p>一行长度为n的英文字母（0 < n <=256）</p>","aboutOutput":"<p>一行，大写字母个数，小写字母个数以及数字个数，均为整数，两数之间用一个空格隔开</p>"},{"title":"肿瘤检测","id":"60dce01b853445f7a4bb2f6e019c2df8","description":"<p>一张CT扫描的灰度图像可以用一个N*N（0< N< 100）的矩阵描述，矩阵上的每个点对应一个灰度值（整数），其取值范围是0-255。我们假设给定的图像中有且只有一个肿瘤。在图上监测肿瘤的方法如下：如果某个点对应的灰度值小于等于50，则这个点在肿瘤上，否则不在肿瘤上。我们把在肿瘤上的点的数目加起来，就得到了肿瘤在图上的面积。任何在肿瘤上的点，如果它是图像的边界或者它的上下左右四个相邻点中至少有一个是非肿瘤上的点，则该点称为肿瘤的边界点。肿瘤的边界点的个数称为肿瘤的周长。现在给定一个图像，要求计算其中的肿瘤的面积和周长。</p>","aboutInput":"<p>输入第一行包含一个正整数N (0< N< 100) 表示图像的大小；接下来N行，每行包含图像的一行。图像的一行用N个整数表示（所有整数大于等于0，小于等于255），两个整数之间用一个空格隔开。</p>","aboutOutput":"<p>输出只有一行，该行包含两个正整数，分别为给定图像中肿瘤的面积和周长，用一个空格分开。</p>"},{"title":"习题(10-2) 计算两个日期之间的天数","id":"597e292dd2db4166a70887e39eaff3c8","description":"<p>给定两个年月日，计算之间的天数.\r<br>比如2010-1-1和2010-1-3 之间差2天。\r<br>\r<br>year=1,2,...,3000.\r<br>\r<br>补充：\r<br>闰年是：(year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)，\r<br>闰年的2月份有29天。</p>","aboutInput":"<p>第一行\r<br>startYear startMonth startDay\r<br>第二行\r<br>endYear endMonth endDay</p>","aboutOutput":"<p>输出只有一行是两个日期之间的天数</p>"},{"title":"二维数组回形遍历","id":"b962d6ada3d14301870bb9cb5bdb716b","description":"<p>给定一个row行col列的整数数组array，要求从array[0][0]元素开始，按回形从外向内顺时针顺序遍历整个数组。如图所示：\r<br><img src=\"cir.gif\">\r<br></p>","aboutInput":"<p>输入的第一行上有两个整数，依次为row和col。\r<br>余下有row行，每行包含col个整数，构成一个二维整数数组。\r<br>（注：输入的row和col保证0&lt;row&lt;100, 0&lt;col&lt;100）</p>","aboutOutput":"<p>按遍历顺序输出每个整数。每个整数占一行。</p>"},{"title":"二进制加法","id":"51fe68c1fe0f4876bbed39efb16ebca3","description":"<p>给定两个二进制数 <i>a</i> 和 <i>b</i> ，计算 <i>a</i> + <i>b</i> 之和，输出和的二进制表示。</p>","aboutInput":"<p>输入有 2<i>n</i> + 1 行，第一行是 <i>n</i>，其余2<i>n</i>行，每两行一组，第一行是二进制数 <i>a</i>，第二行是二进制数 <i>b</i>；<i>a</i> 和 <i>b</i> 都大于 0 且不含前导 0 ，<i>a</i>、<i>b</i> 的位数不超过 100 位。</p>","aboutOutput":"<p>输出 <i>n</i> 行 <i>a</i> + <i>b</i> 的结果，用二进制表示。</p>"}]},{"title":"第二阶段编程练习（1）","id":"3fdabb7790b94d52840843906ec0b20a","problems":[{"title":"快速找零","id":"2614fb04c4774e0eb5e332e2e74b5a94","description":"<p>J.P.Flathead的杂货店在收银台上雇佣廉价的劳动力。他雇的人（常常是高中的孩子）常常找错钱给顾客。Flathead是个小气鬼，估计他找错的钱比他挣的还要多，也就是说，雇员往往找更多的钱给客户。\r<br>Flathead想要你编写一个程序来计算他应该找多少quarters（$0.25）、dimes($0.10)、nickel($0.05)和pennies($0.01)给顾客。如果要找的钱是5.00美元或者更少，Flathead尽量找给他们硬币。他也想找给顾客最少数量的硬币。比如，要找给顾客的钱是1.24美元，那么，顾客应当拿到4quarters、2dimes、0nickels和4pennies。\r<br></p>","aboutInput":"<p>输入数据的第一行是一个正整数N，表示下面数据集的个数。每个数据集是由一个整数组成，占一行，这个整数代表cents（美分），C（1 <= C <= 500）</p>","aboutOutput":"<p>对于每个数据集，打印出数据集的序号，一个空格和下面这串字符串：\r<br>Q QUARTER(S), D DIME(S),n NICKEL(S),P PENNY(S)\r<br>这里，Q是quarters数目，D是dimes数目，n是nickels数目，而P是pennies数目。\r<br></p>"},{"title":"求特殊自然数","id":"868f51d70e11424f92e45e27efc4e4be","description":"<p>一个十进制自然数,它的七进制与九进制表示都是三位数，且七进制与九进制的三位数码表示顺序正好相反。编程求此自然数,并输出显示.\r<br>\r<br>输入为1时，输出此自然数的十进制表达式；输入为2时，输出此自然数的七进制表达式；输入为3时，输出此自然数的九进制表达式。</p>","aboutInput":"<p>输入为1，2，3中的一个数。</p>","aboutOutput":"<p>输出一行。\r<br>输出为十进制或七进制或九进制数</p>"},{"title":"1049 跳绳游戏","id":"9eb9c2b1aa584902888131caaa72883d","description":"<p>小朋友玩跳绳比赛,要计算在一分钟内跳了多少下.假设每秒钟跳一下,如果中途失败了,则要花三秒钟后才能开始重跳.一般小朋友跳绳一分钟要跳坏好几次.现在给出小朋友每次跳坏时已经跳的总数,求小朋友在一分钟内跳了多少下.(请注意分析示例数据.)</p>","aboutInput":"<p>第一行为n个小朋友 \r<br>其余各行,每行第一个整数是跳坏的次数m,其余m个整数是跳坏时累计跳了多少下. 这m个整数是从小到大排列的</p>","aboutOutput":"<p>输出相应小朋友头一分钟内跳了多少下.</p>"},{"title":"最长平台 ","id":"3cdc691eb6af47db9435a3639e6b4afa","description":"<p>已知一个数组，这个数组的一个平台（Plateau）就是连续的一串值相同的元素，并且这一串元素不能再延伸。例如，在1，2，2，3，3，3，4，5，5，6中1，2-2，3-3-3，4，5-5，6都是平台。试编写一个程序，接收一个数组，把这个数组最长的平台的长度找出来。在上面的例子中3-3-3就是最长的平台，长度为3。 \r<br>\r<br>\r<br>\r<br></p>","aboutInput":"<p>输入数据有多组，每组两行。\r<br>第一行有一个整数n，为数组元素的个数，n<25。\r<br>接下来一行为n个整数。\r<br>最后会出现一个n=0，表示测试数据结尾。</p>","aboutOutput":"<p>输出每组中最长平台的长度，每个长度一行。</p>"},{"title":"招聘会人数","id":"a344c8ecd9ba44e786481aa9cba6c64e","description":"<p>某招聘机构举办招聘活动，事先不知道参会的确切人数。为了今后类似的招聘活动选择适当大小的场馆，招聘机构拟对每位参会人的进出场馆时间进行记录。设第i个人进入会场的时间和离开会场的时间分别是xi, yi，那么，这个人在招聘会场的时间段t满足 xi <= t < yi。为简便起见，进出时间点用整数表示，且满足 0 <= xi < yi<1000。请统计，在这一天的招聘活动中，参会的总人数有多少；高峰时，最多有多少人同时在场。</p>","aboutInput":"<p>数据包括2行，这2行的数据个数相同：\r<br>第1行表示第i个人的到达时间xi，数之间用逗号间隔； \r<br>后1行表示第i个人的对应的离开时间yi，数之间也用逗号间隔。 \r<br>例如：\r<br>2,5,4,6,7,3,1,6,2\r<br>5,6,7,7,8,4,3,9,4\r<br>\r<br>表示有9个人，进出场的时间分别是：\r<br>[2,5),[5,6),[4,7),[6,7),[7,8),[3,4),[1,3),[6,9),[2,4)</p>","aboutOutput":"<p>参加会议的总人数以及最多有多少人同时在场，两者之间以空格间隔。\r<br>上面例子中，参加会议的总人数为9人，最多的时候有3人同时在场。如，时间段：[2,5),[1,3),[2,4)</p>"},{"title":"开关电灯","id":"c8c4f0a85e294238b7f02f256219c9e8","description":"<p>N盏灯排成一排，从1到N依次编号。有N个人也同样编号。\r<br>第一个人将灯全部熄灭；\r<br>第2个人将对应2和2的倍数的灯打开；\r<br>第3个人将对应着3和3的倍数的灯做反向操作（如果原来是开，则关掉它，否则就打开它）；\r<br>以后的人和3做同样的操作，即第i个人将对应着i和i的倍数的灯做反向操作。</p>","aboutInput":"<p>灯的总数N, 1<=N<=1000 </p>","aboutOutput":"<p>在第N个人操作后，顺序输出还亮着灯的编号。\r<br>在每个编号后面输出一个空格即可</p>"},{"title":"习题(11-2) 校门外的树","id":"7e7dbd2092574eedb87589dce239c20d","description":"<p>某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。我们可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；数轴上的每个整数点，即0，1，2，……，L，都种有一棵树。 \r<br>    由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。 \r<br></p>","aboutInput":"<p>输入的第一行有两个整数L（1 <= L <= 10000）和 M（1 <= M <= 100），L代表马路的长度，M代表区域的数目，L和M之间用一个空格隔开。接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。</p>","aboutOutput":"<p>输出包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。</p>"}]},{"title":"第一阶段编程练习（4）","id":"75b3815427e8488196ebc02257c7520e","problems":[{"title":"牛顿迭代方法","id":"bea9b30e4f1b4c8aafd969f7132fb3e3","description":"<p>用牛顿迭代方法求一个数number的平方根，输出根以及迭代次数\r<br>注意：迭代终止条件为，上一次迭代求出的近似根，与本次迭代求出的更精确的近似根的差，小于等于1E-6。\r<br>初始 x = 1.0</p>","aboutInput":"<p>多行数字，每行可能是一个整数或一个小数</p>","aboutOutput":"<p>输出两个数字：迭代次数 和 近似根\r<br>\r<br>迭代次数为一个整数\r<br>根为一个浮点数，保留小数点后两位\r<br>\r<br>\r<br>可以用以下方法做到保留小数点后两位：\r<br>\r<br>引入iostream\r<br>引入iomanip\r<br>……\r<br>// i为迭代次数，root为近似根\r<br>cout << i << ' '\r<br><< setprecision(2)\r<br><< setiosflags(ios::fixed)\r<br><< root << endl; </p>"},{"title":"三个三位数的关系","id":"67c55dff0ea04e3389405727368f9344","description":"<p>将 1 到 9 这九个数字分成三个 3 位数，要求第一个 3 位数，正好是第二个 3 位数的一半，是第三个 3 位数的三分之一，问所有的分法。</p>","aboutInput":"<p>没有输入。</p>","aboutOutput":"<p>由小到大输出满足条件的三个数字，每个数字之间用一个空格分开。\r<br>不同的分法之间，用换行隔开。\r<br>\r<br>假如第一种分法是xxx xxx xxx\r<br>第二种分法是*** *** ***\r<br>第三种分法是### ### ###\r<br>……\r<br>\r<br>那么输出是\r<br>\r<br>xxx xxx xxx\r<br>*** *** ***\r<br>### ### ###\r<br>……</p>"},{"title":"判断四边形","id":"e6bc11704e6e4e6a86741c6874185706","description":"<p>给出平面上a,b,c,d四个点的坐标,依次连接a-b,b-c,c-d,d-a,请你写程序判断得到的图形是否是凸四边形.</p>","aboutInput":"<p>输入包含多组数据,每组数据一行,包含8个整数(绝对值都不大于1000),依次为a,b,c,d四个点的坐标.</p>","aboutOutput":"<p>对每组输入输出一行,若得到的图形是凸四边形,输出\"yes\",否则输出\"no\"</p>"},{"title":"找到不一样的数(中等)","id":"1eed279091314febb7bcf74cbd1a8de0","description":"<p>有n个数，在这n个数中，只有一个数字出现了奇数次，其余都出现了偶数次，你能找到出现奇数次的数字么？</p>","aboutInput":"<p>输入有两行，第一行一个数n(1<=n<=100000)，表示数的数量，第二行n个整数，表示这n个数字(1<=数字大小<=100)，数据保证只有一个数字出现奇数次。</p>","aboutOutput":"<p>输出一行，一个数，即出现奇数次的数字。</p>"},{"title":"煎鸡排","id":"d91dee639f274db3b479fbe1526f9e5d","description":"<p>辛苦工作一天后，饿坏了的程序员去学五吃鸡排饭。程序员点了n份鸡排。每个鸡排有两个面，每一面都需要在平底锅上煎1分钟。\r<br>不幸的是，厨师只有一个平底锅，在这个平底锅上，一次只能同时烹饪k个鸡排的一个面。请计算厨师需要花多少时间煎这些鸡排。</p>","aboutInput":"<p>输入两个整数n和k，空格隔开。(1 ≤ n, k ≤ 1000)</p>","aboutOutput":"<p>输出厨师煎n个鸡排，最少需要的分钟数。</p>"},{"title":"求亲和数","id":"0b8da730c9ad43f093ea1f3b7f40e424","description":"<p>遥远的古代，人们发现某些自然数之间有特殊的关系：设有两个数a和b，若a的所有除本身以外的因数之和等于b，b的所有除本身以外的因数之和等于a，则称a、b是一对亲和数。\r<br>\r<br>例如220和284：\r<br>220的真因数包括：1,2,4,5,10,11,20,22,44,55,110.\r<br>1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110 = 284\r<br>284的真因数包括：1,2,4,71,142.\r<br>1 + 2 + 4 + 71 + 142 = 220\r<br>所以220和284是一对亲和数。</p>","aboutInput":"<p>一个正整数n，1<=n<=100000。</p>","aboutOutput":"<p>所有亲和数对\"a b\"，满足a和b均小于等于n。\r<br>每个亲和数对占一行，两个数之间用一个空格隔开，较小数在前，较大数在后。\r<br>对于多个亲和数对，以较小数递增的顺序输出它们。</p>"},{"title":"一种等价类划分问题","id":"82731edfbf81434e8750d7ad20b66359","description":"<p>在两个正整数m和n给定的整数范围内（m 小于 n，且不包括m和n）取出各位数字之和均为k的倍数的所有数(k为正整数)，然后将这些数划分成若干个子集合，每个子集合中的元素满足其各位数字之和相等，请输出各个子集合, 其中  n 不大于10000。\r<br>\r<br>每个集合元素按从小到大输出，逗号间隔，如果有多个集合，则输出多行；各位数字之和较小的集合在前面行输出。\r<br><div style=\"font-weight: bold; color: blue\">\r<br>例如，m=11, n=35, k=3\r<br>则，\r<br>12,21,30 这三个数的每位数字之和均为3，且为3的倍数\r<br>15,24,33 这三个数的每位数字之和为6，且为3的倍数\r<br>18,27 这二个数的每位数字之和为9，也为3的倍数\r<br>由于三组数的最小数分别是12,15,18，于是，输出结果应为：\r<br>12,21,30\r<br>15,24,33\r<br>18,27\r<br></div></p>","aboutInput":"<p>一行，三个值：m,n,k，以逗号间隔</p>","aboutOutput":"<p>输出各位数之和为k的倍数的若干行，每一行中，其元素的各位数字和相等，且前面行元素的各位数字之和小于后面行元素的各位数字之和，每行的元素按增序排列，以逗号间隔。</p>"}]},{"title":"第一阶段编程练习（3）","id":"c078edd992da4b45bbe0bddb26b218eb","problems":[{"title":"骑车与走路","id":"6cd57b9a3b6943798794d24c44e93f70","description":"<p>在北大校园里,没有自行车,上课办事会很不方便.但实际上,并非去办任何事情都是骑车快,因为骑车总要找车、开锁、停车、锁车等,这要耽误一些时间.假设找到自行车,开锁并骑上自行车的时间为27秒;停车锁车的时间为23秒;步行每秒行走1.2米,骑车每秒行走3.0米.请判断走不同的距离去办事,是骑车快还是走路快.</p>","aboutInput":"<p>第一行为待处理的数据的数量n\r<br>其后每一行整数为一次办事要行走的距离,单位为米.</p>","aboutOutput":"<p>对应每个整数,如果骑车快,输出一行\"Bike\";如果走路快,输出一行\"Walk\";如果一样快,输出一行\"All\".</p>"},{"title":"习题(2-) 画矩形","id":"7f89efad1537471fae528e9c88601ee6","description":"<p>根据参数，画出矩形。</p>","aboutInput":"<p>输入由多行组成，每行四个参数：前两个参数为整数，依次代表矩形的高和宽（高不少于3行，宽不少于5行）；第三个参数是一个字符，表示用来画图的矩形符号；第四个参数为1或0，0代表空心，1代表实心。\r<br>当用户输入0时表示输入结束。</p>","aboutOutput":"<p>输出画出的图形</p>"},{"title":"分离整数的各个数位","id":"7491430f44fb45638184da4da3336ec3","description":"<p>从键盘输入一个任意的三位整数，要求正确地分离出它的百位、十位和个位数，并分别在屏幕上输出，输出采用每行输出一个数的方式，不带其它符号。</p>","aboutInput":"<p>一个任意的三位整数</p>","aboutOutput":"<p>每行输出一个数位</p>"},{"title":"习题(5-7) 统计满足条件的4位数个数","id":"dc15ebed0e144d7abc4d14e7e66c245f","description":"<p>编写程序，读入若干个四位数（小于30），求出其中满足以下条件的数的个数：\r<br>\r<br>个位数上的数字减去千位数上的数字，再减去百位数上的数字， 再减去十位数上的数字的结果大于零。</p>","aboutInput":"<p>输入为两行，第一行为四位数的个数，第二行为要读入的四位数</p>","aboutOutput":"<p>输出为一行，即满足条件的四位数的个数</p>"},{"title":"完美立方","id":"d47236837ca14d8abdb9df5a5bc27b8d","description":"<p>a的立方 = b的立方 + c的立方 + d的立方为完美立方等式。例如12的立方 = 6的立方 + 8的立方 + 10的立方 。编写一个程序，对任给的正整数N (N≤100)，寻找所有的四元组(a, b, c, d)，使得a的立方 = b的立方 + c的立方 + d的立方，其中a,b,c,d 大于 1, 小于等于N。</p>","aboutInput":"<p>正整数N (N≤100)</p>","aboutOutput":"<p>每行输出一个完美立方，按照a的值，从小到大依次输出。当两个完美立方等式中a的值相同，则依次按照b、c、d进行非降升序排列输出，即b值小的先输出、然后c值小的先输出、然后d值小的先输出。</p>"},{"title":"哥德巴赫猜想","id":"366665bdf6904d69b71d30ecececc5da","description":"<p>Geeker对计算机和数学非常感兴趣，刚学完计概的他有一天突发奇想能不能编段小程序验证下哥德巴赫猜想，即对于任意给定的偶数m（m>=6且不超出int范围），验证其能够表示成2个奇素数之和。注意，1被认为既不是素数，也不是合数。</p>","aboutInput":"<p>一个偶数m，m的取值范围6 <= m <= 10000</p>","aboutOutput":"<p>2个和是m的奇素数，它们之间用空格分隔。如果有多组满足，则每组之间需要换行（2个奇素数输出时候小的在前面，大的在后面）。每组之间没有重复，存在多个组满足的情况下按第一个奇数从小到大排列，见例子输出</p>"}]},{"title":"第一阶段编程练习（2）","id":"4e052500763b4b2c802354af784d4b2a","problems":[{"title":"习题(3-3) 计算(a+b)*c的值","id":"944859dcadfc4078a07b53c9c8af8a01","description":"<p>计算表达式(a+b)*c的值，其中a, b, c均为整数，且a,b,c的值介于-10000和10000之间（不含-10000和10000）</p>","aboutInput":"<p>输入仅一行，包括三个整数a, b和c</p>","aboutOutput":"<p>输出也是一行，即表达式的值</p>"},{"title":"两数之和","id":"0e0e89f41d964c2c9e758e089a5c2c98","description":"<p>从键盘输入两个整数，计算这两个整数的和，并输出。</p>","aboutInput":"<p>两个用空格分隔的整数。</p>","aboutOutput":"<p>两个数之和。</p>"},{"title":"计算书费","id":"ca49691ea7eb41748b2d3f6f138aaff1","description":"<p>下面是一个图书的单价表： \r<br>计算概论        28.9 元/本 \r<br>数据结构与算法  32.7 元/本 \r<br>数字逻辑        45.6 元/本 \r<br>C++程序设计教程 78 元/本 \r<br>人工智能        35 元/本 \r<br>计算机体系结构  86.2 元/本 \r<br>编译原理        27.8 元/本 \r<br>操作系统        43 元/本 \r<br>计算机网络      56 元/本 \r<br>JAVA程序设计    65 元/本 \r<br>给定每种图书购买的数量，编程计算应付的总费用。</p>","aboutInput":"<p>输入第一行包含一个正整数k (0 < k < 100)，表示有k组测试数据；接下来k行，每行包含一组测试数据。每组测试数据包含10个整数(大于等于0，小于等于100)，分别表示购买的《计算概论》、《数据结构与算法》、《数字逻辑》、《C++程序设计教程》、《人工智能》、《计算机体系结构》、《编译原理》、《操作系统》、《计算机网络》、《JAVA程序设计》的数量（以本为单位）。每两个整数用一个空格分开。</p>","aboutOutput":"<p>对于每组测试数据，输出一行。该行包含一个浮点数f，表示应付的总费用。精确到小数点后两位。\r<br>精确到小数点后两位的写法：\r<br>C++ 可用 cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; << sum;（需引入 &lt;iomanip&gt; 头文件）\r<br>C 语言可用printf(\"%.2f\\n\", sum);</p>"},{"title":"题目三 最大最小数之差","id":"4091f1e0939b4747862f5f4a2131dd1b","description":"<p>给定三个整数，求这三个数中最大值与最小值之差。</p>","aboutInput":"<p>只有一行，包括待处理的三个整数。</p>","aboutOutput":"<p>一共一行，输出最大数减去最小数的差。</p>"},{"title":"石头剪子布","id":"76b4152cbb3942dab7e81ce7504902dd","description":"<p>石头剪子布是一种很简单的游戏：\r<br>石头胜剪子\r<br>剪子胜布\r<br>布胜石头\r<br>A和B猜拳，已知他们出拳的序列，编程求出谁胜谁负。</p>","aboutInput":"<p>第一行是一个正整数n(n<200)，表明A和B一共猜了n次拳。\r<br>接下来是n行，每行有两个数字，分别表示A和B在这次猜拳中出了什么。0表示石头，1表示剪刀，2表示布。</p>","aboutOutput":"<p>输出一行，\"A\"表示A胜，\"B\"表示B胜，\"Tie\"表示平局。</p>"},{"title":"不与最大数相同的数字之和","id":"f22bd142bf674a7e8ea7f9d7f9b18ee9","description":"<p>输出一个整数数列中不与最大数相同的数字之和</p>","aboutInput":"<p>输入分为两行：\r<br>第一行为N(N为接下来数字的个数，N<=100)；\r<br>第二行为N个整数，以空格隔开；\r<br></p>","aboutOutput":"<p>输出为N个数中除去最大数其余数字之和。（注意，最大数可能出现多次）</p>"},{"title":"数组逆序","id":"a22c145c4dc742209b5a170cea7bfaf9","description":"<p>将一个数组中的值按逆序重新存放。例如，原来的顺序为8,6,5,4,1。要求改为1,4,5,6,8。</p>","aboutInput":"<p>输入为两行：第一行数组中元素的个数n（1 &lt; n &lt; 100)，第二行是n个整数，每两个整数之间用空格分隔。</p>","aboutOutput":"<p>输出为一行：输出逆序后数组的整数，每两个整数之间用空格分隔。</p>"}]},{"title":"第一阶段编程练习（1）","id":"23c7518f7d3449f98180f8318e9c04ae","problems":[{"title":"房价 vs 年薪","id":"790e56c5f82c425d96914e02791b65d9","description":"<p>小袁同学今年刚毕业，成为了一名光荣的程序员。他找了一份工作，年薪是X万元，并且公司保证每年给他固定加薪8%。 小袁同学很开心，他看上了一套房子，售价是M万元，于是下决心攒钱买下。假设房子的价格每年稳定上涨10%，再假设小袁不吃不喝，把所有的钱都存下来买房。\r<br>那么请你帮他算算，他多少年后可以买的起这套房子？ \r<br>如果100年内(含100年) 都不可能的话，则输出“Forget it.”</p>","aboutInput":"<p>一共有2行。\r<br>第一行是一个整数X，表示小袁同学的初始年薪；\r<br>第二行是一个整数M，表示房子的售价。</p>","aboutOutput":"<p>如果有解，输出一个整数N，表示第N年小袁可以攒够钱买房子；\r<br>如果解大于100或者无解，则输出“Forget it.”\r<br></p>"},{"title":"北京地铁","id":"dc83e659ed954a9fa76c402bece9e869","description":"<p>北京地铁涨价了，现在的地铁票价计算方法如下：\r<br>6公里内 3元 （包括6公里）\r<br>6-12 公里 4元 （不包括6公里，包括12公里）\r<br>12-32 公里 每10公里加1元（不包括12公里，包括32公里，不满10公里按10公里算）\r<br>32公里以上 每20公里加1元（不包括32公里，不满20公里按20公里算）\r<br>比如，50公里时，需要 4+2+1=7元\r<br>\r<br>同时，北京地铁也给出了优惠方案：\r<br>每个自然月内，使用交通卡满100元，则票价可打8折；满150元，则票价可打5折；满400元，则票价不打折。\r<br>\r<br>现在，小明有一张公交卡，小明想知道自己现在坐地铁的票价是多少？请你写程序完成这个功能。\r<br></p>","aboutInput":"<p>输入有两个整数，一个是小明现在这个月的累计消费，一个是小明本次乘坐的里程数\r<br></p>","aboutOutput":"<p>输出为本次乘坐的票价，保留两位小数</p>"},{"title":"习题(4-2) 点和正方形的关系","id":"f6a42ebd90c043968384d13c7cf42707","description":"<p>有一个正方形，四个角的坐标（x,y)分别是（1，-1），（1，1），（-1，1），（-1，-1），x是横轴，y是纵轴。写一个程序，判断一个给定的点是否在这个正方形内。</p>","aboutInput":"<p>输入坐标x，y</p>","aboutOutput":"<p>点在正方形内，输出yes；点在正方形外，输出no</p>"},{"title":"习题(4-4) 能被3，5，7整除的数","id":"247ba8340a9a4daa8faf1d6e9226a04a","description":"<p>输入一个整数，判断它能否被3，5，7整除，并输出以下信息： \r<br>（1）能同时被3，5，7整除（直接输出3 5 7，每个数中间一个空格）； \r<br>（2）能被其中两个数整除（输出两个数，小的在前，大的在后。例如：3 5或者 3 7或者5 7,中间用空格分隔） \r<br>（3）能被其中一个数整除（输出这个除数） \r<br>（4）不能被任何数整除；（输出小写字符n)\r<br></p>","aboutInput":"<p>一个整数</p>","aboutOutput":"<p>实现题目的要求</p>"},{"title":"最受欢迎的医生","id":"f0e7a10d5f6c449facd94230f543972a","description":"<p>北医三院近期开展了最受欢迎的医生评选活动，评选规则是：请患者及其家属给自己最喜欢的医生投票（每位参加评选的医生有一个相应的编号），票数最多的医生评选为年度最受欢迎医生，奖励年终休假一个月。</p>","aboutInput":"<p>输入为两行，第一行为投票的总数n（0 < n <= 100），第二行为投票情况（医生编号均为整数,最大不超过15）</p>","aboutOutput":"<p>输出最受欢迎的医生的编号</p>"},{"title":"菲波那契数列","id":"57bfff186ece4e62b85f790199b2c360","description":"<p>菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。 \r<br>给出一个正整数a，要求菲波那契数列中第a个数是多少。\r<br></p>","aboutInput":"<p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a(1 <= a <= 20)</p>","aboutOutput":"<p>n行，每行输出对应一个输入。输出应是一个正整数，为菲波那契数列中第a个数的大小</p>"}]},{"title":"试手练习（选做，不记成绩）","id":"570939369cef4ad18de4261b375ba508","problems":[{"title":"1000 A+B Problem","id":"a28e77853698410b9175afc1d409ae0f","description":"<p>Calculate a+b</p>","aboutInput":"<p>Two integer a,b (0<=a,b<=10)</p>","aboutOutput":"<p>Output a+b</p>"},{"title":"计算平均年龄","id":"c19f16062bb64bfba14c61498ddb8707","description":"<p>班上有学生若干名，给出每名学生的年龄（整数），求班上所有学生的平均年龄，保留到小数点后两位。</p>","aboutInput":"<p>第一行有一个整数n（1<= n <= 100），表示学生的人数。其后n行每行有1个整数，取值为15到25。</p>","aboutOutput":"<p>输出一行，该行包含一个浮点数，为要求的平均年龄，保留到小数点后两位。</p>"},{"title":"温度表达转化","id":"e12f686fbe254676b72030f225d1316e","description":"<p>已知华氏气温F，请利用公式 C = 5 * (F-32) / 9 （其中C表示摄氏温度，F表示华氏温度） 计算它对应的摄氏温度C。</p>","aboutInput":"<p>一个整数n，表示下面一共有n个输入\r<br>下面接n行，每行一个实数F，表示华氏温度</p>","aboutOutput":"<p>输出共n行，每行一个实数C，其值为F对应的摄氏温度</p>"},{"title":"例题(3.10) 大象喝水","id":"2bb3a1024ada4f3ca82f88456d150e38","description":"<p>一只大象口渴了，要喝20升水才能解渴，但现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才会解渴。(设PAI=3.14159) </p>","aboutInput":"<p>输入有一行，两个整数：分别表示小圆桶的深h，和底面半径r，单位厘米。 \r<br></p>","aboutOutput":"<p>输出也只有一行，大象至少要喝水的桶数。</p>"},{"title":"习题(8-10) 分数求和","id":"a68317b5106b4120899ca477a889fb29","description":"<p>输入n个分数并对他们求和，用约分之后的最简形式表示。\r<br>比如：\r<br>q/p = x1/y1  + x2/y2 +....+ xn/yn，\r<br>q/p要求是归约之后的形式。\r<br>如：5/6已经是最简形式，3/6需要规约为1/2, 3/1需要规约成3，10/3就是最简形式。\r<br>\r<br>PS:分子和分母都没有为0的情况，也没有出现负数的情况</p>","aboutInput":"<p>第一行的输入n,代表一共有几个分数需要求和\r<br>接下来的n行是分数</p>","aboutOutput":"<p>输出只有一行，即归约后的结果</p>"},{"title":"习题(4-5) 最大数输出","id":"af1dab7ed59e413593e02de88f25aa76","description":"<p>输入三个整数,输出最大的数。</p>","aboutInput":"<p>输入为一行，共三个整数。</p>","aboutOutput":"<p>输出为最大的整数。</p>"},{"title":"最简真分数序列","id":"1757e8e3604740948352552326132f01","description":"<p>所谓最简真分数是指分子小于分母，且不能约分的分数。给定 n（1 < n < 200）个非负整数（每个整数不超过3位），哪两个整数分别作为分子和分母能够构成最简真分数。输出所有的最简真分数组合；若没有，则输出NO。\r<br></p>","aboutInput":"<p>第1行为正整数个数n\r<br>其后为n个非负整数，空格间隔。</p>","aboutOutput":"<p>输出所有最简真分数，分子小的排在前面；若分子相同，分母小的排在前面。各分数之间用逗号间隔。\r<br>若没有，则输出NO</p>"},{"title":"题目二 统计字符","id":"8f7db698f280414f84460c387876bfd6","description":"<p>输入一个长度小于1000字符串，统计这个字符串中‘*’ ‘@＇出现的次数。</p>","aboutInput":"<p>只有一行，一个包括可能包括了多个‘*’，’@’ </p>","aboutOutput":"<p>一共二行，分别输出二种符号的个数。</p>"},{"title":"甲流病人初筛","id":"eeb3ea42f61f4ddd98858758c34221d5","description":"<p>目前正是甲流盛行时期，为了更好地进行分流治疗，医院在挂号时要求对病人的体温和咳嗽情况进行检查，对于体温超过37.5度（含等于37.5度）并且咳嗽的病人初步判定为甲流病人（初筛）。现需要统计某天前来挂号就诊的病人中有多少人被初筛为甲流病人。</p>","aboutInput":"<p>第一行是某天前来挂号就诊的病人数n\r<br>其后有n行，每行是病人的信息，包括三个信息：姓名（字符串，不含空格，最多8个字符）、体温（float）、是否咳嗽（整数，1表示咳嗽，0表示不咳嗽）\r<br></p>","aboutOutput":"<p>行数不确定，但最后一行是一个整数m，表示被初筛为甲流的病人数，之前有m行，每行按输入顺序输出病人的姓名</p>"},{"title":"小于当前数的数","id":"3292e0e1ecec4a289287d567018b7b11","description":"<p>给你一个数组 nums，对于其中每个元素 nums[i]，请你统计数组中比它小的所有数字的数目。\r<br>\r<br>换而言之，对于每个 nums[i] 你必须计算出有效的 j 的数量，其中 j 满足 j != i 且 nums[j] < nums[i]。</p>","aboutInput":"<p>第一行是一个整数 n，表示数组大小。\r<br>接下来 n 行，每行表示数组中的一个数。\r<br>\r<br>0 <= n <= 1000, 每个数都在int可以表示的范围内.</p>","aboutOutput":"<p>n 行，每行代表数组中比它小的数的个数。\r<br>\r<br>如果没有要输出的数据，输出\"None\"。</p>"},{"title":"记数问题","id":"c464027785c8456aab1af00e06dde997","description":"<p>试计算在区间 1 到 n 的所有整数中，数字 x(0 ≤ x ≤ 9)共出现了多少次？例如，在 1 到 11 中，即在 1、2、3、4、5、6、7、8、9、10、11 中，数字 1 出现了 4 次，数字2出现了1次。</p>","aboutInput":"<p>输入共 1 行，包含 2 个整数 n、x，之间用一个空格隔开。</p>","aboutOutput":"<p>输出共 1 行，包含一个整数，表示 x 出现的次数。</p>"},{"title":"换酒问题","id":"0d2d948fdedd4815a82ffc36b77a1138","description":"<p>小区便利店正在促销，用 a 个空酒瓶可以兑换一瓶新酒。你购入了 b 瓶酒。\r<br>\r<br>如果喝掉了酒瓶中的酒，那么酒瓶就会变成空的。\r<br>\r<br>请你计算最多能喝到多少瓶酒。</p>","aboutInput":"<p>用空格分开的两个整数，分别为a和b。\r<br>\r<br>1 < a <= 1000000000,\r<br>0 <= b <= 1000000000.</p>","aboutOutput":"<p>能喝到多少瓶酒。</p>"},{"title":"喝奶茶","id":"97fd297f285447b485345fe25252501b","description":"<p>计算概论班级一共有150名同学，学号分别为N1到N150。期末考试后，老师决定请部分同学喝奶茶，但是大家都很优秀，老师没办法进行挑选。于是助教们想了这样一种挑选幸运同学的方法：\r<br>给每位同学一个编号牌，仅在正面写有该名同学编号i，编号与学号数字相同，即学号为Ni的同学得到的编号牌正面写有数字i。\r<br>然后将所有编号牌正面朝上放到桌子上，同学们按照编号从小到大依次进行如下操作：\r<br>N1同学把所有编号牌翻面一次；\r<br>N2同学把编号为2、4、6、8 ... 148、150的编号牌翻面一次；\r<br>N3同学把编号为3、6、9 ... 147、150的编号牌翻面一次；\r<br>N4同学把编号为4、8、12 ... 144、148的编号牌翻面一次；\r<br>......\r<br>以此规律直到150名同学操作完为止，规定正面朝下的编号牌对应的同学能够喝老师请的奶茶。\r<br>请编写程序计算这些幸运的同学的人数，并按照数字从小到大的顺序依次输出其学号。</p>","aboutInput":"<p>无</p>","aboutOutput":"<p>第一行为幸运同学的学号，以空格间隔\r<br>第二行为幸运同学的人数</p>"},{"title":"回型加密-十进制版","id":"7e2503f4a95a474b8c860168f82bc856","description":"<p>计算概论班的同学发明了一种新的文本加密算法--将文本转化为十进制数并回型存放到矩阵里。\r<br>使用者事先约定好矩阵的行数与列数，并且规定文本中仅有大写字母和空格。他们事先按照这样的方法对文本进行编码：\r<br>空格 = 00\r<br>A = 01\r<br>B = 02\r<br>C = 03\r<br>......\r<br>Y = 25\r<br>Z = 26\r<br>然后，然后按照回型遍历的方法，将每个字符对应编码的2位十进制数依次填入矩阵中，多出来的位置使用0补充。例如，对于信息“PKU”，在矩阵行列数均是3的情况下，填充结果为：\r<br>\r<br>1 -> 6 -> 1\r<br>                |\r<br>0 -> 0      1\r<br> |              |\r<br>0 <- 1 <- 2\r<br>\r<br>再逐行将矩阵中的数字连起来，完成加密过程。也就是上述例子中的信息最终会被加密为：\r<br>161001012</p>","aboutInput":"<p>第一行为两个整数R和C，中间用一个空格隔开，分别表示行数和列数，其中1≤R≤10，1≤C≤10。\r<br>第二行为一个只包含大写字母和空格的字符串，不会以空格开头。1≤字符串长度≤(R * C) / 2。</p>","aboutOutput":"<p>一行，为加密后的十进制串</p>"},{"title":"小茗同学很方","id":"fef471d7649f412482bb43f7d0d23bcb","description":"<p>n(n不超过1000)个有蛀牙的小朋友被老师组织集体去拔牙，但是排队的时候由于所有小朋友都害怕拔牙，所以没人主动排在前面。这时老师想了一个有趣的方法，所有小朋友排成一列，按照顺序进行编号（编号从1开始），并从1依次进行报数，数到m的小朋友去拔牙，然后后面的小朋友再从1开始报数，下一个数到m的小朋友去拔牙…依此循环往复。小茗同学既不想先去拔牙，也不想被留到最后再拔，于是他决定第k(k<=n)个去拔。请你帮小茗同学想想他应该排在第几个位置才能“如愿以偿”。</p>","aboutInput":"<p>n m k</p>","aboutOutput":"<p>一个整数，小茗在队列中的位置(从1开始)</p>"},{"title":"有趣的二进制","id":"300eec7960eb41ae9aaec834335e22f4","description":"<p>最近北京大学药学院的小晨在计概课上学习到二进制之后对其产生了浓厚的兴趣，在每次操作仅能移动相邻的0和1的前提下，她想知道把一个二进制数转换成另一个二进制数的最小操作数。</p>","aboutInput":"<p>输入共三行：\r<br>\r<br>第一行为一个整数n (0 < n <= 200)，代表二进制数的位数\r<br>\r<br>第二行为第一个二进制数的每一位\r<br>\r<br>第三行为第二个二进制数的每一位</p>","aboutOutput":"<p>输出将第一个二进制数转换为第二个二进制数的最少操作数，如果答案不存在，则输出-1</p>"},{"title":"重排空格","id":"af7d880117294e568696ee3ba04e0543","description":"<p>给你一个字符串 text，该字符串由若干被空格包围的单词组成。每个单词由一个或者多个小写英文字母组成，并且两个单词之间至少存在一个空格。\r<br>请你重新排列空格，使每对相邻单词之间的空格数目都  相等  ，并尽可能  最大化  该数目。如果不能重新平均分配所有空格，请  将多余的空格放置在字符串末尾  ，这也意味着输出的字符串应当与原字符串的长度相等。</p>","aboutInput":"<p>一行由小写英文字母和空格组成的字符串。\r<br>\r<br>字符串长度不超过1000，至少包含一个单词。</p>","aboutOutput":"<p>一行和原字符串长度相等的字符串。</p>"},{"title":"谁能拿到最多的硬币","id":"d833d1dc7a2c4d3ea2d6b1ce56b50832","description":"<p>有n个硬币排成一排，每个硬币上用一个数字标识了它的价值。每次要你从最左边或者最右边拿出一个硬币。总共拿k次，写一个算法，使能拿到的硬币的价值和最大。</p>","aboutInput":"<p>输入包含两行，第一行为n， k；\r<br>第二行包含n个数字，表示n个硬币的价值。\r<br>\r<br>1 <= k <= n <= 100000\r<br>单个硬币的价值大于0且不超过10000.</p>","aboutOutput":"<p>输出可以拿到的k个硬币最大的价值和。</p>"},{"title":"n-gram串频统计","id":"594e2196e29143fa8bfd063dc032cb21","description":"<p>在文本分析中常用到n-gram串频统计方法，即，统计相邻的n 个单元（如单词、汉字、或者字符）在整个文本中出现的频率。假设有一个字符串，请以字符为单位按n-gram 统计长度为 n 的子串出现的频度，并输出最高频度以及频度最高的子串。设定所给的字符串不多于500个字符，且 1 < n <5。 如果有多个子串频度最高，则根据其在序列中第一次出现的次序输出多个，每行输出一个，如果最高频度不大于1，则输出 NO\r<br>\r<br>例如，n=3，所给的串是：abcdefabcd，\r<br>则，所有的 3-gram是：abc,bcd,cde,def,efa,fab,abc,bcd。最后面的cd不足以形成3-gram，则不考虑。这样，abc 和 bcd 都出现了2次，其余的只出现了1次，于是，输出结果应该是：\r<br>2\r<br>abc\r<br>bcd\r<br></p>","aboutInput":"<p>第一行为n\r<br>第二行为字符串\r<br></p>","aboutOutput":"<p>输出最高频度以及频度最高的所有子串。</p>"},{"title":"过河问题","id":"f4a4e2f96e494992921fcbbb180561f5","description":"<p>n个人想要过一条河,河上只有一条小船,这条船只能容纳两个人,因此这n个人想要全部过河的话就必须来回很多次.每个人划船的速度有所不同,两个人一起的时候船的速度是划得较慢的人的速度.请你找出一种策略使得他们在尽可能短的时间内过河.</p>","aboutInput":"<p>第一行包括一个正整数t,表示有t组数据.\r<br>每组数据两行,第一行是人数n(n&lt;=1000),第二行是n个人各自过河所需的时间(不大于100).</p>","aboutOutput":"<p>输出最短时间</p>"},{"title":"1052 花生问题","id":"e90207884099480bb850f80866c54e2a","description":"<p>鲁宾逊先生有一只宠物猴，名叫多多。这天，他们两个正沿着乡间小路散步，突然发现路边的告示牌上贴着一张小小的纸条：“欢迎免费品尝我种的花生！??熊字”。 \r<br>\r<br>鲁宾逊先生和多多都很开心，因为花生正是他们的最爱。在告示牌背后，路边真的有一块花生田，花生植株整齐地排列成矩形网格（如图1）。有经验的多多一眼就能看出，每棵花生植株下的花生有多少。例如在图2中的花生田里，只有位于(2, 5), (3, 7), (4, 2), (5, 4)的植株下长有花生，个数分别为13, 7, 15, 9。我们假定多多在每个单位时间内，可以做下列四件事情中的一件：(1)从路边跳到最靠近路边（即第一行）的某棵花生植株；(2)从一棵植株跳到前后左右与之相邻的另一棵植株；(3)采摘一棵植株下的花生；(4)从最靠近路边（即第一行）的某棵花生植株跳回路边。 \r<br>\r<br><img src=\"1928_1.jpg\">\r<br>\r<br>为了训练多多的算术，鲁宾逊先生说：“你先找出花生最多的植株，去采摘它的花生；然后再找出剩下的植株里花生最多的，去采摘它的花生；依此类推，不过你一定要在我限定的时间内回到路边。” 例如在图2中，沿着图示的路线，多多在21个单位时间内，最多可以采到37个花生。 \r<br>\r<br>现在给定一块花生田的大小和花生的分布，请问在限定时间内，多多最多可以采到多少个花生？注意可能只有部分植株下面长有花生，假设这些植株下的花生个数各不相同。</p>","aboutInput":"<p>输入第一行代表组数T。\r<br>之后每组第一行包括三个整数，M, N和K，用空格隔开；表示花生田的大小为M * N（1 <= M, N <= 20），多多采花生的限定时间为K（0 <= K <= 1000）个单位时间。接下来的M行，每行包括N个非负整数，也用空格隔开；第i + 1行的第j个整数Pij（0 <= Pij <= 500）表示花生田里植株(i, j)下花生的数目，0表示该植株下没有花生。</p>","aboutOutput":"<p>输出包括T组，每一行代表一组，只包含一个整数，即在限定时间内，多多最多可以采到花生的个数。</p>"},{"title":"循环数","id":"1e4611f6c2b24bf3ae8305bc9c8a557f","description":"<p>当一个N位的整数X满足下列条件时，称其为循环数：X与任意一个整数1≤Y ≤ N相乘时，都将产生一个X的“循环”。即：分别将这两个整数的第1位数字与最后1位数字连在一起，可以得到一个相同的数字循环；当然两个整数在该数字循环中的起始位置不同。例如，142857是一个循环数 \r<br>142857 *1 = 142857 \r<br>142857 *2 = 285714 \r<br>142857 *3 = 428571 \r<br>142857 *4 = 571428 \r<br>142857 *5 = 714285 \r<br>142857 *6 = 857142</p>","aboutInput":"<p>写一个程序判断一个整数是否是循环数。输入文件是一个整数序列，每个整数长度为2~60。注意：每个整数前面的零被看作是该整数的一部分，在计算N时要统计。例如“01”是一个2位的整数，而“1”是一个1位的整数。</p>","aboutOutput":"<p>对每个输入整数，输出一行，说明该整数是否是循环数。</p>"},{"title":"1140 最短前缀","id":"c5e8bb080d2041ff8a7d34c5dbe02c2c","description":"<p>一个字符串的前缀是从该字符串的第一个字符起始的一个子串。例如 \"carbon\"的字串是: \"c\", \"ca\", \"car\", \"carb\", \"carbo\", 和 \"carbon\"。注意到这里我们不认为空串是子串, 但是每个非空串是它自身的子串. 我们现在希望能用前缀来缩略地表示单词。例如, \"carbohydrate\" 通常用\"carb\"来缩略表示. 现在给你一组单词, 要求你找到唯一标识每个单词的最短前缀 \r<br>在下面的例子中，\"carbohydrate\" 能被缩略成\"carboh\", 但是不能被缩略成\"carbo\" (或其余更短的前缀) 因为已经有一个单词用\"carbo\"开始 \r<br>一个精确匹配会覆盖一个前缀匹配，例如，前缀\"car\"精确匹配单词\"car\". 因此 \"car\" 是 \"car\"的缩略语是没有二义性的 , “car”不会被当成\"carriage\"或者任何在列表中以\"car\"开始的单词.</p>","aboutInput":"<p>输入包括至少2行，至多1000行. 每行包括一个以小写字母组成的单词，单词长度至少是1，至多是20.</p>","aboutOutput":"<p>输出的行数与输入的行数相同。每行输出由相应行输入的单词开始，后面跟着一个空格接下来是相应单词的没有二义性的最短前缀标识符。</p>"},{"title":"流感","id":"276d231c9c6947268d75ebfd3a9e16e4","description":"<p>    学校里一共有n个学生。这n个学生里一共有m对朋友关系。\r<br>    在流感发作期，每个健康学生都要看望当天他生病的朋友（如果有的话），并在第二天被传染上疾病（除非他在免疫期内）；\r<br>    每个生病的学生在第二天都会痊愈，并在这一天具有免疫性。从第三天起，看望生病的朋友将再次使他染上流感。\r<br>    初始时（第一天），只有一个学生患有流感。试问多少天后流感会自动结束。\r<br></p>","aboutInput":"<p>第一行输入两个正整数n和m。\r<br>接下来m行每行两个正整数x,y，表示编号为x的学生和编号为y的学生是一对朋友。输入数据保证每一对朋友关系只描述一次。\r<br>最后一行输入一个正整数，代表初始时患有流感的学生的编号。\r<br>\r<br>n,m <= 100,000。\r<br></p>","aboutOutput":"<p>输出多少天后流感会结束。\r<br>\r<br>如果天数超过2,000,000,000，则视为流感不会结束，输出-1。\r<br></p>"},{"title":"破解密码","id":"b513c573a31749ed9501ca809e296a83","description":"<p>考虑一种加密方式，它需要一个任意长度的原文 m 和秘钥 key，其中要求原文和秘钥只包含大写和小写的英文字符。\r<br>\r<br>首先定义字符之间的加密，用字符 a 去加密字符 b 的结果是：\r<br>1. 首先把 a 和 b 转成数字 x 和 y。转换的规则是，小写字母 a 到 z 依次对应 0 到 25，大写字母依次对应 26 到 51。\r<br>2. 计算 x 和 y 的和 z，对 52 取模，即计算 (x + y) % 52。\r<br>3. 返回数字 z 对应的字符。\r<br>\r<br>现在来讲如何用秘钥 key 来加密原文 m：\r<br>1. 如果秘钥的 key 的长度小于 m，那么不停重复 key 直到长度不小于 m 为止。举例来说，如果原文是 beijing，秘钥是 PKUSAA，那么秘钥需要被重复称 PKUSAAPKUSAA。\r<br>2. 假设原文的长度是 n，那么对于每一个 1~n 的数字 i，都用 key 的第 i 个字符去加密 m 的第 i 个字符。\r<br>3. 返回结果。\r<br>\r<br>那么用 PKUSAA 去加密 beijing 的结果就是：QOcbINV\r<br>\r<br>现在火山哥有 n 个字符串，s[1] 到 s[n]，他对这些字符串做了 m 次加密操作：第 i 次加密操作用第 s[x[i]] 去加密 s[y[i]]，并把 s[y[i]] 替换成加密结果。\r<br>\r<br>现在依次给出 m 次加密操作，以及加密操作结束后每一个字符串的模样，你可以还原出这 n 个字符串原来的模样吗？</p>","aboutInput":"<p>第一行输入两个整数 n,m (1 <= n,m <= 1000)。\r<br>\r<br>接下来 m 行每行输入两个整数 x[i],y[i]，表示依次加密操作，保证 x[i] 不等于 y[i]。\r<br>\r<br>接下来 n 行每行输入一个字符串，表示加密最后的结果。字符串的长度在 1 到 100 之间，只包含大小写英文字符。</p>","aboutOutput":"<p>输出 n 行，每行一个字符串，表示原本的字符串。</p>"},{"title":"最大公约数（递归版）","id":"45c2582bc339470786758a27fe68f219","description":"<p>给定两个正整数，用递归的方法求它们的最大公约数。使用其他方法不得分！</p>","aboutInput":"<p>两个正整数。</p>","aboutOutput":"<p>两个正整数的最大公约数。</p>"},{"title":"022快速排序","id":"076a4fe9997144dd9e9b43cbeeb301f9","description":"<p>用快速排序法对一组数据由小到大进行排序。</p>","aboutInput":"<p>输入十个整数</p>","aboutOutput":"<p>用快速排序法由小到大排序后输出结果</p>"},{"title":"判断字符串是否为回文","id":"fc2753028c0140cebcaa52bce25d17fd","description":"<p>编程，输入一个字符串，输出该字符串是否回文。</p>","aboutInput":"<p>输入为一行字符串（字符串中没有空白字符，字符串长度不超过100）。</p>","aboutOutput":"<p>如果字符串是回文，输出yes；否则，输出no。</p>"},{"title":"布尔表达式","id":"395ef3ad2ce94663b48162159b57741f","description":"<p>输入一个布尔表达式，请你输出它的真假值。\r<br>比如：( V | V ) & F & ( F | V )\r<br>V表示true，F表示false，&表示与，|表示或，!表示非。\r<br>上式的结果是F</p>","aboutInput":"<p>输入包含多行，每行一个布尔表达式，表达式中可以有空格，总长度不超过1000</p>","aboutOutput":"<p>对每行输入，如果表达式为真，输出\"V\",否则出来\"F\"</p>"},{"title":"井底之蛙","id":"78bc4edd141c4481b13d928df80ea48f","description":"<p>自从上次遇到海龟之后，小青蛙就对大海充满了向往，以至于蚊不香、蝇不爱，连那软绵绵的泥浆躺起来也硌得慌，思量再三小青蛙决定要出去看一看。由于井太深，小青蛙不能直接跳出去，只能白天往上跳一点，加上可恶的井壁那么湿滑，晚上还要下落一些，小青蛙这就犯了难，到底啥时候才能出去了，你能帮帮它么？</p>","aboutInput":"<p>输入为一行，是以空格分隔的三个整数，分别代表井深、白天跳的高度、晚上下滑的高度。</p>","aboutOutput":"<p>输出一个整数，为青蛙跳出去需要的天数</p>"},{"title":"细菌的战争","id":"f11066904af549cb901319ac4d598c49","description":"<p>有两种细菌，一种是有害菌，繁殖能力很强，每小时会繁殖一倍；另一种是有益菌，繁殖能力较弱，每小时能繁殖百分之五（向下取整，也就是说，假设有益菌在某个小时的数量为整数m，下一个小时的数量则为(int)floor(1.05 * m);）。但在单位体积内，当有害菌数量超过一百万时，多出的细菌会因为密度太大而迅速死亡，直到细菌数量下降到一百万。已知每个有益菌每小时能消灭一个有害菌。给定单位体积内有害菌和有益菌的初始数量，请问多少小时后，有害菌将被有益菌消灭干净？</p>","aboutInput":"<p>输入的第一行为一个整数n，表示后边有n组数据。\r<br>每组数据占一行，有两个整数，依次为有害菌和有益菌单位体积中的初始数量。整数之间用一个空格分隔。</p>","aboutOutput":"<p>输出有n行，每行一个整数，为每组数据对应的有害菌将被有益菌消灭干净所用的小时数。</p>"},{"title":"营养与健康","id":"37be695827bb41a3a229e7ce9a993190","description":"<p>随着人们生活水平的日益提高，健康越来越受到大家的关注。营养搭配，合理膳食，开始成为人们日常饮食追求的目标。营养学家希望能在计算机上开发一套饮食指导系统，来帮助人们检查每日饮食搭配是否合理，并提出指导意见。\r<br>假设我们只考虑一种营养成分：钙。已知人体每天需摄入600-1000毫克钙。钙的主要来源有：豆腐，110毫克/100克；牛奶，120毫克/100克；海带，2250毫克/100克；虾米，880毫克/100克。当用户输入四种食物每天的摄入量后，系统就会判断钙的摄入量是否合理。\r<br></p>","aboutInput":"<p>一行，4个整数，分别表示用户每日摄入的豆腐、牛奶、海带、虾米的量，单位克</p>","aboutOutput":"<p>一行，饮食指导系统的反馈结果\r<br>如果摄入过量，输出\"OVER\"；如果摄入不足，输出\"UNDER\"；如果适量，输出\"FINE\"\r<br></p>"},{"title":"求交集","id":"8e817f1fc70849f78a2cbc68d2b57d3b","description":"<p>给定两个整数集合，输出交集，输出时，按元素从小到大的顺序输出，以逗号间隔。\r<br>\r<br>注意：给定的集合中可能有重复元素，但输出的交集中不能有重复元素。如果没有交集，则输出 NULL\r<br>\r<br>例：\r<br>集合A：1,3,5,6,10,6,8,11\r<br>集合B: 2,4,8,6,10,6,12,13\r<br>\r<br>那么，输出为：\r<br>6,8,10</p>","aboutInput":"<p>2行，每行表示一个集合的元素序列，元素之间以逗号间隔，假定每个集合不超出200个元素。</p>","aboutOutput":"<p>两个集合的交集，按元素从小到大输出，以逗号间隔。如果没有交集，则输出 NULL</p>"},{"title":"流感传染","id":"ed547c2b38d6404baec80b766e5cdf02","description":"<p>有一批易感人群住在网格状的宿舍区内，宿舍区为n*n的矩阵，每个格点为一个房间，房间里可能住人，也可能空着。在第一天，有些房间里的人得了流感，以后每天，得流感的人会使其邻居传染上流感，（已经得病的不变），空房间不会传染。请输出第m天得流感的人数。</p>","aboutInput":"<p>第一行一个数字n，n不超过100，表示有n*n的宿舍房间。\r<br>接下来的n行，每行n个字符，’.’表示第一天该房间住着健康的人，’#’表示该房间空着，’@’表示第一天该房间住着得流感的人。\r<br>接下来的一行是一个整数m，m不超过100.</p>","aboutOutput":"<p>输出第m天，得流感的人数</p>"}]},{"title":"抄程序练习（给没有基础的同学，选做，不记成绩）","id":"5c6bf4321fe64e2a8d7dc26f666d4d6e","problems":[{"title":"实现冒泡排序","id":"5d36bf15dfb140abbaad9dcf47ac85d0","description":"<p>请根据自己的理解编写冒泡排序算法，数组大小1000以内</p>","aboutInput":"<p>第一行是n，表示数组的大小\r<br>接着n行是数组的n个元素</p>","aboutOutput":"<p>排序之后的结果\r<br>一个元素一行</p>"},{"title":"习题(8-10) 分数求和","id":"a68317b5106b4120899ca477a889fb29","description":"<p>输入n个分数并对他们求和，用约分之后的最简形式表示。\r<br>比如：\r<br>q/p = x1/y1  + x2/y2 +....+ xn/yn，\r<br>q/p要求是归约之后的形式。\r<br>如：5/6已经是最简形式，3/6需要规约为1/2, 3/1需要规约成3，10/3就是最简形式。\r<br>\r<br>PS:分子和分母都没有为0的情况，也没有出现负数的情况</p>","aboutInput":"<p>第一行的输入n,代表一共有几个分数需要求和\r<br>接下来的n行是分数</p>","aboutOutput":"<p>输出只有一行，即归约后的结果</p>"},{"title":"大整数加法","id":"bd646775285c4543a3626e514555093d","description":"<p>求两个不超过400位的非负整数的和</p>","aboutInput":"<p>首先输入N，即测试数据的组数\r<br>每组测试数据输入：\r<br>一行，每行是两个不超过400位的非负整数，没有多余的前导0，两个整数之间用空格隔开\r<br></p>","aboutOutput":"<p>N行，输出两个大整数的和，没有前导0</p>"}]}]